services:
  api:
    container_name: scopemux_api
    build:
      context: .
      dockerfile: Dockerfile
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    networks:
      - app-network
    environment:
      - POSTGRES_SERVER=db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=app
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/app
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0

  db:
    container_name: scopemux_db
    image: postgres:15
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=app
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    container_name: scopemux_redis
    image: redis:7
    ports:
      - "6379:6379"
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  celery_worker:
    container_name: scopemux_celery_worker
    build:
      context: .
      dockerfile: Dockerfile-celery
    command: celery -A app.worker.celery_app worker --loglevel=info
    volumes:
      - .:/app
    depends_on:
      - api
      - redis
    networks:
      - app-network
    environment:
      - POSTGRES_SERVER=db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=app
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/app
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0

  celery_beat:
    container_name: scopemux_celery_beat
    build:
      context: .
      dockerfile: Dockerfile-celerybeat
    command: celery -A app.worker.celery_app beat --loglevel=info
    volumes:
      - .:/app
    depends_on:
      - api
      - redis
    networks:
      - app-network
    environment:
      - POSTGRES_SERVER=db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=app
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/app
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0

volumes:
  postgres_data: {}

networks:
  app-network:
    driver: bridge
