[test_runner_lib] Test granularity level: 5 (EXACT)
[test_runner_lib] Shared libraries missing, running scripts/build_shared_libs.sh...
Building shared libraries in /home/matrillo/apps/scopemux-core/build/tree-sitter-libs
Converting static libraries to shared libraries...
Created shared libraries:
-rwxrwxr-x 1 matrillo matrillo 3566904 Aug  2 23:23 libtree-sitter-cpp.so
-rwxrwxr-x 1 matrillo matrillo  627536 Aug  2 23:23 libtree-sitter-c.so
-rwxrwxr-x 1 matrillo matrillo  386944 Aug  2 23:23 libtree-sitter-javascript.so
-rwxrwxr-x 1 matrillo matrillo  484368 Aug  2 23:23 libtree-sitter-python.so
-rwxrwxr-x 1 matrillo matrillo  267048 Aug  2 23:23 libtree-sitter.so
-rwxrwxr-x 1 matrillo matrillo 1443832 Aug  2 23:23 libtree-sitter-typescript.so
Done building shared libraries.
[test_runner_lib] Setting LD_LIBRARY_PATH to include: /home/matrillo/apps/scopemux-core/build/tree-sitter-libs
rm: cannot remove 'asan.log*': No such file or directory
[run_c_tests.sh] Skipping clean build
DEBUG: prepare_clean_build_dir received build_dir='/home/matrillo/apps/scopemux-core/build-c'
[test_runner_lib] Creating build directory: '/home/matrillo/apps/scopemux-core/build-c'
DEBUG: setup_cmake_config received project_root_dir='/home/matrillo/apps/scopemux-core', build_dir='/home/matrillo/apps/scopemux-core/build-c'
[test_runner_lib] Running CMake configuration: cmake -S /home/matrillo/apps/scopemux-core -B /home/matrillo/apps/scopemux-core/build-c -G 'Unix Makefiles'
-- CMake build type: Debug
-- pybind11 v3.0.0 
-- Memory sanitizers enabled for debug build
-- Python include path from sysconfig: /usr/include/python3.10
-- Python include dirs: /usr/include/python3.10
-- Python libraries: /usr/lib/x86_64-linux-gnu/libpython3.10.so
-- Configuration summary:
--   C Compiler: GNU 11.4.0
--   Python: 3.10.12
--   Installation prefix: /usr/local
--   Memory debugging: OFF
--   Valgrind compatibility: OFF
-- Forcing -g debug info for all test targets
-- Memory sanitizers enabled for debug build
-- Python include path from sysconfig: /usr/include/python3.10
-- Python include dirs: /usr/include/python3.10
-- Python libraries: /usr/lib/x86_64-linux-gnu/libpython3.10.so
-- Configured Scopemux Bindings C Tests with Criterion.
-- Copied example files and expected JSON to build directory for validation.
-- Configuration summary:
--   C Compiler: GNU 11.4.0
--   C++ Compiler: GNU 11.4.0
--   Tree-sitter core libraries built to: /home/matrillo/apps/scopemux-core/build-c/tree-sitter-libs
-- Configuring done
-- Generating done
-- Build files have been written to: /home/matrillo/apps/scopemux-core/build-c
[run_c_tests.sh] Building C example AST tests executable...
[test_runner_lib] Building C Example AST Tests in /home/matrillo/apps/scopemux-core/build-c...
[test_runner_lib] Successfully built C Example AST Tests
[test_runner_lib] Processing c/basic_syntax tests...
[test_runner_lib] Found 3 test files
[test_runner_lib] Testing: core/tests/examples/c/basic_syntax/docstring_test.c
[DEBUG] Directory listing before test execution:
total 10516
-rw-rw----  1 matrillo matrillo    2156 Aug  2 21:14 asan.log.2928676
-rw-rw----  1 matrillo matrillo    8307 Aug  2 21:14 asan.log.2928678
-rw-rw----  1 matrillo matrillo    2156 Aug  2 21:14 asan.log.2928700
-rw-rw----  1 matrillo matrillo    8307 Aug  2 21:14 asan.log.2928707
-rw-rw----  1 matrillo matrillo    2156 Aug  2 21:14 asan.log.2928734
-rw-rw----  1 matrillo matrillo    8441 Aug  2 21:14 asan.log.2928736
-rw-rw----  1 matrillo matrillo    2156 Aug  2 22:31 asan.log.2941000
-rw-rw----  1 matrillo matrillo    8307 Aug  2 22:31 asan.log.2941002
-rw-rw----  1 matrillo matrillo    2156 Aug  2 22:31 asan.log.2941017
-rw-rw----  1 matrillo matrillo    8307 Aug  2 22:31 asan.log.2941023
-rw-rw----  1 matrillo matrillo    2156 Aug  2 22:31 asan.log.2941055
-rw-rw----  1 matrillo matrillo    8441 Aug  2 22:31 asan.log.2941057
-rw-rw----  1 matrillo matrillo    2156 Aug  2 22:50 asan.log.2953571
-rw-rw----  1 matrillo matrillo    8307 Aug  2 22:50 asan.log.2953573
-rw-rw----  1 matrillo matrillo    2156 Aug  2 22:50 asan.log.2953588
-rw-rw----  1 matrillo matrillo    8307 Aug  2 22:50 asan.log.2953590
-rw-rw----  1 matrillo matrillo    2156 Aug  2 22:50 asan.log.2953606
-rw-rw----  1 matrillo matrillo    8441 Aug  2 22:50 asan.log.2953608
-rw-rw----  1 matrillo matrillo    2156 Aug  2 22:51 asan.log.2957003
-rw-rw----  1 matrillo matrillo    8307 Aug  2 22:51 asan.log.2957005
-rw-rw----  1 matrillo matrillo    2156 Aug  2 22:51 asan.log.2957020
-rw-rw----  1 matrillo matrillo    8307 Aug  2 22:51 asan.log.2957022
-rw-rw----  1 matrillo matrillo    2156 Aug  2 22:51 asan.log.2957041
-rw-rw----  1 matrillo matrillo    8441 Aug  2 22:51 asan.log.2957043
-rw-rw----  1 matrillo matrillo    2156 Aug  2 22:54 asan.log.2960814
-rw-rw----  1 matrillo matrillo    8307 Aug  2 22:54 asan.log.2960816
-rw-rw----  1 matrillo matrillo    2156 Aug  2 22:54 asan.log.2960839
-rw-rw----  1 matrillo matrillo    8307 Aug  2 22:54 asan.log.2960841
-rw-rw----  1 matrillo matrillo    2156 Aug  2 22:54 asan.log.2960857
-rw-rw----  1 matrillo matrillo    8441 Aug  2 22:54 asan.log.2960859
-rw-rw----  1 matrillo matrillo    2156 Aug  2 22:55 asan.log.2964116
-rw-rw----  1 matrillo matrillo    8307 Aug  2 22:55 asan.log.2964118
-rw-rw----  1 matrillo matrillo    2156 Aug  2 22:55 asan.log.2964135
-rw-rw----  1 matrillo matrillo    8307 Aug  2 22:55 asan.log.2964137
-rw-rw----  1 matrillo matrillo    2156 Aug  2 22:55 asan.log.2964167
-rw-rw----  1 matrillo matrillo    8441 Aug  2 22:55 asan.log.2964182
-rw-rw----  1 matrillo matrillo    2156 Aug  2 22:55 asan.log.2967372
-rw-rw----  1 matrillo matrillo    8307 Aug  2 22:55 asan.log.2967374
-rw-rw----  1 matrillo matrillo    2156 Aug  2 22:55 asan.log.2967393
-rw-rw----  1 matrillo matrillo    8307 Aug  2 22:55 asan.log.2967395
-rw-rw----  1 matrillo matrillo    2156 Aug  2 22:55 asan.log.2967411
-rw-rw----  1 matrillo matrillo    8441 Aug  2 22:55 asan.log.2967413
-rw-rw----  1 matrillo matrillo    2156 Aug  2 22:58 asan.log.2971166
-rw-rw----  1 matrillo matrillo    8307 Aug  2 22:58 asan.log.2971168
-rw-rw----  1 matrillo matrillo    2156 Aug  2 22:58 asan.log.2971185
-rw-rw----  1 matrillo matrillo    8307 Aug  2 22:58 asan.log.2971187
-rw-rw----  1 matrillo matrillo    2156 Aug  2 22:58 asan.log.2971204
-rw-rw----  1 matrillo matrillo    8441 Aug  2 22:58 asan.log.2971206
-rw-rw----  1 matrillo matrillo    2156 Aug  2 23:03 asan.log.2975969
-rw-rw----  1 matrillo matrillo    8307 Aug  2 23:03 asan.log.2975971
-rw-rw----  1 matrillo matrillo    2156 Aug  2 23:03 asan.log.2975987
-rw-rw----  1 matrillo matrillo    8307 Aug  2 23:03 asan.log.2975990
-rw-rw----  1 matrillo matrillo    2156 Aug  2 23:03 asan.log.2976006
-rw-rw----  1 matrillo matrillo    8441 Aug  2 23:03 asan.log.2976008
-rw-rw----  1 matrillo matrillo    2156 Aug  2 23:06 asan.log.2980003
-rw-rw----  1 matrillo matrillo    8307 Aug  2 23:06 asan.log.2980005
-rw-rw----  1 matrillo matrillo    2156 Aug  2 23:06 asan.log.2980029
-rw-rw----  1 matrillo matrillo    8307 Aug  2 23:06 asan.log.2980031
-rw-rw----  1 matrillo matrillo    2156 Aug  2 23:06 asan.log.2980047
-rw-rw----  1 matrillo matrillo    8441 Aug  2 23:06 asan.log.2980049
-rw-rw----  1 matrillo matrillo    2156 Aug  2 23:06 asan.log.2983230
-rw-rw----  1 matrillo matrillo    8307 Aug  2 23:06 asan.log.2983232
-rw-rw----  1 matrillo matrillo    2156 Aug  2 23:06 asan.log.2983257
-rw-rw----  1 matrillo matrillo    8307 Aug  2 23:06 asan.log.2983259
-rw-rw----  1 matrillo matrillo    2156 Aug  2 23:06 asan.log.2983277
-rw-rw----  1 matrillo matrillo    8441 Aug  2 23:06 asan.log.2983279
-rw-rw----  1 matrillo matrillo    2156 Aug  2 23:08 asan.log.2989596
-rw-rw----  1 matrillo matrillo    8307 Aug  2 23:08 asan.log.2989598
-rw-rw----  1 matrillo matrillo    2156 Aug  2 23:08 asan.log.2989614
-rw-rw----  1 matrillo matrillo    8307 Aug  2 23:08 asan.log.2989617
-rw-rw----  1 matrillo matrillo    2156 Aug  2 23:08 asan.log.2989634
-rw-rw----  1 matrillo matrillo    8441 Aug  2 23:08 asan.log.2989636
-rw-rw----  1 matrillo matrillo    2156 Aug  2 23:14 asan.log.2993957
-rw-rw----  1 matrillo matrillo    8307 Aug  2 23:14 asan.log.2993961
-rw-rw----  1 matrillo matrillo    2156 Aug  2 23:14 asan.log.2993979
-rw-rw----  1 matrillo matrillo    8307 Aug  2 23:14 asan.log.2993984
-rw-rw----  1 matrillo matrillo    2156 Aug  2 23:14 asan.log.2994010
-rw-rw----  1 matrillo matrillo    8441 Aug  2 23:14 asan.log.2994017
-rw-rw----  1 matrillo matrillo    2156 Aug  2 23:15 asan.log.2997572
-rw-rw----  1 matrillo matrillo    8307 Aug  2 23:15 asan.log.2997574
-rw-rw----  1 matrillo matrillo    2156 Aug  2 23:15 asan.log.2997589
-rw-rw----  1 matrillo matrillo    8307 Aug  2 23:15 asan.log.2997591
-rw-rw----  1 matrillo matrillo    2156 Aug  2 23:15 asan.log.2997609
-rw-rw----  1 matrillo matrillo    8441 Aug  2 23:15 asan.log.2997611
-rw-rw----  1 matrillo matrillo    2156 Aug  2 23:16 asan.log.3000908
-rw-rw----  1 matrillo matrillo    8307 Aug  2 23:16 asan.log.3000910
-rw-rw----  1 matrillo matrillo    2156 Aug  2 23:16 asan.log.3000925
-rw-rw----  1 matrillo matrillo    8307 Aug  2 23:16 asan.log.3000927
-rw-rw----  1 matrillo matrillo    2156 Aug  2 23:16 asan.log.3000948
-rw-rw----  1 matrillo matrillo    8441 Aug  2 23:16 asan.log.3000962
-rw-rw----  1 matrillo matrillo    2156 Aug  2 23:17 asan.log.3004264
-rw-rw----  1 matrillo matrillo    8307 Aug  2 23:17 asan.log.3004266
-rw-rw----  1 matrillo matrillo    2156 Aug  2 23:17 asan.log.3004287
-rw-rw----  1 matrillo matrillo    8307 Aug  2 23:17 asan.log.3004289
-rw-rw----  1 matrillo matrillo    2156 Aug  2 23:17 asan.log.3004305
-rw-rw----  1 matrillo matrillo    8441 Aug  2 23:17 asan.log.3004307
-rw-rw----  1 matrillo matrillo    2156 Aug  2 23:22 asan.log.3008975
-rw-rw----  1 matrillo matrillo    8441 Aug  2 23:22 asan.log.3008977
-rw-rw----  1 matrillo matrillo    2156 Aug  2 23:22 asan.log.3008992
-rw-rw----  1 matrillo matrillo   45753 Aug  2 23:22 asan.log.3008994
-rw-rw----  1 matrillo matrillo    2156 Aug  2 23:22 asan.log.3009011
-rw-rw----  1 matrillo matrillo    8441 Aug  2 23:22 asan.log.3009013
-rwxrwxr-x  1 matrillo matrillo 9147416 Aug  2 23:23 c_example_ast_tests
drwxrwxr-x 20 matrillo matrillo    4096 Aug  2 23:23 CMakeFiles
-rw-rw-r--  1 matrillo matrillo    2386 Aug  2 21:13 cmake_install.cmake
drwxrwxr-x  3 matrillo matrillo    4096 Aug  2 21:13 core
-rw-rw-r--  1 matrillo matrillo  678762 Aug  2 23:08 libtest_utilities.a
-rw-rw-r--  1 matrillo matrillo   51663 Aug  2 21:13 Makefile
[c Example Test: docstring_test.c] DEBUG: read_file_contents called with path: core/tests/examples/c/basic_syntax/docstring_test.c
[c Example Test: docstring_test.c] DEBUG: Current working directory: /home/matrillo/apps/scopemux-core/build-c/core/tests
[c Example Test: docstring_test.c] DEBUG: Directory listing for core/tests/examples/c/basic_syntax:
[c Example Test: docstring_test.c]   docstring_test.c
[c Example Test: docstring_test.c]   hello_world.c
[c Example Test: docstring_test.c]   .
[c Example Test: docstring_test.c]   hello_world.c.expected.json
[c Example Test: docstring_test.c]   variables_loops_conditions.c
[c Example Test: docstring_test.c]   variables_loops_conditions.c.expected.json
[c Example Test: docstring_test.c]   docstring_test.c.expected.json
[c Example Test: docstring_test.c]   ..
[c Example Test: docstring_test.c] DEBUG: file size for core/tests/examples/c/basic_syntax/docstring_test.c is 523 bytes
[c Example Test: docstring_test.c] DEBUG: About to allocate ParserContext of size 136
[c Example Test: docstring_test.c] DEBUG: safe_malloc returned raw_ptr=0x60d0000001e0
[c Example Test: docstring_test.c] DEBUG: after cast ctx=0x60d0000001e0
[c Example Test: docstring_test.c] DEBUG: About to memset ctx=0x60d0000001e0 with size 136
[c Example Test: docstring_test.c] DEBUG: memset completed successfully
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] Registered C language compliance callbacks
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] Registered language-specific compliance callbacks
[c Example Test: docstring_test.c] [scopemux] INFO: Loading hardcoded node type mappings
[c Example Test: docstring_test.c] [scopemux] Loaded 14 hardcoded node type mappings
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] Initialized node type mappings
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] Successfully initialized parser context at 0x60d0000001e0
[c Example Test: docstring_test.c] [DIAGNOSTIC-ENTRY] Entered parser_parse_string: ctx=0x60d0000001e0, content=0x616000031b80, content_length=523, filename=docstring_test.c, language=1
[c Example Test: docstring_test.c] [DEBUG] parser_clear starting for ctx=0x60d0000001e0
[c Example Test: docstring_test.c] [DEBUG] ctx->num_ast_nodes=0
[c Example Test: docstring_test.c] [scopemux] Loading hardcoded node type mappings:
[c Example Test: docstring_test.c]   functions -> NODE_FUNCTION
[c Example Test: docstring_test.c]   classes -> NODE_CLASS
[c Example Test: docstring_test.c]   methods -> NODE_METHOD
[c Example Test: docstring_test.c]   variables -> NODE_VARIABLE
[c Example Test: docstring_test.c]   modules -> NODE_MODULE
[c Example Test: docstring_test.c]   structs -> NODE_STRUCT
[c Example Test: docstring_test.c]   unions -> NODE_UNION
[c Example Test: docstring_test.c]   enums -> NODE_ENUM
[c Example Test: docstring_test.c]   typedefs -> NODE_TYPEDEF
[c Example Test: docstring_test.c]   includes -> NODE_INCLUDE
[c Example Test: docstring_test.c]   macros -> NODE_MACRO
[c Example Test: docstring_test.c]   docstrings -> NODE_DOCSTRING
[c Example Test: docstring_test.c]   interfaces -> NODE_INTERFACE
[c Example Test: docstring_test.c]   template_specializations -> NODE_TEMPLATE_SPECIALIZATION
[c Example Test: docstring_test.c] [QUERY_MANAGER_FREE] ENTER: manager=0x606000013a60
[c Example Test: docstring_test.c] [QUERY_MANAGER_FREE] Freeing queries_dir at 0x6020000013d0
[c Example Test: docstring_test.c] [QUERY_MANAGER_FREE] Freeing cached queries array at 0x604000001f10 (language_count=6)
[c Example Test: docstring_test.c] [QUERY_MANAGER_FREE] Freeing cached queries for language 0 at 0x611000000680 (query_count=0)
[c Example Test: docstring_test.c] [QUERY_MANAGER_FREE] Freeing QueryCacheEntry array at 0x611000000680
[c Example Test: docstring_test.c] [QUERY_MANAGER_FREE] Freeing cached queries for language 1 at 0x6110000007c0 (query_count=0)
[c Example Test: docstring_test.c] [QUERY_MANAGER_FREE] Freeing QueryCacheEntry array at 0x6110000007c0
[c Example Test: docstring_test.c] [QUERY_MANAGER_FREE] Freeing cached queries for language 2 at 0x611000000900 (query_count=0)
[c Example Test: docstring_test.c] [QUERY_MANAGER_FREE] Freeing QueryCacheEntry array at 0x611000000900
[c Example Test: docstring_test.c] [QUERY_MANAGER_FREE] Freeing cached queries for language 3 at 0x611000000a40 (query_count=0)
[c Example Test: docstring_test.c] [QUERY_MANAGER_FREE] Freeing QueryCacheEntry array at 0x611000000a40
[c Example Test: docstring_test.c] [QUERY_MANAGER_FREE] Freeing cached queries for language 4 at 0x611000000b80 (query_count=0)
[c Example Test: docstring_test.c] [QUERY_MANAGER_FREE] Freeing QueryCacheEntry array at 0x611000000b80
[c Example Test: docstring_test.c] [QUERY_MANAGER_FREE] Freeing cached queries for language 5 at 0x611000000cc0 (query_count=0)
[c Example Test: docstring_test.c] [QUERY_MANAGER_FREE] Freeing QueryCacheEntry array at 0x611000000cc0
[c Example Test: docstring_test.c] [QUERY_MANAGER_FREE] Freeing cached_queries array at 0x604000001f10
[c Example Test: docstring_test.c] [QUERY_MANAGER_FREE] Freeing languages array at 0x604000001ed0
[c Example Test: docstring_test.c] [QUERY_MANAGER_FREE] Freeing language_types array at 0x603000012220
[c Example Test: docstring_test.c] [QUERY_MANAGER_FREE] Freeing query_counts array at 0x604000001f50
[c Example Test: docstring_test.c] [QUERY_MANAGER_FREE] Freeing manager struct at 0x606000013a60
[c Example Test: docstring_test.c] [QUERY_MANAGER_FREE] EXIT: Query manager cleanup complete
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] AST node cleanup summary: freed 0 root nodes, skipped 0 child nodes (freed recursively), total tracked: 0
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [LIFECYCLE] Exiting parser_clear for ctx=0x60d0000001e0
[c Example Test: docstring_test.c] [DIAGNOSTIC-FACADE] Entered ts_init_parser: ctx=0x60d0000001e0, language=1
[c Example Test: docstring_test.c] [DIAGNOSTIC-ENTRY] Entered ts_init_parser_impl: ctx=0x60d0000001e0, language=1
[c Example Test: docstring_test.c] 
[c Example Test: docstring_test.c] ***** PARSER INITIALIZATION DIAGNOSTIC *****
[c Example Test: docstring_test.c] Test executable pid: 3012495
[c Example Test: docstring_test.c] Using statically linked Tree-sitter libraries
[c Example Test: docstring_test.c] SYMBOL RESOLUTION CHECK:
[c Example Test: docstring_test.c]   dlsym(tree_sitter_c): 0x5574e62db6b7
[c Example Test: docstring_test.c]   dlsym(tree_sitter_cpp): 0x5574e62f19a4
[c Example Test: docstring_test.c]   dlsym(tree_sitter_python): 0x5574e62f7764
[c Example Test: docstring_test.c]   dlsym(tree_sitter_javascript): 0x5574e62ff487
[c Example Test: docstring_test.c]   dlsym(tree_sitter_typescript): 0x5574e630684c
[c Example Test: docstring_test.c] [DIAGNOSTIC] ts_init_parser_impl: language enum: 1
[c Example Test: docstring_test.c] [DIAGNOSTIC] Language name: C
[c Example Test: docstring_test.c] [DIAGNOSTIC] Adapter lookup result: 0x5574e69d9060
[c Example Test: docstring_test.c] [DIAGNOSTIC] Adapter language_name: C
[c Example Test: docstring_test.c] [DIAGNOSTIC] Adapter get_ts_language pointer: 0x5574e62db6b7
[c Example Test: docstring_test.c] [DIAGNOSTIC] Result of get_ts_language(): 0x5574e69230c0
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] Successfully retrieved language object for language type 1, address: 0x5574e69230c0
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] Calling ts_parser_set_language with parser=0x61b00001d580, language=0x5574e69230c0
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] ts_parser_set_language succeeded
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] Verification: ts_parser_language() returned: 0x5574e69230c0
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] Language verification successful - pointer match confirmed
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] TS_INIT_PARSER_IMPL: PARSER INITIALIZATION COMPLETE
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] ===================================================================
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] Successfully set language for Tree-sitter parser
[c Example Test: docstring_test.c] DEBUG: Tried queries directory: queries/c (not found)
[c Example Test: docstring_test.c] DEBUG: Tried queries directory: ../queries/c (not found)
[c Example Test: docstring_test.c] DEBUG: Tried queries directory: ../../queries/c (not found)
[c Example Test: docstring_test.c] DEBUG: Using queries directory: ../../../queries/c
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] Found docstrings.scm at: ../../../queries/c/docstrings.scm
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] Loading hardcoded node type mappings (source of truth)...
[c Example Test: docstring_test.c] [scopemux] INFO: Loading hardcoded node type mappings
[c Example Test: docstring_test.c] [scopemux] Loaded 14 hardcoded node type mappings
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] Initialized query manager with queries directory: ../../../queries/c
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] ts_init_parser returned: TRUE
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] After initialization: Tree-sitter parser=0x61b00001d580, language=0x5574e69230c0
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] ===== PARSER_PARSE_STRING: PARSER INITIALIZATION COMPLETED =====
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [create_ast_root_node] ctx->filename: 'docstring_test.c' (basename: 'docstring_test.c')
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [create_ast_root_node] Created root node with name: 'docstring_test.c'
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [create_ast_root_node] Set qualified_name: 'docstring_test.c'
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Source code preview (first 100 bytes): '// Regular comment at the top (should NOT be file-level docstring)
[c Example Test: docstring_test.c] // This is just a normal comment
[c Example Test: docstring_test.c] ...'
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Tree-sitter root node: type='translation_unit', named=1, child_count=9
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Child 0: type='comment', named=1
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Child 1: type='comment', named=1
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Child 2: type='comment', named=1
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Child 3: type='comment', named=1
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Child 4: type='comment', named=1
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Processing query type: classes (1 of 8)
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Processing query type: classes
[c Example Test: docstring_test.c] DIRECT DEBUG: Entered query_manager_get_query for language 1, query_name: classes
[c Example Test: docstring_test.c] [QUERY_PATH_DEBUG] Trying primary path: ../../../queries/c/classes.scm
[c Example Test: docstring_test.c] [QUERY_PATH_DEBUG] SUCCESS: Found query at primary path: ../../../queries/c/classes.scm
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Query 'classes' has 0 patterns and 0 possible captures
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Mapped 'classes' query to AST node type 3
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Query 'classes' finished processing: 0 matches, 0 nodes added
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Query 'classes' FAILED: No nodes added
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Processing query type: structs (2 of 8)
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Processing query type: structs
[c Example Test: docstring_test.c] DIRECT DEBUG: Entered query_manager_get_query for language 1, query_name: structs
[c Example Test: docstring_test.c] [QUERY_PATH_DEBUG] Trying primary path: ../../../queries/c/structs.scm
[c Example Test: docstring_test.c] [QUERY_PATH_DEBUG] SUCCESS: Found query at primary path: ../../../queries/c/structs.scm
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Query 'structs' has 2 patterns and 2 possible captures
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Mapped structs query to NODE_STRUCT
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Mapped 'structs' query to AST node type 21
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Query 'structs' finished processing: 0 matches, 0 nodes added
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Query 'structs' FAILED: No nodes added
[c Example Test: docstring_test.c] [FUNCTIONS_DEBUG] About to process FUNCTIONS query at index 2
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Processing query type: functions (3 of 8)
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Processing query type: functions
[c Example Test: docstring_test.c] DIRECT DEBUG: Entered query_manager_get_query for language 1, query_name: functions
[c Example Test: docstring_test.c] [FUNCTIONS_DEBUG] *** DETECTED functions query request ***
[c Example Test: docstring_test.c] [QUERY_PATH_DEBUG] Trying primary path: ../../../queries/c/functions.scm
[c Example Test: docstring_test.c] [QUERY_PATH_DEBUG] SUCCESS: Found query at primary path: ../../../queries/c/functions.scm
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Query 'functions' has 2 patterns and 2 possible captures
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Mapped functions query to NODE_FUNCTION
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Mapped 'functions' query to AST node type 2
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Found match 1 with 2 captures
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Capture 0: name='function', node_type='function_definition', text='int foo(void) {
[c Example Test: docstring_test.c]     return 42;
[c Example Test: docstring_test.c] }'
[c Example Test: docstring_test.c] [SINGPLUR_DEBUG] Found singular form 'function' in query type 'functions'
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Main node detection: query_type='functions', capture_name='function', clean_capture_name='function', clean_query_type='functions', is_main_node=1
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Capture 1: name='name', node_type='identifier', text='foo'
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Main node detection: query_type='functions', capture_name='name', clean_capture_name='name', clean_query_type='functions', is_main_node=0
[c Example Test: docstring_test.c] [AST_CREATE] Created ASTNode at 0x611000016d40, type=2
[c Example Test: docstring_test.c] [AST_REGISTER_CALL] parser_add_ast_node(ctx, 0x611000016d40) returned 1
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Set content for function node 'foo'
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [SIGNATURE_DEBUG] Function 'foo' signature set to: 'int foo(void)'
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [WARNING] Attempt to free untracked memory at 0x603000015310 in /home/matrillo/apps/scopemux-core/core/src/parser/ts_query_processor.c:886 - this may be a library-allocated pointer
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Added FUNCTION node 'foo' to AST (and registered in context)
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Found match 2 with 2 captures
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Capture 0: name='function', node_type='function_definition', text='int bar(int x) {
[c Example Test: docstring_test.c]     return x * 2;
[c Example Test: docstring_test.c] }'
[c Example Test: docstring_test.c] [SINGPLUR_DEBUG] Found singular form 'function' in query type 'functions'
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Main node detection: query_type='functions', capture_name='function', clean_capture_name='function', clean_query_type='functions', is_main_node=1
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Capture 1: name='name', node_type='identifier', text='bar'
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Main node detection: query_type='functions', capture_name='name', clean_capture_name='name', clean_query_type='functions', is_main_node=0
[c Example Test: docstring_test.c] [AST_CREATE] Created ASTNode at 0x611000016e80, type=2
[c Example Test: docstring_test.c] [AST_REGISTER_CALL] parser_add_ast_node(ctx, 0x611000016e80) returned 1
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Set content for function node 'bar'
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [SIGNATURE_DEBUG] Function 'bar' signature set to: 'int bar(int x)'
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [WARNING] Attempt to free untracked memory at 0x6030000153a0 in /home/matrillo/apps/scopemux-core/core/src/parser/ts_query_processor.c:886 - this may be a library-allocated pointer
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Added FUNCTION node 'bar' to AST (and registered in context)
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Query 'functions' finished processing: 2 matches, 2 nodes added
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Query 'functions' SUCCEEDED: Added 2 node(s)
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Processing query type: methods (4 of 8)
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Processing query type: methods
[c Example Test: docstring_test.c] DIRECT DEBUG: Entered query_manager_get_query for language 1, query_name: methods
[c Example Test: docstring_test.c] [QUERY_PATH_DEBUG] Trying primary path: ../../../queries/c/methods.scm
[c Example Test: docstring_test.c] [QUERY_PATH_DEBUG] SUCCESS: Found query at primary path: ../../../queries/c/methods.scm
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Query 'methods' has 0 patterns and 0 possible captures
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Mapped 'methods' query to AST node type 4
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Query 'methods' finished processing: 0 matches, 0 nodes added
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Query 'methods' FAILED: No nodes added
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Processing query type: variables (5 of 8)
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Processing query type: variables
[c Example Test: docstring_test.c] DIRECT DEBUG: Entered query_manager_get_query for language 1, query_name: variables
[c Example Test: docstring_test.c] [QUERY_PATH_DEBUG] Trying primary path: ../../../queries/c/variables.scm
[c Example Test: docstring_test.c] [QUERY_PATH_DEBUG] SUCCESS: Found query at primary path: ../../../queries/c/variables.scm
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Query 'variables' has 2 patterns and 2 possible captures
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Mapped 'variables' query to AST node type 5
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Found match 1 with 2 captures
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Capture 0: name='variable', node_type='parameter_declaration', text='int x'
[c Example Test: docstring_test.c] [SINGPLUR_DEBUG] Found singular form 'variable' in query type 'variables'
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Main node detection: query_type='variables', capture_name='variable', clean_capture_name='variable', clean_query_type='variables', is_main_node=1
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Capture 1: name='name', node_type='identifier', text='x'
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Main node detection: query_type='variables', capture_name='name', clean_capture_name='name', clean_query_type='variables', is_main_node=0
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [HIERARCHY_DEBUG] Searching for parent function for VARIABLE 'x' at line 24, found 2 functions
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [HIERARCHY_DEBUG] Checking function 'foo' range [15-17] vs node range [24-24]
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [HIERARCHY_DEBUG] Checking function 'bar' range [24-26] vs node range [24-24]
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [HIERARCHY_DEBUG] Found containing function 'bar' for VARIABLE 'x'
[c Example Test: docstring_test.c] [AST_CREATE] Created ASTNode at 0x61100001ee00, type=5
[c Example Test: docstring_test.c] [AST_REGISTER_CALL] parser_add_ast_node(ctx, 0x61100001ee00) returned 1
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Set content for variable node 'x'
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [WARNING] Attempt to free untracked memory at 0x602000005a10 in /home/matrillo/apps/scopemux-core/core/src/parser/ts_query_processor.c:995 - this may be a library-allocated pointer
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Added VARIABLE node 'x' to AST (and registered in context)
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Query 'variables' finished processing: 1 matches, 1 nodes added
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Query 'variables' FAILED: No nodes added
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Processing query type: control_flow (6 of 8)
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Processing query type: control_flow
[c Example Test: docstring_test.c] DIRECT DEBUG: Entered query_manager_get_query for language 1, query_name: control_flow
[c Example Test: docstring_test.c] [QUERY_PATH_DEBUG] Trying primary path: ../../../queries/c/control_flow.scm
[c Example Test: docstring_test.c] [QUERY_PATH_DEBUG] SUCCESS: Found query at primary path: ../../../queries/c/control_flow.scm
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Query 'control_flow' has 5 patterns and 5 possible captures
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Mapped control_flow query to NODE_CONTROL_FLOW
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Mapped 'control_flow' query to AST node type 27
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Query 'control_flow' finished processing: 0 matches, 0 nodes added
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Query 'control_flow' FAILED: No nodes added
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Processing query type: imports (7 of 8)
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Processing query type: imports
[c Example Test: docstring_test.c] DIRECT DEBUG: Entered query_manager_get_query for language 1, query_name: imports
[c Example Test: docstring_test.c] [QUERY_PATH_DEBUG] Trying primary path: ../../../queries/c/imports.scm
[c Example Test: docstring_test.c] [QUERY_PATH_DEBUG] SUCCESS: Found query at primary path: ../../../queries/c/imports.scm
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Query 'imports' has 2 patterns and 2 possible captures
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Mapped 'imports' query to AST node type 9
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Query 'imports' finished processing: 0 matches, 0 nodes added
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Query 'imports' FAILED: No nodes added
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Processing query type: docstrings (8 of 8)
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Processing query type: docstrings
[c Example Test: docstring_test.c] DIRECT DEBUG: Entered query_manager_get_query for language 1, query_name: docstrings
[c Example Test: docstring_test.c] [QUERY_PATH_DEBUG] Trying primary path: ../../../queries/c/docstrings.scm
[c Example Test: docstring_test.c] [QUERY_PATH_DEBUG] SUCCESS: Found query at primary path: ../../../queries/c/docstrings.scm
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Query 'docstrings' has 4 patterns and 1 possible captures
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Mapped docstrings query to NODE_DOCSTRING
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Mapped 'docstrings' query to AST node type 19
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Found match 1 with 1 captures
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Capture 0: name='docstring', node_type='comment', text='// Regular comment at the top (should NO'
[c Example Test: docstring_test.c] [SINGPLUR_DEBUG] Found singular form 'docstring' in query type 'docstrings'
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Main node detection: query_type='docstrings', capture_name='docstring', clean_capture_name='docstring', clean_query_type='docstrings', is_main_node=1
[c Example Test: docstring_test.c] [AST_CREATE] Created ASTNode at 0x611000022b40, type=19
[c Example Test: docstring_test.c] [AST_REGISTER_CALL] parser_add_ast_node(ctx, 0x611000022b40) returned 1
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Set content for docstring node '// Regular comment at the top (should NOT be file-level docstring)'
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Added DOCSTRING node '// Regular comment at the top (should NOT be file-level docstring)' to AST (and registered in context)
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Found match 2 with 1 captures
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Capture 0: name='docstring', node_type='comment', text='// This is just a normal comment'
[c Example Test: docstring_test.c] [SINGPLUR_DEBUG] Found singular form 'docstring' in query type 'docstrings'
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Main node detection: query_type='docstrings', capture_name='docstring', clean_capture_name='docstring', clean_query_type='docstrings', is_main_node=1
[c Example Test: docstring_test.c] [AST_CREATE] Created ASTNode at 0x611000022c80, type=19
[c Example Test: docstring_test.c] [AST_REGISTER_CALL] parser_add_ast_node(ctx, 0x611000022c80) returned 1
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Set content for docstring node '// This is just a normal comment'
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Added DOCSTRING node '// This is just a normal comment' to AST (and registered in context)
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Found match 3 with 1 captures
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Capture 0: name='docstring', node_type='comment', text='/**
[c Example Test: docstring_test.c]  * @file docstring_test.c
[c Example Test: docstring_test.c]  * @brief '
[c Example Test: docstring_test.c] [SINGPLUR_DEBUG] Found singular form 'docstring' in query type 'docstrings'
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Main node detection: query_type='docstrings', capture_name='docstring', clean_capture_name='docstring', clean_query_type='docstrings', is_main_node=1
[c Example Test: docstring_test.c] [AST_CREATE] Created ASTNode at 0x611000022dc0, type=19
[c Example Test: docstring_test.c] [AST_REGISTER_CALL] parser_add_ast_node(ctx, 0x611000022dc0) returned 1
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Set content for docstring node '/**
[c Example Test: docstring_test.c]  * @file docstring_test.c
[c Example Test: docstring_test.c]  * @brief This is the file-level docstring and should be assigned to the root node.
[c Example Test: docstring_test.c]  *
[c Example Test: docstring_test.c]  * This file is for testing docstring extraction logic.
[c Example Test: docstring_test.c]  */'
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Added DOCSTRING node '/**
[c Example Test: docstring_test.c]  * @file docstring_test.c
[c Example Test: docstring_test.c]  * @brief This is the file-level docstring and should be assigned to the root node.
[c Example Test: docstring_test.c]  *
[c Example Test: docstring_test.c]  * This file is for testing docstring extraction logic.
[c Example Test: docstring_test.c]  */' to AST (and registered in context)
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Found match 4 with 1 captures
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Capture 0: name='docstring', node_type='comment', text='// Another regular comment'
[c Example Test: docstring_test.c] [SINGPLUR_DEBUG] Found singular form 'docstring' in query type 'docstrings'
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Main node detection: query_type='docstrings', capture_name='docstring', clean_capture_name='docstring', clean_query_type='docstrings', is_main_node=1
[c Example Test: docstring_test.c] [AST_CREATE] Created ASTNode at 0x611000023040, type=19
[c Example Test: docstring_test.c] [AST_REGISTER_CALL] parser_add_ast_node(ctx, 0x611000023040) returned 1
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Set content for docstring node '// Another regular comment'
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Added DOCSTRING node '// Another regular comment' to AST (and registered in context)
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Found match 5 with 1 captures
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Capture 0: name='docstring', node_type='comment', text='/**
[c Example Test: docstring_test.c]  * @brief This is a function-level d'
[c Example Test: docstring_test.c] [SINGPLUR_DEBUG] Found singular form 'docstring' in query type 'docstrings'
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Main node detection: query_type='docstrings', capture_name='docstring', clean_capture_name='docstring', clean_query_type='docstrings', is_main_node=1
[c Example Test: docstring_test.c] [AST_CREATE] Created ASTNode at 0x611000023180, type=19
[c Example Test: docstring_test.c] [AST_REGISTER_CALL] parser_add_ast_node(ctx, 0x611000023180) returned 1
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Set content for docstring node '/**
[c Example Test: docstring_test.c]  * @brief This is a function-level docstring for foo
[c Example Test: docstring_test.c]  */'
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Added DOCSTRING node '/**
[c Example Test: docstring_test.c]  * @brief This is a function-level docstring for foo
[c Example Test: docstring_test.c]  */' to AST (and registered in context)
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Found match 6 with 1 captures
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Capture 0: name='docstring', node_type='comment', text='/**
[c Example Test: docstring_test.c]  * @brief This is a function-level d'
[c Example Test: docstring_test.c] [SINGPLUR_DEBUG] Found singular form 'docstring' in query type 'docstrings'
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Main node detection: query_type='docstrings', capture_name='docstring', clean_capture_name='docstring', clean_query_type='docstrings', is_main_node=1
[c Example Test: docstring_test.c] [AST_CREATE] Created ASTNode at 0x6110000232c0, type=19
[c Example Test: docstring_test.c] [AST_REGISTER_CALL] parser_add_ast_node(ctx, 0x6110000232c0) returned 1
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Set content for docstring node '/**
[c Example Test: docstring_test.c]  * @brief This is a function-level docstring for foo
[c Example Test: docstring_test.c]  */'
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Added DOCSTRING node '/**
[c Example Test: docstring_test.c]  * @brief This is a function-level docstring for foo
[c Example Test: docstring_test.c]  */' to AST (and registered in context)
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Found match 7 with 1 captures
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Capture 0: name='docstring', node_type='comment', text='// Yet another comment'
[c Example Test: docstring_test.c] [SINGPLUR_DEBUG] Found singular form 'docstring' in query type 'docstrings'
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Main node detection: query_type='docstrings', capture_name='docstring', clean_capture_name='docstring', clean_query_type='docstrings', is_main_node=1
[c Example Test: docstring_test.c] [AST_CREATE] Created ASTNode at 0x611000023400, type=19
[c Example Test: docstring_test.c] [AST_REGISTER_CALL] parser_add_ast_node(ctx, 0x611000023400) returned 1
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Set content for docstring node '// Yet another comment'
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Added DOCSTRING node '// Yet another comment' to AST (and registered in context)
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Found match 8 with 1 captures
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Capture 0: name='docstring', node_type='comment', text='/**
[c Example Test: docstring_test.c]  * @brief This is a function-level d'
[c Example Test: docstring_test.c] [SINGPLUR_DEBUG] Found singular form 'docstring' in query type 'docstrings'
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Main node detection: query_type='docstrings', capture_name='docstring', clean_capture_name='docstring', clean_query_type='docstrings', is_main_node=1
[c Example Test: docstring_test.c] [AST_CREATE] Created ASTNode at 0x611000023540, type=19
[c Example Test: docstring_test.c] [AST_REGISTER_CALL] parser_add_ast_node(ctx, 0x611000023540) returned 1
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Set content for docstring node '/**
[c Example Test: docstring_test.c]  * @brief This is a function-level docstring for bar
[c Example Test: docstring_test.c]  */'
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Added DOCSTRING node '/**
[c Example Test: docstring_test.c]  * @brief This is a function-level docstring for bar
[c Example Test: docstring_test.c]  */' to AST (and registered in context)
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Found match 9 with 1 captures
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Capture 0: name='docstring', node_type='comment', text='/**
[c Example Test: docstring_test.c]  * @brief This is a function-level d'
[c Example Test: docstring_test.c] [SINGPLUR_DEBUG] Found singular form 'docstring' in query type 'docstrings'
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Main node detection: query_type='docstrings', capture_name='docstring', clean_capture_name='docstring', clean_query_type='docstrings', is_main_node=1
[c Example Test: docstring_test.c] [AST_CREATE] Created ASTNode at 0x611000023680, type=19
[c Example Test: docstring_test.c] [AST_REGISTER_CALL] parser_add_ast_node(ctx, 0x611000023680) returned 1
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Set content for docstring node '/**
[c Example Test: docstring_test.c]  * @brief This is a function-level docstring for bar
[c Example Test: docstring_test.c]  */'
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Added DOCSTRING node '/**
[c Example Test: docstring_test.c]  * @brief This is a function-level docstring for bar
[c Example Test: docstring_test.c]  */' to AST (and registered in context)
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Query 'docstrings' finished processing: 9 matches, 9 nodes added
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] Query 'docstrings' SUCCEEDED: Added 9 node(s)
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] AST query processing complete: 2 successful, 6 failed, total AST nodes: 11
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [QUERY_DEBUG] AST query processing summary: 2 successful, 6 failed, total AST nodes: 11
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [POST_PROCESS] Starting variable scoping post-processing for 13 nodes
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [POST_PROCESS] Found 1 variables and 0 control flow structures
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] [POST_PROCESS] Variable scoping post-processing complete
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] *** DOCSTRING_REMOVAL: Starting removal of 9 docstring nodes from 11 children ***
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] *** DOCSTRING_REMOVAL: Looking for docstring node '// Regular comment at the top (should NOT be file-level docstring)' to remove ***
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] *** DOCSTRING_REMOVAL: Found docstring node at index 2, removing ***
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] *** DOCSTRING_REMOVAL: Removed docstring node, new child count: 10 ***
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] *** DOCSTRING_REMOVAL: Looking for docstring node '// This is just a normal comment' to remove ***
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] *** DOCSTRING_REMOVAL: Found docstring node at index 2, removing ***
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] *** DOCSTRING_REMOVAL: Removed docstring node, new child count: 9 ***
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] *** DOCSTRING_REMOVAL: Looking for docstring node '/**
[c Example Test: docstring_test.c]  * @file docstring_test.c
[c Example Test: docstring_test.c]  * @brief This is the file-level docstring and should be assigned to the root node.
[c Example Test: docstring_test.c]  *
[c Example Test: docstring_test.c]  * This file is for testing docstring extraction logic.
[c Example Test: docstring_test.c]  */' to remove ***
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] *** DOCSTRING_REMOVAL: Found docstring node at index 2, removing ***
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] *** DOCSTRING_REMOVAL: Removed docstring node, new child count: 8 ***
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] *** DOCSTRING_REMOVAL: Looking for docstring node '// Another regular comment' to remove ***
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] *** DOCSTRING_REMOVAL: Found docstring node at index 2, removing ***
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] *** DOCSTRING_REMOVAL: Removed docstring node, new child count: 7 ***
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] *** DOCSTRING_REMOVAL: Looking for docstring node '/**
[c Example Test: docstring_test.c]  * @brief This is a function-level docstring for foo
[c Example Test: docstring_test.c]  */' to remove ***
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] *** DOCSTRING_REMOVAL: Found docstring node at index 2, removing ***
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] *** DOCSTRING_REMOVAL: Removed docstring node, new child count: 6 ***
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] *** DOCSTRING_REMOVAL: Looking for docstring node '/**
[c Example Test: docstring_test.c]  * @brief This is a function-level docstring for foo
[c Example Test: docstring_test.c]  */' to remove ***
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] *** DOCSTRING_REMOVAL: Found docstring node at index 2, removing ***
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] *** DOCSTRING_REMOVAL: Removed docstring node, new child count: 5 ***
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] *** DOCSTRING_REMOVAL: Looking for docstring node '// Yet another comment' to remove ***
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] *** DOCSTRING_REMOVAL: Found docstring node at index 2, removing ***
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] *** DOCSTRING_REMOVAL: Removed docstring node, new child count: 4 ***
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] *** DOCSTRING_REMOVAL: Looking for docstring node '/**
[c Example Test: docstring_test.c]  * @brief This is a function-level docstring for bar
[c Example Test: docstring_test.c]  */' to remove ***
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] *** DOCSTRING_REMOVAL: Found docstring node at index 2, removing ***
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] *** DOCSTRING_REMOVAL: Removed docstring node, new child count: 3 ***
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] *** DOCSTRING_REMOVAL: Looking for docstring node '/**
[c Example Test: docstring_test.c]  * @brief This is a function-level docstring for bar
[c Example Test: docstring_test.c]  */' to remove ***
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] *** DOCSTRING_REMOVAL: Found docstring node at index 2, removing ***
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] *** DOCSTRING_REMOVAL: Removed docstring node, new child count: 2 ***
[c Example Test: docstring_test.c] [2025-08-02 23:23:39] [INFO] *** DOCSTRING_REMOVAL: Finished removal, final child count: 2 ***
[c Example Test: docstring_test.c] DEBUG: read_file_contents called with path: core/tests/examples/c/basic_syntax/docstring_test.c.expected.json
[c Example Test: docstring_test.c] DEBUG: Current working directory: /home/matrillo/apps/scopemux-core/build-c/core/tests
[c Example Test: docstring_test.c] DEBUG: Directory listing for core/tests/examples/c/basic_syntax:
[c Example Test: docstring_test.c]   docstring_test.c
[c Example Test: docstring_test.c]   hello_world.c
[c Example Test: docstring_test.c]   .
[c Example Test: docstring_test.c]   hello_world.c.expected.json
[c Example Test: docstring_test.c]   variables_loops_conditions.c
[c Example Test: docstring_test.c]   variables_loops_conditions.c.expected.json
[c Example Test: docstring_test.c]   docstring_test.c.expected.json
[c Example Test: docstring_test.c]   ..
[c Example Test: docstring_test.c] DEBUG: file size for core/tests/examples/c/basic_syntax/docstring_test.c.expected.json is 1127 bytes
[c Example Test: docstring_test.c] [ERR ] <unknown>: Docstring mismatch - expected '/**\n * @brief This is a function-level docstring for foo\n */', got '/**
[c Example Test: docstring_test.c] [ERR ]  * @brief This is a function-level docstring for foo
[c Example Test: docstring_test.c] [ERR ]  */'
[c Example Test: docstring_test.c] [ERR ] (null): Docstring mismatch
[c Example Test: docstring_test.c] [ERR ] Expected docstring length: 62
[c Example Test: docstring_test.c] [ERR ] Actual docstring length: 60
[c Example Test: docstring_test.c] [ERR ] Expected docstring bytes:
[c Example Test: docstring_test.c] [ERR ] Byte 0: 47 (0x2f) '/'
[c Example Test: docstring_test.c] [ERR ] Byte 1: 42 (0x2a) '*'
[c Example Test: docstring_test.c] [ERR ] Byte 2: 42 (0x2a) '*'
[c Example Test: docstring_test.c] [ERR ] Byte 3: 92 (0x5c) '\'
[c Example Test: docstring_test.c] [ERR ] Byte 4: 110 (0x6e) 'n'
[c Example Test: docstring_test.c] [ERR ] Byte 5: 32 (0x20) ' '
[c Example Test: docstring_test.c] [ERR ] Byte 6: 42 (0x2a) '*'
[c Example Test: docstring_test.c] [ERR ] Byte 7: 32 (0x20) ' '
[c Example Test: docstring_test.c] [ERR ] Byte 8: 64 (0x40) '@'
[c Example Test: docstring_test.c] [ERR ] Byte 9: 98 (0x62) 'b'
[c Example Test: docstring_test.c] [ERR ] Byte 10: 114 (0x72) 'r'
[c Example Test: docstring_test.c] [ERR ] Byte 11: 105 (0x69) 'i'
[c Example Test: docstring_test.c] [ERR ] Byte 12: 101 (0x65) 'e'
[c Example Test: docstring_test.c] [ERR ] Byte 13: 102 (0x66) 'f'
[c Example Test: docstring_test.c] [ERR ] Byte 14: 32 (0x20) ' '
[c Example Test: docstring_test.c] [ERR ] Byte 15: 84 (0x54) 'T'
[c Example Test: docstring_test.c] [ERR ] Byte 16: 104 (0x68) 'h'
[c Example Test: docstring_test.c] [ERR ] Byte 17: 105 (0x69) 'i'
[c Example Test: docstring_test.c] [ERR ] Byte 18: 115 (0x73) 's'
[c Example Test: docstring_test.c] [ERR ] Byte 19: 32 (0x20) ' '
[c Example Test: docstring_test.c] [ERR ] Byte 20: 105 (0x69) 'i'
[c Example Test: docstring_test.c] [ERR ] Byte 21: 115 (0x73) 's'
[c Example Test: docstring_test.c] [ERR ] Byte 22: 32 (0x20) ' '
[c Example Test: docstring_test.c] [ERR ] Byte 23: 97 (0x61) 'a'
[c Example Test: docstring_test.c] [ERR ] Byte 24: 32 (0x20) ' '
[c Example Test: docstring_test.c] [ERR ] Byte 25: 102 (0x66) 'f'
[c Example Test: docstring_test.c] [ERR ] Byte 26: 117 (0x75) 'u'
[c Example Test: docstring_test.c] [ERR ] Byte 27: 110 (0x6e) 'n'
[c Example Test: docstring_test.c] [ERR ] Byte 28: 99 (0x63) 'c'
[c Example Test: docstring_test.c] [ERR ] Byte 29: 116 (0x74) 't'
[c Example Test: docstring_test.c] [ERR ] Byte 30: 105 (0x69) 'i'
[c Example Test: docstring_test.c] [ERR ] Byte 31: 111 (0x6f) 'o'
[c Example Test: docstring_test.c] [ERR ] Byte 32: 110 (0x6e) 'n'
[c Example Test: docstring_test.c] [ERR ] Byte 33: 45 (0x2d) '-'
[c Example Test: docstring_test.c] [ERR ] Byte 34: 108 (0x6c) 'l'
[c Example Test: docstring_test.c] [ERR ] Byte 35: 101 (0x65) 'e'
[c Example Test: docstring_test.c] [ERR ] Byte 36: 118 (0x76) 'v'
[c Example Test: docstring_test.c] [ERR ] Byte 37: 101 (0x65) 'e'
[c Example Test: docstring_test.c] [ERR ] Byte 38: 108 (0x6c) 'l'
[c Example Test: docstring_test.c] [ERR ] Byte 39: 32 (0x20) ' '
[c Example Test: docstring_test.c] [ERR ] Byte 40: 100 (0x64) 'd'
[c Example Test: docstring_test.c] [ERR ] Byte 41: 111 (0x6f) 'o'
[c Example Test: docstring_test.c] [ERR ] Byte 42: 99 (0x63) 'c'
[c Example Test: docstring_test.c] [ERR ] Byte 43: 115 (0x73) 's'
[c Example Test: docstring_test.c] [ERR ] Byte 44: 116 (0x74) 't'
[c Example Test: docstring_test.c] [ERR ] Byte 45: 114 (0x72) 'r'
[c Example Test: docstring_test.c] [ERR ] Byte 46: 105 (0x69) 'i'
[c Example Test: docstring_test.c] [ERR ] Byte 47: 110 (0x6e) 'n'
[c Example Test: docstring_test.c] [ERR ] Byte 48: 103 (0x67) 'g'
[c Example Test: docstring_test.c] [ERR ] Byte 49: 32 (0x20) ' '
[c Example Test: docstring_test.c] [ERR ] Actual docstring bytes:
[c Example Test: docstring_test.c] [ERR ] Byte 0: 47 (0x2f) '/'
[c Example Test: docstring_test.c] [ERR ] Byte 1: 42 (0x2a) '*'
[c Example Test: docstring_test.c] [ERR ] Byte 2: 42 (0x2a) '*'
[c Example Test: docstring_test.c] [ERR ] Byte 3: 10 (0x0a) '?'
[c Example Test: docstring_test.c] [ERR ] Byte 4: 32 (0x20) ' '
[c Example Test: docstring_test.c] [ERR ] Byte 5: 42 (0x2a) '*'
[c Example Test: docstring_test.c] [ERR ] Byte 6: 32 (0x20) ' '
[c Example Test: docstring_test.c] [ERR ] Byte 7: 64 (0x40) '@'
[c Example Test: docstring_test.c] [ERR ] Byte 8: 98 (0x62) 'b'
[c Example Test: docstring_test.c] [ERR ] Byte 9: 114 (0x72) 'r'
[c Example Test: docstring_test.c] [ERR ] Byte 10: 105 (0x69) 'i'
[c Example Test: docstring_test.c] [ERR ] Byte 11: 101 (0x65) 'e'
[c Example Test: docstring_test.c] [ERR ] Byte 12: 102 (0x66) 'f'
[c Example Test: docstring_test.c] [ERR ] Byte 13: 32 (0x20) ' '
[c Example Test: docstring_test.c] [ERR ] Byte 14: 84 (0x54) 'T'
[c Example Test: docstring_test.c] [ERR ] Byte 15: 104 (0x68) 'h'
[c Example Test: docstring_test.c] [ERR ] Byte 16: 105 (0x69) 'i'
[c Example Test: docstring_test.c] [ERR ] Byte 17: 115 (0x73) 's'
[c Example Test: docstring_test.c] [ERR ] Byte 18: 32 (0x20) ' '
[c Example Test: docstring_test.c] [ERR ] Byte 19: 105 (0x69) 'i'
[c Example Test: docstring_test.c] [ERR ] Byte 20: 115 (0x73) 's'
[c Example Test: docstring_test.c] [ERR ] Byte 21: 32 (0x20) ' '
[c Example Test: docstring_test.c] [ERR ] Byte 22: 97 (0x61) 'a'
[c Example Test: docstring_test.c] [ERR ] Byte 23: 32 (0x20) ' '
[c Example Test: docstring_test.c] [ERR ] Byte 24: 102 (0x66) 'f'
[c Example Test: docstring_test.c] [ERR ] Byte 25: 117 (0x75) 'u'
[c Example Test: docstring_test.c] [ERR ] Byte 26: 110 (0x6e) 'n'
[c Example Test: docstring_test.c] [ERR ] Byte 27: 99 (0x63) 'c'
[c Example Test: docstring_test.c] [ERR ] Byte 28: 116 (0x74) 't'
[c Example Test: docstring_test.c] [ERR ] Byte 29: 105 (0x69) 'i'
[c Example Test: docstring_test.c] [ERR ] Byte 30: 111 (0x6f) 'o'
[c Example Test: docstring_test.c] [ERR ] Byte 31: 110 (0x6e) 'n'
[c Example Test: docstring_test.c] [ERR ] Byte 32: 45 (0x2d) '-'
[c Example Test: docstring_test.c] [ERR ] Byte 33: 108 (0x6c) 'l'
[c Example Test: docstring_test.c] [ERR ] Byte 34: 101 (0x65) 'e'
[c Example Test: docstring_test.c] [ERR ] Byte 35: 118 (0x76) 'v'
[c Example Test: docstring_test.c] [ERR ] Byte 36: 101 (0x65) 'e'
[c Example Test: docstring_test.c] [ERR ] Byte 37: 108 (0x6c) 'l'
[c Example Test: docstring_test.c] [ERR ] Byte 38: 32 (0x20) ' '
[c Example Test: docstring_test.c] [ERR ] Byte 39: 100 (0x64) 'd'
[c Example Test: docstring_test.c] [ERR ] Byte 40: 111 (0x6f) 'o'
[c Example Test: docstring_test.c] [ERR ] Byte 41: 99 (0x63) 'c'
[c Example Test: docstring_test.c] [ERR ] Byte 42: 115 (0x73) 's'
[c Example Test: docstring_test.c] [ERR ] Byte 43: 116 (0x74) 't'
[c Example Test: docstring_test.c] [ERR ] Byte 44: 114 (0x72) 'r'
[c Example Test: docstring_test.c] [ERR ] Byte 45: 105 (0x69) 'i'
[c Example Test: docstring_test.c] [ERR ] Byte 46: 110 (0x6e) 'n'
[c Example Test: docstring_test.c] [ERR ] Byte 47: 103 (0x67) 'g'
[c Example Test: docstring_test.c] [ERR ] Byte 48: 32 (0x20) ' '
[c Example Test: docstring_test.c] [ERR ] Byte 49: 102 (0x66) 'f'
[c Example Test: docstring_test.c] [ERR ] <unknown>: Docstring mismatch - expected '', got '/**
[c Example Test: docstring_test.c] [ERR ]  * @brief This is a function-level docstring for bar
[c Example Test: docstring_test.c] [ERR ]  */'
[c Example Test: docstring_test.c] [ERR ] (null): Docstring mismatch
[c Example Test: docstring_test.c] [ERR ] Expected docstring length: 0
[c Example Test: docstring_test.c] [ERR ] Actual docstring length: 60
[c Example Test: docstring_test.c] [ERR ] Expected docstring bytes:
[c Example Test: docstring_test.c] [ERR ] Actual docstring bytes:
[c Example Test: docstring_test.c] [ERR ] Byte 0: 47 (0x2f) '/'
[c Example Test: docstring_test.c] [ERR ] Byte 1: 42 (0x2a) '*'
[c Example Test: docstring_test.c] [ERR ] Byte 2: 42 (0x2a) '*'
[c Example Test: docstring_test.c] [ERR ] Byte 3: 10 (0x0a) '?'
[c Example Test: docstring_test.c] [ERR ] Byte 4: 32 (0x20) ' '
[c Example Test: docstring_test.c] [ERR ] Byte 5: 42 (0x2a) '*'
[c Example Test: docstring_test.c] [ERR ] Byte 6: 32 (0x20) ' '
[c Example Test: docstring_test.c] [ERR ] Byte 7: 64 (0x40) '@'
[c Example Test: docstring_test.c] [ERR ] Byte 8: 98 (0x62) 'b'
[c Example Test: docstring_test.c] [ERR ] Byte 9: 114 (0x72) 'r'
[c Example Test: docstring_test.c] [ERR ] Byte 10: 105 (0x69) 'i'
[c Example Test: docstring_test.c] [ERR ] Byte 11: 101 (0x65) 'e'
[c Example Test: docstring_test.c] [ERR ] Byte 12: 102 (0x66) 'f'
[c Example Test: docstring_test.c] [ERR ] Byte 13: 32 (0x20) ' '
[c Example Test: docstring_test.c] [ERR ] Byte 14: 84 (0x54) 'T'
[c Example Test: docstring_test.c] [ERR ] Byte 15: 104 (0x68) 'h'
[c Example Test: docstring_test.c] [ERR ] Byte 16: 105 (0x69) 'i'
[c Example Test: docstring_test.c] [ERR ] Byte 17: 115 (0x73) 's'
[c Example Test: docstring_test.c] [ERR ] Byte 18: 32 (0x20) ' '
[c Example Test: docstring_test.c] [ERR ] Byte 19: 105 (0x69) 'i'
[c Example Test: docstring_test.c] [ERR ] Byte 20: 115 (0x73) 's'
[c Example Test: docstring_test.c] [ERR ] Byte 21: 32 (0x20) ' '
[c Example Test: docstring_test.c] [ERR ] Byte 22: 97 (0x61) 'a'
[c Example Test: docstring_test.c] [ERR ] Byte 23: 32 (0x20) ' '
[c Example Test: docstring_test.c] [ERR ] Byte 24: 102 (0x66) 'f'
[c Example Test: docstring_test.c] [ERR ] Byte 25: 117 (0x75) 'u'
[c Example Test: docstring_test.c] [ERR ] Byte 26: 110 (0x6e) 'n'
[c Example Test: docstring_test.c] [ERR ] Byte 27: 99 (0x63) 'c'
[c Example Test: docstring_test.c] [ERR ] Byte 28: 116 (0x74) 't'
[c Example Test: docstring_test.c] [ERR ] Byte 29: 105 (0x69) 'i'
[c Example Test: docstring_test.c] [ERR ] Byte 30: 111 (0x6f) 'o'
[c Example Test: docstring_test.c] [ERR ] Byte 31: 110 (0x6e) 'n'
[c Example Test: docstring_test.c] [ERR ] Byte 32: 45 (0x2d) '-'
[c Example Test: docstring_test.c] [ERR ] Byte 33: 108 (0x6c) 'l'
[c Example Test: docstring_test.c] [ERR ] Byte 34: 101 (0x65) 'e'
[c Example Test: docstring_test.c] [ERR ] Byte 35: 118 (0x76) 'v'
[c Example Test: docstring_test.c] [ERR ] Byte 36: 101 (0x65) 'e'
[c Example Test: docstring_test.c] [ERR ] Byte 37: 108 (0x6c) 'l'
[c Example Test: docstring_test.c] [ERR ] Byte 38: 32 (0x20) ' '
[c Example Test: docstring_test.c] [ERR ] Byte 39: 100 (0x64) 'd'
[c Example Test: docstring_test.c] [ERR ] Byte 40: 111 (0x6f) 'o'
[c Example Test: docstring_test.c] [ERR ] Byte 41: 99 (0x63) 'c'
[c Example Test: docstring_test.c] [ERR ] Byte 42: 115 (0x73) 's'
[c Example Test: docstring_test.c] [ERR ] Byte 43: 116 (0x74) 't'
[c Example Test: docstring_test.c] [ERR ] Byte 44: 114 (0x72) 'r'
[c Example Test: docstring_test.c] [ERR ] Byte 45: 105 (0x69) 'i'
[c Example Test: docstring_test.c] [ERR ] Byte 46: 110 (0x6e) 'n'
[c Example Test: docstring_test.c] [ERR ] Byte 47: 103 (0x67) 'g'
[c Example Test: docstring_test.c] [ERR ] Byte 48: 32 (0x20) ' '
[c Example Test: docstring_test.c] [ERR ] Byte 49: 102 (0x66) 'f'
[c Example Test: docstring_test.c] [ERR ] <unknown>: Docstring mismatch - expected '/**\n * @brief This is a function-level docstring for bar\n */', got '/**
[c Example Test: docstring_test.c] [ERR ]  * @brief This is a function-level docstring for bar
[c Example Test: docstring_test.c] [ERR ]  */'
[c Example Test: docstring_test.c] [ERR ] (null): Docstring mismatch
[c Example Test: docstring_test.c] [ERR ] Expected docstring length: 62
[c Example Test: docstring_test.c] [ERR ] Actual docstring length: 60
[c Example Test: docstring_test.c] [ERR ] Expected docstring bytes:
[c Example Test: docstring_test.c] [ERR ] Byte 0: 47 (0x2f) '/'
[c Example Test: docstring_test.c] [ERR ] Byte 1: 42 (0x2a) '*'
[c Example Test: docstring_test.c] [ERR ] Byte 2: 42 (0x2a) '*'
[c Example Test: docstring_test.c] [ERR ] Byte 3: 92 (0x5c) '\'
[c Example Test: docstring_test.c] [ERR ] Byte 4: 110 (0x6e) 'n'
[c Example Test: docstring_test.c] [ERR ] Byte 5: 32 (0x20) ' '
[c Example Test: docstring_test.c] [ERR ] Byte 6: 42 (0x2a) '*'
[c Example Test: docstring_test.c] [ERR ] Byte 7: 32 (0x20) ' '
[c Example Test: docstring_test.c] [ERR ] Byte 8: 64 (0x40) '@'
[c Example Test: docstring_test.c] [ERR ] Byte 9: 98 (0x62) 'b'
[c Example Test: docstring_test.c] [ERR ] Byte 10: 114 (0x72) 'r'
[c Example Test: docstring_test.c] [ERR ] Byte 11: 105 (0x69) 'i'
[c Example Test: docstring_test.c] [ERR ] Byte 12: 101 (0x65) 'e'
[c Example Test: docstring_test.c] [ERR ] Byte 13: 102 (0x66) 'f'
[c Example Test: docstring_test.c] [ERR ] Byte 14: 32 (0x20) ' '
[c Example Test: docstring_test.c] [ERR ] Byte 15: 84 (0x54) 'T'
[c Example Test: docstring_test.c] [ERR ] Byte 16: 104 (0x68) 'h'
[c Example Test: docstring_test.c] [ERR ] Byte 17: 105 (0x69) 'i'
[c Example Test: docstring_test.c] [ERR ] Byte 18: 115 (0x73) 's'
[c Example Test: docstring_test.c] [ERR ] Byte 19: 32 (0x20) ' '
[c Example Test: docstring_test.c] [ERR ] Byte 20: 105 (0x69) 'i'
[c Example Test: docstring_test.c] [ERR ] Byte 21: 115 (0x73) 's'
[c Example Test: docstring_test.c] [ERR ] Byte 22: 32 (0x20) ' '
[c Example Test: docstring_test.c] [ERR ] Byte 23: 97 (0x61) 'a'
[c Example Test: docstring_test.c] [ERR ] Byte 24: 32 (0x20) ' '
[c Example Test: docstring_test.c] [ERR ] Byte 25: 102 (0x66) 'f'
[c Example Test: docstring_test.c] [ERR ] Byte 26: 117 (0x75) 'u'
[c Example Test: docstring_test.c] [ERR ] Byte 27: 110 (0x6e) 'n'
[c Example Test: docstring_test.c] [ERR ] Byte 28: 99 (0x63) 'c'
[c Example Test: docstring_test.c] [ERR ] Byte 29: 116 (0x74) 't'
[c Example Test: docstring_test.c] [ERR ] Byte 30: 105 (0x69) 'i'
[c Example Test: docstring_test.c] [ERR ] Byte 31: 111 (0x6f) 'o'
[c Example Test: docstring_test.c] [ERR ] Byte 32: 110 (0x6e) 'n'
[c Example Test: docstring_test.c] [ERR ] Byte 33: 45 (0x2d) '-'
[c Example Test: docstring_test.c] [ERR ] Byte 34: 108 (0x6c) 'l'
[c Example Test: docstring_test.c] [ERR ] Byte 35: 101 (0x65) 'e'
[c Example Test: docstring_test.c] [ERR ] Byte 36: 118 (0x76) 'v'
[c Example Test: docstring_test.c] [ERR ] Byte 37: 101 (0x65) 'e'
[c Example Test: docstring_test.c] [ERR ] Byte 38: 108 (0x6c) 'l'
[c Example Test: docstring_test.c] [ERR ] Byte 39: 32 (0x20) ' '
[c Example Test: docstring_test.c] [ERR ] Byte 40: 100 (0x64) 'd'
[c Example Test: docstring_test.c] [ERR ] Byte 41: 111 (0x6f) 'o'
[c Example Test: docstring_test.c] [ERR ] Byte 42: 99 (0x63) 'c'
[c Example Test: docstring_test.c] [ERR ] Byte 43: 115 (0x73) 's'
[c Example Test: docstring_test.c] [ERR ] Byte 44: 116 (0x74) 't'
[c Example Test: docstring_test.c] [ERR ] Byte 45: 114 (0x72) 'r'
[c Example Test: docstring_test.c] [ERR ] Byte 46: 105 (0x69) 'i'
[c Example Test: docstring_test.c] [ERR ] Byte 47: 110 (0x6e) 'n'
[c Example Test: docstring_test.c] [ERR ] Byte 48: 103 (0x67) 'g'
[c Example Test: docstring_test.c] [ERR ] Byte 49: 32 (0x20) ' '
[c Example Test: docstring_test.c] [ERR ] Actual docstring bytes:
[c Example Test: docstring_test.c] [ERR ] Byte 0: 47 (0x2f) '/'
[c Example Test: docstring_test.c] [ERR ] Byte 1: 42 (0x2a) '*'
[c Example Test: docstring_test.c] [ERR ] Byte 2: 42 (0x2a) '*'
[c Example Test: docstring_test.c] [ERR ] Byte 3: 10 (0x0a) '?'
[c Example Test: docstring_test.c] [ERR ] Byte 4: 32 (0x20) ' '
[c Example Test: docstring_test.c] [ERR ] Byte 5: 42 (0x2a) '*'
[c Example Test: docstring_test.c] [ERR ] Byte 6: 32 (0x20) ' '
[c Example Test: docstring_test.c] [ERR ] Byte 7: 64 (0x40) '@'
[c Example Test: docstring_test.c] [ERR ] Byte 8: 98 (0x62) 'b'
[c Example Test: docstring_test.c] [ERR ] Byte 9: 114 (0x72) 'r'
[c Example Test: docstring_test.c] [ERR ] Byte 10: 105 (0x69) 'i'
[c Example Test: docstring_test.c] [ERR ] Byte 11: 101 (0x65) 'e'
[c Example Test: docstring_test.c] [ERR ] Byte 12: 102 (0x66) 'f'
[c Example Test: docstring_test.c] [ERR ] Byte 13: 32 (0x20) ' '
[c Example Test: docstring_test.c] [ERR ] Byte 14: 84 (0x54) 'T'
[c Example Test: docstring_test.c] [ERR ] Byte 15: 104 (0x68) 'h'
[c Example Test: docstring_test.c] [ERR ] Byte 16: 105 (0x69) 'i'
[c Example Test: docstring_test.c] [ERR ] Byte 17: 115 (0x73) 's'
[c Example Test: docstring_test.c] [ERR ] Byte 18: 32 (0x20) ' '
[c Example Test: docstring_test.c] [ERR ] Byte 19: 105 (0x69) 'i'
[c Example Test: docstring_test.c] [ERR ] Byte 20: 115 (0x73) 's'
[c Example Test: docstring_test.c] [ERR ] Byte 21: 32 (0x20) ' '
[c Example Test: docstring_test.c] [ERR ] Byte 22: 97 (0x61) 'a'
[c Example Test: docstring_test.c] [ERR ] Byte 23: 32 (0x20) ' '
[c Example Test: docstring_test.c] [ERR ] Byte 24: 102 (0x66) 'f'
[c Example Test: docstring_test.c] [ERR ] Byte 25: 117 (0x75) 'u'
[c Example Test: docstring_test.c] [ERR ] Byte 26: 110 (0x6e) 'n'
[c Example Test: docstring_test.c] [ERR ] Byte 27: 99 (0x63) 'c'
[c Example Test: docstring_test.c] [ERR ] Byte 28: 116 (0x74) 't'
[c Example Test: docstring_test.c] [ERR ] Byte 29: 105 (0x69) 'i'
[c Example Test: docstring_test.c] [ERR ] Byte 30: 111 (0x6f) 'o'
[c Example Test: docstring_test.c] [ERR ] Byte 31: 110 (0x6e) 'n'
[c Example Test: docstring_test.c] [ERR ] Byte 32: 45 (0x2d) '-'
[c Example Test: docstring_test.c] [ERR ] Byte 33: 108 (0x6c) 'l'
[c Example Test: docstring_test.c] [ERR ] Byte 34: 101 (0x65) 'e'
[c Example Test: docstring_test.c] [ERR ] Byte 35: 118 (0x76) 'v'
[c Example Test: docstring_test.c] [ERR ] Byte 36: 101 (0x65) 'e'
[c Example Test: docstring_test.c] [ERR ] Byte 37: 108 (0x6c) 'l'
[c Example Test: docstring_test.c] [ERR ] Byte 38: 32 (0x20) ' '
[c Example Test: docstring_test.c] [ERR ] Byte 39: 100 (0x64) 'd'
[c Example Test: docstring_test.c] [ERR ] Byte 40: 111 (0x6f) 'o'
[c Example Test: docstring_test.c] [ERR ] Byte 41: 99 (0x63) 'c'
[c Example Test: docstring_test.c] [ERR ] Byte 42: 115 (0x73) 's'
[c Example Test: docstring_test.c] [ERR ] Byte 43: 116 (0x74) 't'
[c Example Test: docstring_test.c] [ERR ] Byte 44: 114 (0x72) 'r'
[c Example Test: docstring_test.c] [ERR ] Byte 45: 105 (0x69) 'i'
[c Example Test: docstring_test.c] [ERR ] Byte 46: 110 (0x6e) 'n'
[c Example Test: docstring_test.c] [ERR ] Byte 47: 103 (0x67) 'g'
[c Example Test: docstring_test.c] [ERR ] Byte 48: 32 (0x20) ' '
[c Example Test: docstring_test.c] [ERR ] Byte 49: 102 (0x66) 'f'
[c Example Test: docstring_test.c] [ERR ] (null): Docstring mismatch
[c Example Test: docstring_test.c] [ERR ] Expected docstring length: 0
[c Example Test: docstring_test.c] [ERR ] Actual docstring length: 60
[c Example Test: docstring_test.c] [ERR ] Expected docstring bytes:
[c Example Test: docstring_test.c] [ERR ] Actual docstring bytes:
[c Example Test: docstring_test.c] [ERR ] Byte 0: 47 (0x2f) '/'
[c Example Test: docstring_test.c] [ERR ] Byte 1: 42 (0x2a) '*'
[c Example Test: docstring_test.c] [ERR ] Byte 2: 42 (0x2a) '*'
[c Example Test: docstring_test.c] [ERR ] Byte 3: 10 (0x0a) '?'
[c Example Test: docstring_test.c] [ERR ] Byte 4: 32 (0x20) ' '
[c Example Test: docstring_test.c] [ERR ] Byte 5: 42 (0x2a) '*'
[c Example Test: docstring_test.c] [ERR ] Byte 6: 32 (0x20) ' '
[c Example Test: docstring_test.c] [ERR ] Byte 7: 64 (0x40) '@'
[c Example Test: docstring_test.c] [ERR ] Byte 8: 98 (0x62) 'b'
[c Example Test: docstring_test.c] [ERR ] Byte 9: 114 (0x72) 'r'
[c Example Test: docstring_test.c] [ERR ] Byte 10: 105 (0x69) 'i'
[c Example Test: docstring_test.c] [ERR ] Byte 11: 101 (0x65) 'e'
[c Example Test: docstring_test.c] [ERR ] Byte 12: 102 (0x66) 'f'
[c Example Test: docstring_test.c] [ERR ] Byte 13: 32 (0x20) ' '
[c Example Test: docstring_test.c] [ERR ] Byte 14: 84 (0x54) 'T'
[c Example Test: docstring_test.c] [ERR ] Byte 15: 104 (0x68) 'h'
[c Example Test: docstring_test.c] [ERR ] Byte 16: 105 (0x69) 'i'
[c Example Test: docstring_test.c] [ERR ] Byte 17: 115 (0x73) 's'
[c Example Test: docstring_test.c] [ERR ] Byte 18: 32 (0x20) ' '
[c Example Test: docstring_test.c] [ERR ] Byte 19: 105 (0x69) 'i'
[c Example Test: docstring_test.c] [ERR ] Byte 20: 115 (0x73) 's'
[c Example Test: docstring_test.c] [ERR ] Byte 21: 32 (0x20) ' '
[c Example Test: docstring_test.c] [ERR ] Byte 22: 97 (0x61) 'a'
[c Example Test: docstring_test.c] [ERR ] Byte 23: 32 (0x20) ' '
[c Example Test: docstring_test.c] [ERR ] Byte 24: 102 (0x66) 'f'
[c Example Test: docstring_test.c] [ERR ] Byte 25: 117 (0x75) 'u'
[c Example Test: docstring_test.c] [ERR ] Byte 26: 110 (0x6e) 'n'
[c Example Test: docstring_test.c] [ERR ] Byte 27: 99 (0x63) 'c'
[c Example Test: docstring_test.c] [ERR ] Byte 28: 116 (0x74) 't'
[c Example Test: docstring_test.c] [ERR ] Byte 29: 105 (0x69) 'i'
[c Example Test: docstring_test.c] [ERR ] Byte 30: 111 (0x6f) 'o'
[c Example Test: docstring_test.c] [ERR ] Byte 31: 110 (0x6e) 'n'
[c Example Test: docstring_test.c] [ERR ] Byte 32: 45 (0x2d) '-'
[c Example Test: docstring_test.c] [ERR ] Byte 33: 108 (0x6c) 'l'
[c Example Test: docstring_test.c] [ERR ] Byte 34: 101 (0x65) 'e'
[c Example Test: docstring_test.c] [ERR ] Byte 35: 118 (0x76) 'v'
[c Example Test: docstring_test.c] [ERR ] Byte 36: 101 (0x65) 'e'
[c Example Test: docstring_test.c] [ERR ] Byte 37: 108 (0x6c) 'l'
[c Example Test: docstring_test.c] [ERR ] Byte 38: 32 (0x20) ' '
[c Example Test: docstring_test.c] [ERR ] Byte 39: 100 (0x64) 'd'
[c Example Test: docstring_test.c] [ERR ] Byte 40: 111 (0x6f) 'o'
[c Example Test: docstring_test.c] [ERR ] Byte 41: 99 (0x63) 'c'
[c Example Test: docstring_test.c] [ERR ] Byte 42: 115 (0x73) 's'
[c Example Test: docstring_test.c] [ERR ] Byte 43: 116 (0x74) 't'
[c Example Test: docstring_test.c] [ERR ] Byte 44: 114 (0x72) 'r'
[c Example Test: docstring_test.c] [ERR ] Byte 45: 105 (0x69) 'i'
[c Example Test: docstring_test.c] [ERR ] Byte 46: 110 (0x6e) 'n'
[c Example Test: docstring_test.c] [ERR ] Byte 47: 103 (0x67) 'g'
[c Example Test: docstring_test.c] [ERR ] Byte 48: 32 (0x20) ' '
[c Example Test: docstring_test.c] [ERR ] Byte 49: 102 (0x66) 'f'
[c Example Test: docstring_test.c] [ERR ] <unknown>: Docstring mismatch - expected '/**\n * @file docstring_test.c\n * @brief This is the file-level docstring and should be assigned to the root node.\n *\n * This file is for testing docstring extraction logic.\n */', got '/**
[c Example Test: docstring_test.c] [ERR ]  * @file docstring_test.c
[c Example Test: docstring_test.c] [ERR ]  * @brief This is the file-level docstring and should be assigned to the root node.
[c Example Test: docstring_test.c] [ERR ]  *
[c Example Test: docstring_test.c] [ERR ]  * This file is for testing docstring extraction logic.
[c Example Test: docstring_test.c] [ERR ]  */'
[c Example Test: docstring_test.c] [ERR ] (null): Docstring mismatch
[c Example Test: docstring_test.c] [ERR ] Expected docstring length: 181
[c Example Test: docstring_test.c] [ERR ] Actual docstring length: 176
[c Example Test: docstring_test.c] [ERR ] Expected docstring bytes:
[c Example Test: docstring_test.c] [ERR ] Byte 0: 47 (0x2f) '/'
[c Example Test: docstring_test.c] [ERR ] Byte 1: 42 (0x2a) '*'
[c Example Test: docstring_test.c] [ERR ] Byte 2: 42 (0x2a) '*'
[c Example Test: docstring_test.c] [ERR ] Byte 3: 92 (0x5c) '\'
[c Example Test: docstring_test.c] [ERR ] Byte 4: 110 (0x6e) 'n'
[c Example Test: docstring_test.c] [ERR ] Byte 5: 32 (0x20) ' '
[c Example Test: docstring_test.c] [ERR ] Byte 6: 42 (0x2a) '*'
[c Example Test: docstring_test.c] [ERR ] Byte 7: 32 (0x20) ' '
[c Example Test: docstring_test.c] [ERR ] Byte 8: 64 (0x40) '@'
[c Example Test: docstring_test.c] [ERR ] Byte 9: 102 (0x66) 'f'
[c Example Test: docstring_test.c] [ERR ] Byte 10: 105 (0x69) 'i'
[c Example Test: docstring_test.c] [ERR ] Byte 11: 108 (0x6c) 'l'
[c Example Test: docstring_test.c] [ERR ] Byte 12: 101 (0x65) 'e'
[c Example Test: docstring_test.c] [ERR ] Byte 13: 32 (0x20) ' '
[c Example Test: docstring_test.c] [ERR ] Byte 14: 100 (0x64) 'd'
[c Example Test: docstring_test.c] [ERR ] Byte 15: 111 (0x6f) 'o'
[c Example Test: docstring_test.c] [ERR ] Byte 16: 99 (0x63) 'c'
[c Example Test: docstring_test.c] [ERR ] Byte 17: 115 (0x73) 's'
[c Example Test: docstring_test.c] [ERR ] Byte 18: 116 (0x74) 't'
[c Example Test: docstring_test.c] [ERR ] Byte 19: 114 (0x72) 'r'
[c Example Test: docstring_test.c] [ERR ] Byte 20: 105 (0x69) 'i'
[c Example Test: docstring_test.c] [ERR ] Byte 21: 110 (0x6e) 'n'
[c Example Test: docstring_test.c] [ERR ] Byte 22: 103 (0x67) 'g'
[c Example Test: docstring_test.c] [ERR ] Byte 23: 95 (0x5f) '_'
[c Example Test: docstring_test.c] [ERR ] Byte 24: 116 (0x74) 't'
[c Example Test: docstring_test.c] [ERR ] Byte 25: 101 (0x65) 'e'
[c Example Test: docstring_test.c] [ERR ] Byte 26: 115 (0x73) 's'
[c Example Test: docstring_test.c] [ERR ] Byte 27: 116 (0x74) 't'
[c Example Test: docstring_test.c] [ERR ] Byte 28: 46 (0x2e) '.'
[c Example Test: docstring_test.c] [ERR ] Byte 29: 99 (0x63) 'c'
[c Example Test: docstring_test.c] [ERR ] Byte 30: 92 (0x5c) '\'
[c Example Test: docstring_test.c] [ERR ] Byte 31: 110 (0x6e) 'n'
[c Example Test: docstring_test.c] [ERR ] Byte 32: 32 (0x20) ' '
[c Example Test: docstring_test.c] [ERR ] Byte 33: 42 (0x2a) '*'
[c Example Test: docstring_test.c] [ERR ] Byte 34: 32 (0x20) ' '
[c Example Test: docstring_test.c] [ERR ] Byte 35: 64 (0x40) '@'
[c Example Test: docstring_test.c] [ERR ] Byte 36: 98 (0x62) 'b'
[c Example Test: docstring_test.c] [ERR ] Byte 37: 114 (0x72) 'r'
[c Example Test: docstring_test.c] [ERR ] Byte 38: 105 (0x69) 'i'
[c Example Test: docstring_test.c] [ERR ] Byte 39: 101 (0x65) 'e'
[c Example Test: docstring_test.c] [ERR ] Byte 40: 102 (0x66) 'f'
[c Example Test: docstring_test.c] [ERR ] Byte 41: 32 (0x20) ' '
[c Example Test: docstring_test.c] [ERR ] Byte 42: 84 (0x54) 'T'
[c Example Test: docstring_test.c] [ERR ] Byte 43: 104 (0x68) 'h'
[c Example Test: docstring_test.c] [ERR ] Byte 44: 105 (0x69) 'i'
[c Example Test: docstring_test.c] [ERR ] Byte 45: 115 (0x73) 's'
[c Example Test: docstring_test.c] [ERR ] Byte 46: 32 (0x20) ' '
[c Example Test: docstring_test.c] [ERR ] Byte 47: 105 (0x69) 'i'
[c Example Test: docstring_test.c] [ERR ] Byte 48: 115 (0x73) 's'
[c Example Test: docstring_test.c] [ERR ] Byte 49: 32 (0x20) ' '
[c Example Test: docstring_test.c] [ERR ] Actual docstring bytes:
[c Example Test: docstring_test.c] [ERR ] Byte 0: 47 (0x2f) '/'
[c Example Test: docstring_test.c] [ERR ] Byte 1: 42 (0x2a) '*'
[c Example Test: docstring_test.c] [ERR ] Byte 2: 42 (0x2a) '*'
[c Example Test: docstring_test.c] [ERR ] Byte 3: 10 (0x0a) '?'
[c Example Test: docstring_test.c] [ERR ] Byte 4: 32 (0x20) ' '
[c Example Test: docstring_test.c] [ERR ] Byte 5: 42 (0x2a) '*'
[c Example Test: docstring_test.c] [ERR ] Byte 6: 32 (0x20) ' '
[c Example Test: docstring_test.c] [ERR ] Byte 7: 64 (0x40) '@'
[c Example Test: docstring_test.c] [ERR ] Byte 8: 102 (0x66) 'f'
[c Example Test: docstring_test.c] [ERR ] Byte 9: 105 (0x69) 'i'
[c Example Test: docstring_test.c] [ERR ] Byte 10: 108 (0x6c) 'l'
[c Example Test: docstring_test.c] [ERR ] Byte 11: 101 (0x65) 'e'
[c Example Test: docstring_test.c] [ERR ] Byte 12: 32 (0x20) ' '
[c Example Test: docstring_test.c] [ERR ] Byte 13: 100 (0x64) 'd'
[c Example Test: docstring_test.c] [ERR ] Byte 14: 111 (0x6f) 'o'
[c Example Test: docstring_test.c] [ERR ] Byte 15: 99 (0x63) 'c'
[c Example Test: docstring_test.c] [ERR ] Byte 16: 115 (0x73) 's'
[c Example Test: docstring_test.c] [ERR ] Byte 17: 116 (0x74) 't'
[c Example Test: docstring_test.c] [ERR ] Byte 18: 114 (0x72) 'r'
[c Example Test: docstring_test.c] [ERR ] Byte 19: 105 (0x69) 'i'
[c Example Test: docstring_test.c] [ERR ] Byte 20: 110 (0x6e) 'n'
[c Example Test: docstring_test.c] [ERR ] Byte 21: 103 (0x67) 'g'
[c Example Test: docstring_test.c] [ERR ] Byte 22: 95 (0x5f) '_'
[c Example Test: docstring_test.c] [ERR ] Byte 23: 116 (0x74) 't'
[c Example Test: docstring_test.c] [ERR ] Byte 24: 101 (0x65) 'e'
[c Example Test: docstring_test.c] [ERR ] Byte 25: 115 (0x73) 's'
[c Example Test: docstring_test.c] [ERR ] Byte 26: 116 (0x74) 't'
[c Example Test: docstring_test.c] [ERR ] Byte 27: 46 (0x2e) '.'
[c Example Test: docstring_test.c] [ERR ] Byte 28: 99 (0x63) 'c'
[c Example Test: docstring_test.c] [ERR ] Byte 29: 10 (0x0a) '?'
[c Example Test: docstring_test.c] [ERR ] Byte 30: 32 (0x20) ' '
[c Example Test: docstring_test.c] [ERR ] Byte 31: 42 (0x2a) '*'
[c Example Test: docstring_test.c] [ERR ] Byte 32: 32 (0x20) ' '
[c Example Test: docstring_test.c] [ERR ] Byte 33: 64 (0x40) '@'
[c Example Test: docstring_test.c] [ERR ] Byte 34: 98 (0x62) 'b'
[c Example Test: docstring_test.c] [ERR ] Byte 35: 114 (0x72) 'r'
[c Example Test: docstring_test.c] [ERR ] Byte 36: 105 (0x69) 'i'
[c Example Test: docstring_test.c] [ERR ] Byte 37: 101 (0x65) 'e'
[c Example Test: docstring_test.c] [ERR ] Byte 38: 102 (0x66) 'f'
[c Example Test: docstring_test.c] [ERR ] Byte 39: 32 (0x20) ' '
[c Example Test: docstring_test.c] [ERR ] Byte 40: 84 (0x54) 'T'
[c Example Test: docstring_test.c] [ERR ] Byte 41: 104 (0x68) 'h'
[c Example Test: docstring_test.c] [ERR ] Byte 42: 105 (0x69) 'i'
[c Example Test: docstring_test.c] [ERR ] Byte 43: 115 (0x73) 's'
[c Example Test: docstring_test.c] [ERR ] Byte 44: 32 (0x20) ' '
[c Example Test: docstring_test.c] [ERR ] Byte 45: 105 (0x69) 'i'
[c Example Test: docstring_test.c] [ERR ] Byte 46: 115 (0x73) 's'
[c Example Test: docstring_test.c] [ERR ] Byte 47: 32 (0x20) ' '
[c Example Test: docstring_test.c] [ERR ] Byte 48: 116 (0x74) 't'
[c Example Test: docstring_test.c] [ERR ] Byte 49: 104 (0x68) 'h'
[c Example Test: docstring_test.c] [ERR ] (null): Docstring mismatch
[c Example Test: docstring_test.c] [ERR ] Expected docstring length: 62
[c Example Test: docstring_test.c] [ERR ] Actual docstring length: 60
[c Example Test: docstring_test.c] [ERR ] Expected docstring bytes:
[c Example Test: docstring_test.c] [ERR ] Byte 0: 47 (0x2f) '/'
[c Example Test: docstring_test.c] [ERR ] Byte 1: 42 (0x2a) '*'
[c Example Test: docstring_test.c] [ERR ] Byte 2: 42 (0x2a) '*'
[c Example Test: docstring_test.c] [ERR ] Byte 3: 92 (0x5c) '\'
[c Example Test: docstring_test.c] [ERR ] Byte 4: 110 (0x6e) 'n'
[c Example Test: docstring_test.c] [ERR ] Byte 5: 32 (0x20) ' '
[c Example Test: docstring_test.c] [ERR ] Byte 6: 42 (0x2a) '*'
[c Example Test: docstring_test.c] [ERR ] Byte 7: 32 (0x20) ' '
[c Example Test: docstring_test.c] [ERR ] Byte 8: 64 (0x40) '@'
[c Example Test: docstring_test.c] [ERR ] Byte 9: 98 (0x62) 'b'
[c Example Test: docstring_test.c] [ERR ] Byte 10: 114 (0x72) 'r'
[c Example Test: docstring_test.c] [ERR ] Byte 11: 105 (0x69) 'i'
[c Example Test: docstring_test.c] [ERR ] Byte 12: 101 (0x65) 'e'
[c Example Test: docstring_test.c] [ERR ] Byte 13: 102 (0x66) 'f'
[c Example Test: docstring_test.c] [ERR ] Byte 14: 32 (0x20) ' '
[c Example Test: docstring_test.c] [ERR ] Byte 15: 84 (0x54) 'T'
[c Example Test: docstring_test.c] [ERR ] Byte 16: 104 (0x68) 'h'
[c Example Test: docstring_test.c] [ERR ] Byte 17: 105 (0x69) 'i'
[c Example Test: docstring_test.c] [ERR ] Byte 18: 115 (0x73) 's'
[c Example Test: docstring_test.c] [ERR ] Byte 19: 32 (0x20) ' '
[c Example Test: docstring_test.c] [ERR ] Byte 20: 105 (0x69) 'i'
[c Example Test: docstring_test.c] [ERR ] Byte 21: 115 (0x73) 's'
[c Example Test: docstring_test.c] [ERR ] Byte 22: 32 (0x20) ' '
[c Example Test: docstring_test.c] [ERR ] Byte 23: 97 (0x61) 'a'
[c Example Test: docstring_test.c] [ERR ] Byte 24: 32 (0x20) ' '
[c Example Test: docstring_test.c] [ERR ] Byte 25: 102 (0x66) 'f'
[c Example Test: docstring_test.c] [ERR ] Byte 26: 117 (0x75) 'u'
[c Example Test: docstring_test.c] [ERR ] Byte 27: 110 (0x6e) 'n'
[c Example Test: docstring_test.c] [ERR ] Byte 28: 99 (0x63) 'c'
[c Example Test: docstring_test.c] [ERR ] Byte 29: 116 (0x74) 't'
[c Example Test: docstring_test.c] [ERR ] Byte 30: 105 (0x69) 'i'
[c Example Test: docstring_test.c] [ERR ] Byte 31: 111 (0x6f) 'o'
[c Example Test: docstring_test.c] [ERR ] Byte 32: 110 (0x6e) 'n'
[c Example Test: docstring_test.c] [ERR ] Byte 33: 45 (0x2d) '-'
[c Example Test: docstring_test.c] [ERR ] Byte 34: 108 (0x6c) 'l'
[c Example Test: docstring_test.c] [ERR ] Byte 35: 101 (0x65) 'e'
[c Example Test: docstring_test.c] [ERR ] Byte 36: 118 (0x76) 'v'
[c Example Test: docstring_test.c] [ERR ] Byte 37: 101 (0x65) 'e'
[c Example Test: docstring_test.c] [ERR ] Byte 38: 108 (0x6c) 'l'
[c Example Test: docstring_test.c] [ERR ] Byte 39: 32 (0x20) ' '
[c Example Test: docstring_test.c] [ERR ] Byte 40: 100 (0x64) 'd'
[c Example Test: docstring_test.c] [ERR ] Byte 41: 111 (0x6f) 'o'
[c Example Test: docstring_test.c] [ERR ] Byte 42: 99 (0x63) 'c'
[c Example Test: docstring_test.c] [ERR ] Byte 43: 115 (0x73) 's'
[c Example Test: docstring_test.c] [ERR ] Byte 44: 116 (0x74) 't'
[c Example Test: docstring_test.c] [ERR ] Byte 45: 114 (0x72) 'r'
[c Example Test: docstring_test.c] [ERR ] Byte 46: 105 (0x69) 'i'
[c Example Test: docstring_test.c] [ERR ] Byte 47: 110 (0x6e) 'n'
[c Example Test: docstring_test.c] [ERR ] Byte 48: 103 (0x67) 'g'
[c Example Test: docstring_test.c] [ERR ] Byte 49: 32 (0x20) ' '
[c Example Test: docstring_test.c] [ERR ] Actual docstring bytes:
[c Example Test: docstring_test.c] [ERR ] Byte 0: 47 (0x2f) '/'
[c Example Test: docstring_test.c] [ERR ] Byte 1: 42 (0x2a) '*'
[c Example Test: docstring_test.c] [ERR ] Byte 2: 42 (0x2a) '*'
[c Example Test: docstring_test.c] [ERR ] Byte 3: 10 (0x0a) '?'
[c Example Test: docstring_test.c] [ERR ] Byte 4: 32 (0x20) ' '
[c Example Test: docstring_test.c] [ERR ] Byte 5: 42 (0x2a) '*'
[c Example Test: docstring_test.c] [ERR ] Byte 6: 32 (0x20) ' '
[c Example Test: docstring_test.c] [ERR ] Byte 7: 64 (0x40) '@'
[c Example Test: docstring_test.c] [ERR ] Byte 8: 98 (0x62) 'b'
[c Example Test: docstring_test.c] [ERR ] Byte 9: 114 (0x72) 'r'
[c Example Test: docstring_test.c] [ERR ] Byte 10: 105 (0x69) 'i'
[c Example Test: docstring_test.c] [ERR ] Byte 11: 101 (0x65) 'e'
[c Example Test: docstring_test.c] [ERR ] Byte 12: 102 (0x66) 'f'
[c Example Test: docstring_test.c] [ERR ] Byte 13: 32 (0x20) ' '
[c Example Test: docstring_test.c] [ERR ] Byte 14: 84 (0x54) 'T'
[c Example Test: docstring_test.c] [ERR ] Byte 15: 104 (0x68) 'h'
[c Example Test: docstring_test.c] [ERR ] Byte 16: 105 (0x69) 'i'
[c Example Test: docstring_test.c] [ERR ] Byte 17: 115 (0x73) 's'
[c Example Test: docstring_test.c] [ERR ] Byte 18: 32 (0x20) ' '
[c Example Test: docstring_test.c] [ERR ] Byte 19: 105 (0x69) 'i'
[c Example Test: docstring_test.c] [ERR ] Byte 20: 115 (0x73) 's'
[c Example Test: docstring_test.c] [ERR ] Byte 21: 32 (0x20) ' '
[c Example Test: docstring_test.c] [ERR ] Byte 22: 97 (0x61) 'a'
[c Example Test: docstring_test.c] [ERR ] Byte 23: 32 (0x20) ' '
[c Example Test: docstring_test.c] [ERR ] Byte 24: 102 (0x66) 'f'
[c Example Test: docstring_test.c] [ERR ] Byte 25: 117 (0x75) 'u'
[c Example Test: docstring_test.c] [ERR ] Byte 26: 110 (0x6e) 'n'
[c Example Test: docstring_test.c] [ERR ] Byte 27: 99 (0x63) 'c'
[c Example Test: docstring_test.c] [ERR ] Byte 28: 116 (0x74) 't'
[c Example Test: docstring_test.c] [ERR ] Byte 29: 105 (0x69) 'i'
[c Example Test: docstring_test.c] [ERR ] Byte 30: 111 (0x6f) 'o'
[c Example Test: docstring_test.c] [ERR ] Byte 31: 110 (0x6e) 'n'
[c Example Test: docstring_test.c] [ERR ] Byte 32: 45 (0x2d) '-'
[c Example Test: docstring_test.c] [ERR ] Byte 33: 108 (0x6c) 'l'
[c Example Test: docstring_test.c] [ERR ] Byte 34: 101 (0x65) 'e'
[c Example Test: docstring_test.c] [ERR ] Byte 35: 118 (0x76) 'v'
[c Example Test: docstring_test.c] [ERR ] Byte 36: 101 (0x65) 'e'
[c Example Test: docstring_test.c] [ERR ] Byte 37: 108 (0x6c) 'l'
[c Example Test: docstring_test.c] [ERR ] Byte 38: 32 (0x20) ' '
[c Example Test: docstring_test.c] [ERR ] Byte 39: 100 (0x64) 'd'
[c Example Test: docstring_test.c] [ERR ] Byte 40: 111 (0x6f) 'o'
[c Example Test: docstring_test.c] [ERR ] Byte 41: 99 (0x63) 'c'
[c Example Test: docstring_test.c] [ERR ] Byte 42: 115 (0x73) 's'
[c Example Test: docstring_test.c] [ERR ] Byte 43: 116 (0x74) 't'
[c Example Test: docstring_test.c] [ERR ] Byte 44: 114 (0x72) 'r'
[c Example Test: docstring_test.c] [ERR ] Byte 45: 105 (0x69) 'i'
[c Example Test: docstring_test.c] [ERR ] Byte 46: 110 (0x6e) 'n'
[c Example Test: docstring_test.c] [ERR ] Byte 47: 103 (0x67) 'g'
[c Example Test: docstring_test.c] [ERR ] Byte 48: 32 (0x20) ' '
[c Example Test: docstring_test.c] [ERR ] Byte 49: 102 (0x66) 'f'
[c Example Test: docstring_test.c] [ERR ] (null): Docstring mismatch
[c Example Test: docstring_test.c] [ERR ] Expected docstring length: 62
[c Example Test: docstring_test.c] [ERR ] Actual docstring length: 60
[c Example Test: docstring_test.c] [ERR ] Expected docstring bytes:
[c Example Test: docstring_test.c] [ERR ] Byte 0: 47 (0x2f) '/'
[c Example Test: docstring_test.c] [ERR ] Byte 1: 42 (0x2a) '*'
[c Example Test: docstring_test.c] [ERR ] Byte 2: 42 (0x2a) '*'
[c Example Test: docstring_test.c] [ERR ] Byte 3: 92 (0x5c) '\'
[c Example Test: docstring_test.c] [ERR ] Byte 4: 110 (0x6e) 'n'
[c Example Test: docstring_test.c] [ERR ] Byte 5: 32 (0x20) ' '
[c Example Test: docstring_test.c] [ERR ] Byte 6: 42 (0x2a) '*'
[c Example Test: docstring_test.c] [ERR ] Byte 7: 32 (0x20) ' '
[c Example Test: docstring_test.c] [ERR ] Byte 8: 64 (0x40) '@'
[c Example Test: docstring_test.c] [ERR ] Byte 9: 98 (0x62) 'b'
[c Example Test: docstring_test.c] [ERR ] Byte 10: 114 (0x72) 'r'
[c Example Test: docstring_test.c] [ERR ] Byte 11: 105 (0x69) 'i'
[c Example Test: docstring_test.c] [ERR ] Byte 12: 101 (0x65) 'e'
[c Example Test: docstring_test.c] [ERR ] Byte 13: 102 (0x66) 'f'
[c Example Test: docstring_test.c] [ERR ] Byte 14: 32 (0x20) ' '
[c Example Test: docstring_test.c] [ERR ] Byte 15: 84 (0x54) 'T'
[c Example Test: docstring_test.c] [ERR ] Byte 16: 104 (0x68) 'h'
[c Example Test: docstring_test.c] [ERR ] Byte 17: 105 (0x69) 'i'
[c Example Test: docstring_test.c] [ERR ] Byte 18: 115 (0x73) 's'
[c Example Test: docstring_test.c] [ERR ] Byte 19: 32 (0x20) ' '
[c Example Test: docstring_test.c] [ERR ] Byte 20: 105 (0x69) 'i'
[c Example Test: docstring_test.c] [ERR ] Byte 21: 115 (0x73) 's'
[c Example Test: docstring_test.c] [ERR ] Byte 22: 32 (0x20) ' '
[c Example Test: docstring_test.c] [ERR ] Byte 23: 97 (0x61) 'a'
[c Example Test: docstring_test.c] [ERR ] Byte 24: 32 (0x20) ' '
[c Example Test: docstring_test.c] [ERR ] Byte 25: 102 (0x66) 'f'
[c Example Test: docstring_test.c] [ERR ] Byte 26: 117 (0x75) 'u'
[c Example Test: docstring_test.c] [ERR ] Byte 27: 110 (0x6e) 'n'
[c Example Test: docstring_test.c] [ERR ] Byte 28: 99 (0x63) 'c'
[c Example Test: docstring_test.c] [ERR ] Byte 29: 116 (0x74) 't'
[c Example Test: docstring_test.c] [ERR ] Byte 30: 105 (0x69) 'i'
[c Example Test: docstring_test.c] [ERR ] Byte 31: 111 (0x6f) 'o'
[c Example Test: docstring_test.c] [ERR ] Byte 32: 110 (0x6e) 'n'
[c Example Test: docstring_test.c] [ERR ] Byte 33: 45 (0x2d) '-'
[c Example Test: docstring_test.c] [ERR ] Byte 34: 108 (0x6c) 'l'
[c Example Test: docstring_test.c] [ERR ] Byte 35: 101 (0x65) 'e'
[c Example Test: docstring_test.c] [ERR ] Byte 36: 118 (0x76) 'v'
[c Example Test: docstring_test.c] [ERR ] Byte 37: 101 (0x65) 'e'
[c Example Test: docstring_test.c] [ERR ] Byte 38: 108 (0x6c) 'l'
[c Example Test: docstring_test.c] [ERR ] Byte 39: 32 (0x20) ' '
[c Example Test: docstring_test.c] [ERR ] Byte 40: 100 (0x64) 'd'
[c Example Test: docstring_test.c] [ERR ] Byte 41: 111 (0x6f) 'o'
[c Example Test: docstring_test.c] [ERR ] Byte 42: 99 (0x63) 'c'
[c Example Test: docstring_test.c] [ERR ] Byte 43: 115 (0x73) 's'
[c Example Test: docstring_test.c] [ERR ] Byte 44: 116 (0x74) 't'
[c Example Test: docstring_test.c] [ERR ] Byte 45: 114 (0x72) 'r'
[c Example Test: docstring_test.c] [ERR ] Byte 46: 105 (0x69) 'i'
[c Example Test: docstring_test.c] [ERR ] Byte 47: 110 (0x6e) 'n'
[c Example Test: docstring_test.c] [ERR ] Byte 48: 103 (0x67) 'g'
[c Example Test: docstring_test.c] [ERR ] Byte 49: 32 (0x20) ' '
[c Example Test: docstring_test.c] [ERR ] Actual docstring bytes:
[c Example Test: docstring_test.c] [ERR ] Byte 0: 47 (0x2f) '/'
[c Example Test: docstring_test.c] [ERR ] Byte 1: 42 (0x2a) '*'
[c Example Test: docstring_test.c] [ERR ] Byte 2: 42 (0x2a) '*'
[c Example Test: docstring_test.c] [ERR ] Byte 3: 10 (0x0a) '?'
[c Example Test: docstring_test.c] [ERR ] Byte 4: 32 (0x20) ' '
[c Example Test: docstring_test.c] [ERR ] Byte 5: 42 (0x2a) '*'
[c Example Test: docstring_test.c] [ERR ] Byte 6: 32 (0x20) ' '
[c Example Test: docstring_test.c] [ERR ] Byte 7: 64 (0x40) '@'
[c Example Test: docstring_test.c] [ERR ] Byte 8: 98 (0x62) 'b'
[c Example Test: docstring_test.c] [ERR ] Byte 9: 114 (0x72) 'r'
[c Example Test: docstring_test.c] [ERR ] Byte 10: 105 (0x69) 'i'
[c Example Test: docstring_test.c] [ERR ] Byte 11: 101 (0x65) 'e'
[c Example Test: docstring_test.c] [ERR ] Byte 12: 102 (0x66) 'f'
[c Example Test: docstring_test.c] [ERR ] Byte 13: 32 (0x20) ' '
[c Example Test: docstring_test.c] [ERR ] Byte 14: 84 (0x54) 'T'
[c Example Test: docstring_test.c] [ERR ] Byte 15: 104 (0x68) 'h'
[c Example Test: docstring_test.c] [ERR ] Byte 16: 105 (0x69) 'i'
[c Example Test: docstring_test.c] [ERR ] Byte 17: 115 (0x73) 's'
[c Example Test: docstring_test.c] [ERR ] Byte 18: 32 (0x20) ' '
[c Example Test: docstring_test.c] [ERR ] Byte 19: 105 (0x69) 'i'
[c Example Test: docstring_test.c] [ERR ] Byte 20: 115 (0x73) 's'
[c Example Test: docstring_test.c] [ERR ] Byte 21: 32 (0x20) ' '
[c Example Test: docstring_test.c] [ERR ] Byte 22: 97 (0x61) 'a'
[c Example Test: docstring_test.c] [ERR ] Byte 23: 32 (0x20) ' '
[c Example Test: docstring_test.c] [ERR ] Byte 24: 102 (0x66) 'f'
[c Example Test: docstring_test.c] [ERR ] Byte 25: 117 (0x75) 'u'
[c Example Test: docstring_test.c] [ERR ] Byte 26: 110 (0x6e) 'n'
[c Example Test: docstring_test.c] [ERR ] Byte 27: 99 (0x63) 'c'
[c Example Test: docstring_test.c] [ERR ] Byte 28: 116 (0x74) 't'
[c Example Test: docstring_test.c] [ERR ] Byte 29: 105 (0x69) 'i'
[c Example Test: docstring_test.c] [ERR ] Byte 30: 111 (0x6f) 'o'
[c Example Test: docstring_test.c] [ERR ] Byte 31: 110 (0x6e) 'n'
[c Example Test: docstring_test.c] [ERR ] Byte 32: 45 (0x2d) '-'
[c Example Test: docstring_test.c] [ERR ] Byte 33: 108 (0x6c) 'l'
[c Example Test: docstring_test.c] [ERR ] Byte 34: 101 (0x65) 'e'
[c Example Test: docstring_test.c] [ERR ] Byte 35: 118 (0x76) 'v'
[c Example Test: docstring_test.c] [ERR ] Byte 36: 101 (0x65) 'e'
[c Example Test: docstring_test.c] [ERR ] Byte 37: 108 (0x6c) 'l'
[c Example Test: docstring_test.c] [ERR ] Byte 38: 32 (0x20) ' '
[c Example Test: docstring_test.c] [ERR ] Byte 39: 100 (0x64) 'd'
[c Example Test: docstring_test.c] [ERR ] Byte 40: 111 (0x6f) 'o'
[c Example Test: docstring_test.c] [ERR ] Byte 41: 99 (0x63) 'c'
[c Example Test: docstring_test.c] [ERR ] Byte 42: 115 (0x73) 's'
[c Example Test: docstring_test.c] [ERR ] Byte 43: 116 (0x74) 't'
[c Example Test: docstring_test.c] [ERR ] Byte 44: 114 (0x72) 'r'
[c Example Test: docstring_test.c] [ERR ] Byte 45: 105 (0x69) 'i'
[c Example Test: docstring_test.c] [ERR ] Byte 46: 110 (0x6e) 'n'
[c Example Test: docstring_test.c] [ERR ] Byte 47: 103 (0x67) 'g'
[c Example Test: docstring_test.c] [ERR ] Byte 48: 32 (0x20) ' '
[c Example Test: docstring_test.c] [ERR ] Byte 49: 102 (0x66) 'f'
[c Example Test: docstring_test.c] [ERR ] (null): Docstring mismatch
[c Example Test: docstring_test.c] [ERR ] Expected docstring length: 0
[c Example Test: docstring_test.c] [ERR ] Actual docstring length: 60
[c Example Test: docstring_test.c] [ERR ] Expected docstring bytes:
[c Example Test: docstring_test.c] [ERR ] Actual docstring bytes:
[c Example Test: docstring_test.c] [ERR ] Byte 0: 47 (0x2f) '/'
[c Example Test: docstring_test.c] [ERR ] Byte 1: 42 (0x2a) '*'
[c Example Test: docstring_test.c] [ERR ] Byte 2: 42 (0x2a) '*'
[c Example Test: docstring_test.c] [ERR ] Byte 3: 10 (0x0a) '?'
[c Example Test: docstring_test.c] [ERR ] Byte 4: 32 (0x20) ' '
[c Example Test: docstring_test.c] [ERR ] Byte 5: 42 (0x2a) '*'
[c Example Test: docstring_test.c] [ERR ] Byte 6: 32 (0x20) ' '
[c Example Test: docstring_test.c] [ERR ] Byte 7: 64 (0x40) '@'
[c Example Test: docstring_test.c] [ERR ] Byte 8: 98 (0x62) 'b'
[c Example Test: docstring_test.c] [ERR ] Byte 9: 114 (0x72) 'r'
[c Example Test: docstring_test.c] [ERR ] Byte 10: 105 (0x69) 'i'
[c Example Test: docstring_test.c] [ERR ] Byte 11: 101 (0x65) 'e'
[c Example Test: docstring_test.c] [ERR ] Byte 12: 102 (0x66) 'f'
[c Example Test: docstring_test.c] [ERR ] Byte 13: 32 (0x20) ' '
[c Example Test: docstring_test.c] [ERR ] Byte 14: 84 (0x54) 'T'
[c Example Test: docstring_test.c] [ERR ] Byte 15: 104 (0x68) 'h'
[c Example Test: docstring_test.c] [ERR ] Byte 16: 105 (0x69) 'i'
[c Example Test: docstring_test.c] [ERR ] Byte 17: 115 (0x73) 's'
[c Example Test: docstring_test.c] [ERR ] Byte 18: 32 (0x20) ' '
[c Example Test: docstring_test.c] [ERR ] Byte 19: 105 (0x69) 'i'
[c Example Test: docstring_test.c] [ERR ] Byte 20: 115 (0x73) 's'
[c Example Test: docstring_test.c] [ERR ] Byte 21: 32 (0x20) ' '
[c Example Test: docstring_test.c] [ERR ] Byte 22: 97 (0x61) 'a'
[c Example Test: docstring_test.c] [ERR ] Byte 23: 32 (0x20) ' '
[c Example Test: docstring_test.c] [ERR ] Byte 24: 102 (0x66) 'f'
[c Example Test: docstring_test.c] [ERR ] Byte 25: 117 (0x75) 'u'
[c Example Test: docstring_test.c] [ERR ] Byte 26: 110 (0x6e) 'n'
[c Example Test: docstring_test.c] [ERR ] Byte 27: 99 (0x63) 'c'
[c Example Test: docstring_test.c] [ERR ] Byte 28: 116 (0x74) 't'
[c Example Test: docstring_test.c] [ERR ] Byte 29: 105 (0x69) 'i'
[c Example Test: docstring_test.c] [ERR ] Byte 30: 111 (0x6f) 'o'
[c Example Test: docstring_test.c] [ERR ] Byte 31: 110 (0x6e) 'n'
[c Example Test: docstring_test.c] [ERR ] Byte 32: 45 (0x2d) '-'
[c Example Test: docstring_test.c] [ERR ] Byte 33: 108 (0x6c) 'l'
[c Example Test: docstring_test.c] [ERR ] Byte 34: 101 (0x65) 'e'
[c Example Test: docstring_test.c] [ERR ] Byte 35: 118 (0x76) 'v'
[c Example Test: docstring_test.c] [ERR ] Byte 36: 101 (0x65) 'e'
[c Example Test: docstring_test.c] [ERR ] Byte 37: 108 (0x6c) 'l'
[c Example Test: docstring_test.c] [ERR ] Byte 38: 32 (0x20) ' '
[c Example Test: docstring_test.c] [ERR ] Byte 39: 100 (0x64) 'd'
[c Example Test: docstring_test.c] [ERR ] Byte 40: 111 (0x6f) 'o'
[c Example Test: docstring_test.c] [ERR ] Byte 41: 99 (0x63) 'c'
[c Example Test: docstring_test.c] [ERR ] Byte 42: 115 (0x73) 's'
[c Example Test: docstring_test.c] [ERR ] Byte 43: 116 (0x74) 't'
[c Example Test: docstring_test.c] [ERR ] Byte 44: 114 (0x72) 'r'
[c Example Test: docstring_test.c] [ERR ] Byte 45: 105 (0x69) 'i'
[c Example Test: docstring_test.c] [ERR ] Byte 46: 110 (0x6e) 'n'
[c Example Test: docstring_test.c] [ERR ] Byte 47: 103 (0x67) 'g'
[c Example Test: docstring_test.c] [ERR ] Byte 48: 32 (0x20) ' '
[c Example Test: docstring_test.c] [ERR ] Byte 49: 102 (0x66) 'f'
[c Example Test: docstring_test.c] 
[c Example Test: docstring_test.c] ========== AST/JSON MISMATCH ==========
[c Example Test: docstring_test.c] ACTUAL AST (as JSON):
[c Example Test: docstring_test.c] {
[c Example Test: docstring_test.c]   "type": "ROOT",
[c Example Test: docstring_test.c]   "name": "docstring_test.c",
[c Example Test: docstring_test.c]   "qualified_name": "docstring_test.c",
[c Example Test: docstring_test.c]   "signature": "",
[c Example Test: docstring_test.c]   "docstring": "/**\n * @file docstring_test.c\n * @brief This is the file-level docstring and should be assigned to the root node.\n *\n * This file is for testing docstring extraction logic.\n */",
[c Example Test: docstring_test.c]   "children": [
[c Example Test: docstring_test.c]     {
[c Example Test: docstring_test.c]       "type": "FUNCTION",
[c Example Test: docstring_test.c]       "name": "foo",
[c Example Test: docstring_test.c]       "qualified_name": "docstring_test.c.foo",
[c Example Test: docstring_test.c]       "signature": "int foo(void)",
[c Example Test: docstring_test.c]       "docstring": "/**\n * @brief This is a function-level docstring for foo\n */",
[c Example Test: docstring_test.c]       "children": [      ]
[c Example Test: docstring_test.c]     },
[c Example Test: docstring_test.c]     {
[c Example Test: docstring_test.c]       "type": "FUNCTION",
[c Example Test: docstring_test.c]       "name": "bar",
[c Example Test: docstring_test.c]       "qualified_name": "docstring_test.c.bar",
[c Example Test: docstring_test.c]       "signature": "int bar(int x)",
[c Example Test: docstring_test.c]       "docstring": "/**\n * @brief This is a function-level docstring for bar\n */",
[c Example Test: docstring_test.c]       "children": [
[c Example Test: docstring_test.c]         {
[c Example Test: docstring_test.c]           "type": "VARIABLE",
[c Example Test: docstring_test.c]           "name": "x",
[c Example Test: docstring_test.c]           "qualified_name": "docstring_test.c.bar.x",
[c Example Test: docstring_test.c]           "signature": "int x",
[c Example Test: docstring_test.c]           "docstring": "/**\n * @brief This is a function-level docstring for bar\n */",
[c Example Test: docstring_test.c]           "children": [          ]
[c Example Test: docstring_test.c]         }
[c Example Test: docstring_test.c]       ]
[c Example Test: docstring_test.c]     }
[c Example Test: docstring_test.c]   ]
[c Example Test: docstring_test.c] }
[c Example Test: docstring_test.c] EXPECTED AST SECTION:
[c Example Test: docstring_test.c] 
[c Example Test: docstring_test.c] =======================================
[c Example Test: docstring_test.c] [DEBUG] parser_clear starting for ctx=0x60d0000001e0
[c Example Test: docstring_test.c] [DEBUG] ctx->num_ast_nodes=14
[c Example Test: docstring_test.c] [WARNING] Attempting to clear the same context twice: 0x60d0000001e0
[c Example Test: docstring_test.c] [scopemux] Loading hardcoded node type mappings:
[c Example Test: docstring_test.c]   functions -> NODE_FUNCTION
[c Example Test: docstring_test.c]   classes -> NODE_CLASS
[c Example Test: docstring_test.c]   methods -> NODE_METHOD
[c Example Test: docstring_test.c]   variables -> NODE_VARIABLE
[c Example Test: docstring_test.c]   modules -> NODE_MODULE
[c Example Test: docstring_test.c]   structs -> NODE_STRUCT
[c Example Test: docstring_test.c]   unions -> NODE_UNION
[c Example Test: docstring_test.c]   enums -> NODE_ENUM
[c Example Test: docstring_test.c]   typedefs -> NODE_TYPEDEF
[c Example Test: docstring_test.c]   includes -> NODE_INCLUDE
[c Example Test: docstring_test.c]   macros -> NODE_MACRO
[c Example Test: docstring_test.c]   docstrings -> NODE_DOCSTRING
[c Example Test: docstring_test.c]   interfaces -> NODE_INTERFACE
[c Example Test: docstring_test.c]   template_specializations -> NODE_TEMPLATE_SPECIALIZATION
[c Example Test: docstring_test.c] {
[c Example Test: docstring_test.c]   "type":   "ROOT",
[c Example Test: docstring_test.c]   "name":   "docstring_test.c",
[c Example Test: docstring_test.c]   "qualified_name":   "docstring_test.c",
[c Example Test: docstring_test.c]   "signature":   "",
[c Example Test: docstring_test.c]   "docstring":   "/**\n * @file docstring_test.c\n * @brief This is the file-level docstring and should be assigned to the root node.\n *\n * This file is for testing docstring extraction logic.\n */",
[c Example Test: docstring_test.c]   "children":   [
[c Example Test: docstring_test.c]     {
[c Example Test: docstring_test.c]       "type":       "FUNCTION",
[c Example Test: docstring_test.c]       "name":       "foo",
[c Example Test: docstring_test.c]       "qualified_name":       "docstring_test.c.foo",
[c Example Test: docstring_test.c]       "signature":       "int foo(void)",
[c Example Test: docstring_test.c]       "docstring":       "/**\n * @brief This is a function-level docstring for foo\n */",
[c Example Test: docstring_test.c]       "children":       [
[c Example Test: docstring_test.c]       ]
[c Example Test: docstring_test.c]     },
[c Example Test: docstring_test.c]     {
[c Example Test: docstring_test.c]       "type":       "FUNCTION",
[c Example Test: docstring_test.c]       "name":       "bar",
[c Example Test: docstring_test.c]       "qualified_name":       "docstring_test.c.bar",
[c Example Test: docstring_test.c]       "signature":       "int bar(int x)",
[c Example Test: docstring_test.c]       "docstring":       "/**\n * @brief This is a function-level docstring for bar\n */",
[c Example Test: docstring_test.c]       "children":       [
[c Example Test: docstring_test.c]         {
[c Example Test: docstring_test.c]           "type":           "VARIABLE",
[c Example Test: docstring_test.c]           "name":           "x",
[c Example Test: docstring_test.c]           "qualified_name":           "docstring_test.c.bar.x",
[c Example Test: docstring_test.c]           "signature":           "int x",
[c Example Test: docstring_test.c]           "docstring":           "",
[c Example Test: docstring_test.c]           "children":           [
[c Example Test: docstring_test.c]           ]
[c Example Test: docstring_test.c]         }
[c Example Test: docstring_test.c]       ]
[c Example Test: docstring_test.c]     }
[c Example Test: docstring_test.c]   ]
[c Example Test: docstring_test.c] }[QUERY_MANAGER_FREE] ENTER: manager=0x606000013b80
[c Example Test: docstring_test.c] [QUERY_MANAGER_FREE] Freeing queries_dir at 0x603000012580
[c Example Test: docstring_test.c] [QUERY_MANAGER_FREE] Freeing cached queries array at 0x604000002110 (language_count=6)
[c Example Test: docstring_test.c] [QUERY_MANAGER_FREE] Freeing cached queries for language 0 at 0x611000001080 (query_count=0)
[c Example Test: docstring_test.c] [QUERY_MANAGER_FREE] Freeing QueryCacheEntry array at 0x611000001080
[c Example Test: docstring_test.c] [QUERY_MANAGER_FREE] Freeing cached queries for language 1 at 0x6110000011c0 (query_count=8)
[c Example Test: docstring_test.c] [QUERY_MANAGER_FREE] Freeing QueryCacheEntry array at 0x6110000011c0
[c Example Test: docstring_test.c] [QUERY_MANAGER_FREE] Freeing cached queries for language 2 at 0x611000001300 (query_count=0)
[c Example Test: docstring_test.c] [QUERY_MANAGER_FREE] Freeing QueryCacheEntry array at 0x611000001300
[c Example Test: docstring_test.c] [QUERY_MANAGER_FREE] Freeing cached queries for language 3 at 0x611000001440 (query_count=0)
[c Example Test: docstring_test.c] [QUERY_MANAGER_FREE] Freeing QueryCacheEntry array at 0x611000001440
[c Example Test: docstring_test.c] [QUERY_MANAGER_FREE] Freeing cached queries for language 4 at 0x611000001580 (query_count=0)
[c Example Test: docstring_test.c] [QUERY_MANAGER_FREE] Freeing QueryCacheEntry array at 0x611000001580
[c Example Test: docstring_test.c] [QUERY_MANAGER_FREE] Freeing cached queries for language 5 at 0x6110000016c0 (query_count=0)
[c Example Test: docstring_test.c] [QUERY_MANAGER_FREE] Freeing QueryCacheEntry array at 0x6110000016c0
[c Example Test: docstring_test.c] [QUERY_MANAGER_FREE] Freeing cached_queries array at 0x604000002110
[c Example Test: docstring_test.c] [QUERY_MANAGER_FREE] Freeing languages array at 0x6040000020d0
[c Example Test: docstring_test.c] [QUERY_MANAGER_FREE] Freeing language_types array at 0x6030000125b0
[c Example Test: docstring_test.c] [QUERY_MANAGER_FREE] Freeing query_counts array at 0x604000002150
[c Example Test: docstring_test.c] [QUERY_MANAGER_FREE] Freeing manager struct at 0x606000013b80
[c Example Test: docstring_test.c] [QUERY_MANAGER_FREE] EXIT: Query manager cleanup complete
[c Example Test: docstring_test.c] [----] ../../../core/tests/src/c/c_example_ast_tests.c:45: Assertion Failed
[c Example Test: docstring_test.c] [----]   
[c Example Test: docstring_test.c] [----]   AST test failed for basic_syntax/docstring_test.c
[c Example Test: docstring_test.c] [----]   
[c Example Test: docstring_test.c] [FAIL] c_examples::all_examples: (0.84s)
 FAIL: c Example Test: docstring_test.c (3/)
[test_runner_lib] Testing: core/tests/examples/c/basic_syntax/hello_world.c
[DEBUG] Directory listing before test execution:
total 10568
-rw-rw----  1 matrillo matrillo    2156 Aug  2 21:14 asan.log.2928676
-rw-rw----  1 matrillo matrillo    8307 Aug  2 21:14 asan.log.2928678
-rw-rw----  1 matrillo matrillo    2156 Aug  2 21:14 asan.log.2928700
-rw-rw----  1 matrillo matrillo    8307 Aug  2 21:14 asan.log.2928707
-rw-rw----  1 matrillo matrillo    2156 Aug  2 21:14 asan.log.2928734
-rw-rw----  1 matrillo matrillo    8441 Aug  2 21:14 asan.log.2928736
-rw-rw----  1 matrillo matrillo    2156 Aug  2 22:31 asan.log.2941000
-rw-rw----  1 matrillo matrillo    8307 Aug  2 22:31 asan.log.2941002
-rw-rw----  1 matrillo matrillo    2156 Aug  2 22:31 asan.log.2941017
-rw-rw----  1 matrillo matrillo    8307 Aug  2 22:31 asan.log.2941023
-rw-rw----  1 matrillo matrillo    2156 Aug  2 22:31 asan.log.2941055
-rw-rw----  1 matrillo matrillo    8441 Aug  2 22:31 asan.log.2941057
-rw-rw----  1 matrillo matrillo    2156 Aug  2 22:50 asan.log.2953571
-rw-rw----  1 matrillo matrillo    8307 Aug  2 22:50 asan.log.2953573
-rw-rw----  1 matrillo matrillo    2156 Aug  2 22:50 asan.log.2953588
-rw-rw----  1 matrillo matrillo    8307 Aug  2 22:50 asan.log.2953590
-rw-rw----  1 matrillo matrillo    2156 Aug  2 22:50 asan.log.2953606
-rw-rw----  1 matrillo matrillo    8441 Aug  2 22:50 asan.log.2953608
-rw-rw----  1 matrillo matrillo    2156 Aug  2 22:51 asan.log.2957003
-rw-rw----  1 matrillo matrillo    8307 Aug  2 22:51 asan.log.2957005
-rw-rw----  1 matrillo matrillo    2156 Aug  2 22:51 asan.log.2957020
-rw-rw----  1 matrillo matrillo    8307 Aug  2 22:51 asan.log.2957022
-rw-rw----  1 matrillo matrillo    2156 Aug  2 22:51 asan.log.2957041
-rw-rw----  1 matrillo matrillo    8441 Aug  2 22:51 asan.log.2957043
-rw-rw----  1 matrillo matrillo    2156 Aug  2 22:54 asan.log.2960814
-rw-rw----  1 matrillo matrillo    8307 Aug  2 22:54 asan.log.2960816
-rw-rw----  1 matrillo matrillo    2156 Aug  2 22:54 asan.log.2960839
-rw-rw----  1 matrillo matrillo    8307 Aug  2 22:54 asan.log.2960841
-rw-rw----  1 matrillo matrillo    2156 Aug  2 22:54 asan.log.2960857
-rw-rw----  1 matrillo matrillo    8441 Aug  2 22:54 asan.log.2960859
-rw-rw----  1 matrillo matrillo    2156 Aug  2 22:55 asan.log.2964116
-rw-rw----  1 matrillo matrillo    8307 Aug  2 22:55 asan.log.2964118
-rw-rw----  1 matrillo matrillo    2156 Aug  2 22:55 asan.log.2964135
-rw-rw----  1 matrillo matrillo    8307 Aug  2 22:55 asan.log.2964137
-rw-rw----  1 matrillo matrillo    2156 Aug  2 22:55 asan.log.2964167
-rw-rw----  1 matrillo matrillo    8441 Aug  2 22:55 asan.log.2964182
-rw-rw----  1 matrillo matrillo    2156 Aug  2 22:55 asan.log.2967372
-rw-rw----  1 matrillo matrillo    8307 Aug  2 22:55 asan.log.2967374
-rw-rw----  1 matrillo matrillo    2156 Aug  2 22:55 asan.log.2967393
-rw-rw----  1 matrillo matrillo    8307 Aug  2 22:55 asan.log.2967395
-rw-rw----  1 matrillo matrillo    2156 Aug  2 22:55 asan.log.2967411
-rw-rw----  1 matrillo matrillo    8441 Aug  2 22:55 asan.log.2967413
-rw-rw----  1 matrillo matrillo    2156 Aug  2 22:58 asan.log.2971166
-rw-rw----  1 matrillo matrillo    8307 Aug  2 22:58 asan.log.2971168
-rw-rw----  1 matrillo matrillo    2156 Aug  2 22:58 asan.log.2971185
-rw-rw----  1 matrillo matrillo    8307 Aug  2 22:58 asan.log.2971187
-rw-rw----  1 matrillo matrillo    2156 Aug  2 22:58 asan.log.2971204
-rw-rw----  1 matrillo matrillo    8441 Aug  2 22:58 asan.log.2971206
-rw-rw----  1 matrillo matrillo    2156 Aug  2 23:03 asan.log.2975969
-rw-rw----  1 matrillo matrillo    8307 Aug  2 23:03 asan.log.2975971
-rw-rw----  1 matrillo matrillo    2156 Aug  2 23:03 asan.log.2975987
-rw-rw----  1 matrillo matrillo    8307 Aug  2 23:03 asan.log.2975990
-rw-rw----  1 matrillo matrillo    2156 Aug  2 23:03 asan.log.2976006
-rw-rw----  1 matrillo matrillo    8441 Aug  2 23:03 asan.log.2976008
-rw-rw----  1 matrillo matrillo    2156 Aug  2 23:06 asan.log.2980003
-rw-rw----  1 matrillo matrillo    8307 Aug  2 23:06 asan.log.2980005
-rw-rw----  1 matrillo matrillo    2156 Aug  2 23:06 asan.log.2980029
-rw-rw----  1 matrillo matrillo    8307 Aug  2 23:06 asan.log.2980031
-rw-rw----  1 matrillo matrillo    2156 Aug  2 23:06 asan.log.2980047
-rw-rw----  1 matrillo matrillo    8441 Aug  2 23:06 asan.log.2980049
-rw-rw----  1 matrillo matrillo    2156 Aug  2 23:06 asan.log.2983230
-rw-rw----  1 matrillo matrillo    8307 Aug  2 23:06 asan.log.2983232
-rw-rw----  1 matrillo matrillo    2156 Aug  2 23:06 asan.log.2983257
-rw-rw----  1 matrillo matrillo    8307 Aug  2 23:06 asan.log.2983259
-rw-rw----  1 matrillo matrillo    2156 Aug  2 23:06 asan.log.2983277
-rw-rw----  1 matrillo matrillo    8441 Aug  2 23:06 asan.log.2983279
-rw-rw----  1 matrillo matrillo    2156 Aug  2 23:08 asan.log.2989596
-rw-rw----  1 matrillo matrillo    8307 Aug  2 23:08 asan.log.2989598
-rw-rw----  1 matrillo matrillo    2156 Aug  2 23:08 asan.log.2989614
-rw-rw----  1 matrillo matrillo    8307 Aug  2 23:08 asan.log.2989617
-rw-rw----  1 matrillo matrillo    2156 Aug  2 23:08 asan.log.2989634
-rw-rw----  1 matrillo matrillo    8441 Aug  2 23:08 asan.log.2989636
-rw-rw----  1 matrillo matrillo    2156 Aug  2 23:14 asan.log.2993957
-rw-rw----  1 matrillo matrillo    8307 Aug  2 23:14 asan.log.2993961
-rw-rw----  1 matrillo matrillo    2156 Aug  2 23:14 asan.log.2993979
-rw-rw----  1 matrillo matrillo    8307 Aug  2 23:14 asan.log.2993984
-rw-rw----  1 matrillo matrillo    2156 Aug  2 23:14 asan.log.2994010
-rw-rw----  1 matrillo matrillo    8441 Aug  2 23:14 asan.log.2994017
-rw-rw----  1 matrillo matrillo    2156 Aug  2 23:15 asan.log.2997572
-rw-rw----  1 matrillo matrillo    8307 Aug  2 23:15 asan.log.2997574
-rw-rw----  1 matrillo matrillo    2156 Aug  2 23:15 asan.log.2997589
-rw-rw----  1 matrillo matrillo    8307 Aug  2 23:15 asan.log.2997591
-rw-rw----  1 matrillo matrillo    2156 Aug  2 23:15 asan.log.2997609
-rw-rw----  1 matrillo matrillo    8441 Aug  2 23:15 asan.log.2997611
-rw-rw----  1 matrillo matrillo    2156 Aug  2 23:16 asan.log.3000908
-rw-rw----  1 matrillo matrillo    8307 Aug  2 23:16 asan.log.3000910
-rw-rw----  1 matrillo matrillo    2156 Aug  2 23:16 asan.log.3000925
-rw-rw----  1 matrillo matrillo    8307 Aug  2 23:16 asan.log.3000927
-rw-rw----  1 matrillo matrillo    2156 Aug  2 23:16 asan.log.3000948
-rw-rw----  1 matrillo matrillo    8441 Aug  2 23:16 asan.log.3000962
-rw-rw----  1 matrillo matrillo    2156 Aug  2 23:17 asan.log.3004264
-rw-rw----  1 matrillo matrillo    8307 Aug  2 23:17 asan.log.3004266
-rw-rw----  1 matrillo matrillo    2156 Aug  2 23:17 asan.log.3004287
-rw-rw----  1 matrillo matrillo    8307 Aug  2 23:17 asan.log.3004289
-rw-rw----  1 matrillo matrillo    2156 Aug  2 23:17 asan.log.3004305
-rw-rw----  1 matrillo matrillo    8441 Aug  2 23:17 asan.log.3004307
-rw-rw----  1 matrillo matrillo    2156 Aug  2 23:22 asan.log.3008975
-rw-rw----  1 matrillo matrillo    8441 Aug  2 23:22 asan.log.3008977
-rw-rw----  1 matrillo matrillo    2156 Aug  2 23:22 asan.log.3008992
-rw-rw----  1 matrillo matrillo   45753 Aug  2 23:22 asan.log.3008994
-rw-rw----  1 matrillo matrillo    2156 Aug  2 23:22 asan.log.3009011
-rw-rw----  1 matrillo matrillo    8441 Aug  2 23:22 asan.log.3009013
-rw-rw----  1 matrillo matrillo    2156 Aug  2 23:23 asan.log.3012493
-rw-rw----  1 matrillo matrillo   47214 Aug  2 23:23 asan.log.3012495
-rwxrwxr-x  1 matrillo matrillo 9147416 Aug  2 23:23 c_example_ast_tests
drwxrwxr-x 20 matrillo matrillo    4096 Aug  2 23:23 CMakeFiles
-rw-rw-r--  1 matrillo matrillo    2386 Aug  2 21:13 cmake_install.cmake
drwxrwxr-x  3 matrillo matrillo    4096 Aug  2 21:13 core
-rw-rw-r--  1 matrillo matrillo  678762 Aug  2 23:08 libtest_utilities.a
-rw-rw-r--  1 matrillo matrillo   51663 Aug  2 21:13 Makefile
[c Example Test: hello_world.c] DEBUG: read_file_contents called with path: core/tests/examples/c/basic_syntax/hello_world.c
[c Example Test: hello_world.c] DEBUG: Current working directory: /home/matrillo/apps/scopemux-core/build-c/core/tests
[c Example Test: hello_world.c] DEBUG: Directory listing for core/tests/examples/c/basic_syntax:
[c Example Test: hello_world.c]   docstring_test.c
[c Example Test: hello_world.c]   hello_world.c
[c Example Test: hello_world.c]   .
[c Example Test: hello_world.c]   hello_world.c.expected.json
[c Example Test: hello_world.c]   variables_loops_conditions.c
[c Example Test: hello_world.c]   variables_loops_conditions.c.expected.json
[c Example Test: hello_world.c]   docstring_test.c.expected.json
[c Example Test: hello_world.c]   ..
[c Example Test: hello_world.c] DEBUG: file size for core/tests/examples/c/basic_syntax/hello_world.c is 378 bytes
[c Example Test: hello_world.c] DEBUG: About to allocate ParserContext of size 136
[c Example Test: hello_world.c] DEBUG: safe_malloc returned raw_ptr=0x60d000000110
[c Example Test: hello_world.c] DEBUG: after cast ctx=0x60d000000110
[c Example Test: hello_world.c] DEBUG: About to memset ctx=0x60d000000110 with size 136
[c Example Test: hello_world.c] DEBUG: memset completed successfully
[c Example Test: hello_world.c] [2025-08-02 23:23:40] [INFO] Registered C language compliance callbacks
[c Example Test: hello_world.c] [2025-08-02 23:23:40] [INFO] Registered language-specific compliance callbacks
[c Example Test: hello_world.c] [scopemux] INFO: Loading hardcoded node type mappings
[c Example Test: hello_world.c] [scopemux] Loaded 14 hardcoded node type mappings
[c Example Test: hello_world.c] [2025-08-02 23:23:40] [INFO] Initialized node type mappings
[c Example Test: hello_world.c] [2025-08-02 23:23:40] [INFO] Successfully initialized parser context at 0x60d000000110
[c Example Test: hello_world.c] [DIAGNOSTIC-ENTRY] Entered parser_parse_string: ctx=0x60d000000110, content=0x613000012100, content_length=378, filename=hello_world.c, language=1
[c Example Test: hello_world.c] [DEBUG] parser_clear starting for ctx=0x60d000000110
[c Example Test: hello_world.c] [DEBUG] ctx->num_ast_nodes=0
[c Example Test: hello_world.c] [scopemux] Loading hardcoded node type mappings:
[c Example Test: hello_world.c]   functions -> NODE_FUNCTION
[c Example Test: hello_world.c]   classes -> NODE_CLASS
[c Example Test: hello_world.c]   methods -> NODE_METHOD
[c Example Test: hello_world.c]   variables -> NODE_VARIABLE
[c Example Test: hello_world.c]   modules -> NODE_MODULE
[c Example Test: hello_world.c]   structs -> NODE_STRUCT
[c Example Test: hello_world.c]   unions -> NODE_UNION
[c Example Test: hello_world.c]   enums -> NODE_ENUM
[c Example Test: hello_world.c]   typedefs -> NODE_TYPEDEF
[c Example Test: hello_world.c]   includes -> NODE_INCLUDE
[c Example Test: hello_world.c]   macros -> NODE_MACRO
[c Example Test: hello_world.c]   docstrings -> NODE_DOCSTRING
[c Example Test: hello_world.c]   interfaces -> NODE_INTERFACE
[c Example Test: hello_world.c]   template_specializations -> NODE_TEMPLATE_SPECIALIZATION
[c Example Test: hello_world.c] [QUERY_MANAGER_FREE] ENTER: manager=0x606000013ac0
[c Example Test: hello_world.c] [QUERY_MANAGER_FREE] Freeing queries_dir at 0x602000001410
[c Example Test: hello_world.c] [QUERY_MANAGER_FREE] Freeing cached queries array at 0x604000001f10 (language_count=6)
[c Example Test: hello_world.c] [QUERY_MANAGER_FREE] Freeing cached queries for language 0 at 0x611000000680 (query_count=0)
[c Example Test: hello_world.c] [QUERY_MANAGER_FREE] Freeing QueryCacheEntry array at 0x611000000680
[c Example Test: hello_world.c] [QUERY_MANAGER_FREE] Freeing cached queries for language 1 at 0x6110000007c0 (query_count=0)
[c Example Test: hello_world.c] [QUERY_MANAGER_FREE] Freeing QueryCacheEntry array at 0x6110000007c0
[c Example Test: hello_world.c] [QUERY_MANAGER_FREE] Freeing cached queries for language 2 at 0x611000000900 (query_count=0)
[c Example Test: hello_world.c] [QUERY_MANAGER_FREE] Freeing QueryCacheEntry array at 0x611000000900
[c Example Test: hello_world.c] [QUERY_MANAGER_FREE] Freeing cached queries for language 3 at 0x611000000a40 (query_count=0)
[c Example Test: hello_world.c] [QUERY_MANAGER_FREE] Freeing QueryCacheEntry array at 0x611000000a40
[c Example Test: hello_world.c] [QUERY_MANAGER_FREE] Freeing cached queries for language 4 at 0x611000000b80 (query_count=0)
[c Example Test: hello_world.c] [QUERY_MANAGER_FREE] Freeing QueryCacheEntry array at 0x611000000b80
[c Example Test: hello_world.c] [QUERY_MANAGER_FREE] Freeing cached queries for language 5 at 0x611000000cc0 (query_count=0)
[c Example Test: hello_world.c] [QUERY_MANAGER_FREE] Freeing QueryCacheEntry array at 0x611000000cc0
[c Example Test: hello_world.c] [QUERY_MANAGER_FREE] Freeing cached_queries array at 0x604000001f10
[c Example Test: hello_world.c] [QUERY_MANAGER_FREE] Freeing languages array at 0x604000001ed0
[c Example Test: hello_world.c] [QUERY_MANAGER_FREE] Freeing language_types array at 0x6030000121c0
[c Example Test: hello_world.c] [QUERY_MANAGER_FREE] Freeing query_counts array at 0x604000001f50
[c Example Test: hello_world.c] [QUERY_MANAGER_FREE] Freeing manager struct at 0x606000013ac0
[c Example Test: hello_world.c] [QUERY_MANAGER_FREE] EXIT: Query manager cleanup complete
[c Example Test: hello_world.c] [2025-08-02 23:23:40] [INFO] AST node cleanup summary: freed 0 root nodes, skipped 0 child nodes (freed recursively), total tracked: 0
[c Example Test: hello_world.c] [2025-08-02 23:23:40] [INFO] [LIFECYCLE] Exiting parser_clear for ctx=0x60d000000110
[c Example Test: hello_world.c] [DIAGNOSTIC-FACADE] Entered ts_init_parser: ctx=0x60d000000110, language=1
[c Example Test: hello_world.c] [DIAGNOSTIC-ENTRY] Entered ts_init_parser_impl: ctx=0x60d000000110, language=1
[c Example Test: hello_world.c] 
[c Example Test: hello_world.c] ***** PARSER INITIALIZATION DIAGNOSTIC *****
[c Example Test: hello_world.c] Test executable pid: 3012517
[c Example Test: hello_world.c] Using statically linked Tree-sitter libraries
[c Example Test: hello_world.c] SYMBOL RESOLUTION CHECK:
[c Example Test: hello_world.c]   dlsym(tree_sitter_c): 0x55777bd6e6b7
[c Example Test: hello_world.c]   dlsym(tree_sitter_cpp): 0x55777bd849a4
[c Example Test: hello_world.c]   dlsym(tree_sitter_python): 0x55777bd8a764
[c Example Test: hello_world.c]   dlsym(tree_sitter_javascript): 0x55777bd92487
[c Example Test: hello_world.c]   dlsym(tree_sitter_typescript): 0x55777bd9984c
[c Example Test: hello_world.c] [DIAGNOSTIC] ts_init_parser_impl: language enum: 1
[c Example Test: hello_world.c] [DIAGNOSTIC] Language name: C
[c Example Test: hello_world.c] [DIAGNOSTIC] Adapter lookup result: 0x55777c46c060
[c Example Test: hello_world.c] [DIAGNOSTIC] Adapter language_name: C
[c Example Test: hello_world.c] [DIAGNOSTIC] Adapter get_ts_language pointer: 0x55777bd6e6b7
[c Example Test: hello_world.c] [DIAGNOSTIC] Result of get_ts_language(): 0x55777c3b60c0
[c Example Test: hello_world.c] [2025-08-02 23:23:40] [INFO] Successfully retrieved language object for language type 1, address: 0x55777c3b60c0
[c Example Test: hello_world.c] [2025-08-02 23:23:40] [INFO] Calling ts_parser_set_language with parser=0x61b00001d580, language=0x55777c3b60c0
[c Example Test: hello_world.c] [2025-08-02 23:23:40] [INFO] ts_parser_set_language succeeded
[c Example Test: hello_world.c] [2025-08-02 23:23:40] [INFO] Verification: ts_parser_language() returned: 0x55777c3b60c0
[c Example Test: hello_world.c] [2025-08-02 23:23:40] [INFO] Language verification successful - pointer match confirmed
[c Example Test: hello_world.c] [2025-08-02 23:23:40] [INFO] TS_INIT_PARSER_IMPL: PARSER INITIALIZATION COMPLETE
[c Example Test: hello_world.c] [2025-08-02 23:23:40] [INFO] ===================================================================
[c Example Test: hello_world.c] [2025-08-02 23:23:40] [INFO] Successfully set language for Tree-sitter parser
[c Example Test: hello_world.c] DEBUG: Tried queries directory: queries/c (not found)
[c Example Test: hello_world.c] DEBUG: Tried queries directory: ../queries/c (not found)
[c Example Test: hello_world.c] DEBUG: Tried queries directory: ../../queries/c (not found)
[c Example Test: hello_world.c] DEBUG: Using queries directory: ../../../queries/c
[c Example Test: hello_world.c] [2025-08-02 23:23:40] [INFO] Found docstrings.scm at: ../../../queries/c/docstrings.scm
[c Example Test: hello_world.c] [2025-08-02 23:23:40] [INFO] Loading hardcoded node type mappings (source of truth)...
[c Example Test: hello_world.c] [scopemux] INFO: Loading hardcoded node type mappings
[c Example Test: hello_world.c] [scopemux] Loaded 14 hardcoded node type mappings
[c Example Test: hello_world.c] [2025-08-02 23:23:40] [INFO] Initialized query manager with queries directory: ../../../queries/c
[c Example Test: hello_world.c] [2025-08-02 23:23:40] [INFO] ts_init_parser returned: TRUE
[c Example Test: hello_world.c] [2025-08-02 23:23:40] [INFO] After initialization: Tree-sitter parser=0x61b00001d580, language=0x55777c3b60c0
[c Example Test: hello_world.c] [2025-08-02 23:23:40] [INFO] ===== PARSER_PARSE_STRING: PARSER INITIALIZATION COMPLETED =====
[c Example Test: hello_world.c] [2025-08-02 23:23:40] [INFO] [create_ast_root_node] ctx->filename: 'hello_world.c' (basename: 'hello_world.c')
[c Example Test: hello_world.c] [2025-08-02 23:23:40] [INFO] [create_ast_root_node] Created root node with name: 'hello_world.c'
[c Example Test: hello_world.c] [2025-08-02 23:23:40] [INFO] [create_ast_root_node] Set qualified_name: 'hello_world.c'
[c Example Test: hello_world.c] [2025-08-02 23:23:40] [INFO] [QUERY_DEBUG] Source code preview (first 100 bytes): '/**
[c Example Test: hello_world.c]  * @file hello_world.c
[c Example Test: hello_world.c]  * @brief A simple "Hello, World!" program in C
[c Example Test: hello_world.c]  *
[c Example Test: hello_world.c]  * This example demons...'
[c Example Test: hello_world.c] [2025-08-02 23:23:40] [INFO] [QUERY_DEBUG] Tree-sitter root node: type='translation_unit', named=1, child_count=4
[c Example Test: hello_world.c] [2025-08-02 23:23:40] [INFO] [QUERY_DEBUG] Child 0: type='comment', named=1
[c Example Test: hello_world.c] [2025-08-02 23:23:40] [INFO] [QUERY_DEBUG] Child 1: type='preproc_include', named=1
[c Example Test: hello_world.c] [2025-08-02 23:23:40] [INFO] [QUERY_DEBUG] Child 2: type='comment', named=1
[c Example Test: hello_world.c] [2025-08-02 23:23:40] [INFO] [QUERY_DEBUG] Child 3: type='function_definition', named=1
[c Example Test: hello_world.c] [2025-08-02 23:23:40] [INFO] [QUERY_DEBUG] Processing query type: classes (1 of 8)
[c Example Test: hello_world.c] [2025-08-02 23:23:40] [INFO] [QUERY_DEBUG] Processing query type: classes
[c Example Test: hello_world.c] DIRECT DEBUG: Entered query_manager_get_query for language 1, query_name: classes
[c Example Test: hello_world.c] [QUERY_PATH_DEBUG] Trying primary path: ../../../queries/c/classes.scm
[c Example Test: hello_world.c] [QUERY_PATH_DEBUG] SUCCESS: Found query at primary path: ../../../queries/c/classes.scm
[c Example Test: hello_world.c] [2025-08-02 23:23:40] [INFO] [QUERY_DEBUG] Query 'classes' has 0 patterns and 0 possible captures
[c Example Test: hello_world.c] [2025-08-02 23:23:40] [INFO] [QUERY_DEBUG] Mapped 'classes' query to AST node type 3
[c Example Test: hello_world.c] [2025-08-02 23:23:40] [INFO] [QUERY_DEBUG] Query 'classes' finished processing: 0 matches, 0 nodes added
[c Example Test: hello_world.c] [2025-08-02 23:23:40] [INFO] [QUERY_DEBUG] Query 'classes' FAILED: No nodes added
[c Example Test: hello_world.c] [2025-08-02 23:23:40] [INFO] [QUERY_DEBUG] Processing query type: structs (2 of 8)
[c Example Test: hello_world.c] [2025-08-02 23:23:40] [INFO] [QUERY_DEBUG] Processing query type: structs
[c Example Test: hello_world.c] DIRECT DEBUG: Entered query_manager_get_query for language 1, query_name: structs
[c Example Test: hello_world.c] [QUERY_PATH_DEBUG] Trying primary path: ../../../queries/c/structs.scm
[c Example Test: hello_world.c] [QUERY_PATH_DEBUG] SUCCESS: Found query at primary path: ../../../queries/c/structs.scm
[c Example Test: hello_world.c] [2025-08-02 23:23:40] [INFO] [QUERY_DEBUG] Query 'structs' has 2 patterns and 2 possible captures
[c Example Test: hello_world.c] [2025-08-02 23:23:40] [INFO] [QUERY_DEBUG] Mapped structs query to NODE_STRUCT
[c Example Test: hello_world.c] [2025-08-02 23:23:40] [INFO] [QUERY_DEBUG] Mapped 'structs' query to AST node type 21
[c Example Test: hello_world.c] [2025-08-02 23:23:40] [INFO] [QUERY_DEBUG] Query 'structs' finished processing: 0 matches, 0 nodes added
[c Example Test: hello_world.c] [2025-08-02 23:23:40] [INFO] [QUERY_DEBUG] Query 'structs' FAILED: No nodes added
[c Example Test: hello_world.c] [FUNCTIONS_DEBUG] About to process FUNCTIONS query at index 2
[c Example Test: hello_world.c] [2025-08-02 23:23:40] [INFO] [QUERY_DEBUG] Processing query type: functions (3 of 8)
[c Example Test: hello_world.c] [2025-08-02 23:23:40] [INFO] [QUERY_DEBUG] Processing query type: functions
[c Example Test: hello_world.c] DIRECT DEBUG: Entered query_manager_get_query for language 1, query_name: functions
[c Example Test: hello_world.c] [FUNCTIONS_DEBUG] *** DETECTED functions query request ***
[c Example Test: hello_world.c] [QUERY_PATH_DEBUG] Trying primary path: ../../../queries/c/functions.scm
[c Example Test: hello_world.c] [QUERY_PATH_DEBUG] SUCCESS: Found query at primary path: ../../../queries/c/functions.scm
[c Example Test: hello_world.c] [2025-08-02 23:23:41] [INFO] [QUERY_DEBUG] Query 'functions' has 2 patterns and 2 possible captures
[c Example Test: hello_world.c] [2025-08-02 23:23:41] [INFO] [QUERY_DEBUG] Mapped functions query to NODE_FUNCTION
[c Example Test: hello_world.c] [2025-08-02 23:23:41] [INFO] [QUERY_DEBUG] Mapped 'functions' query to AST node type 2
[c Example Test: hello_world.c] [2025-08-02 23:23:41] [INFO] [QUERY_DEBUG] Found match 1 with 2 captures
[c Example Test: hello_world.c] [2025-08-02 23:23:41] [INFO] [QUERY_DEBUG] Capture 0: name='function', node_type='function_definition', text='int main(void) {
[c Example Test: hello_world.c]   printf("Hello, world!'
[c Example Test: hello_world.c] [SINGPLUR_DEBUG] Found singular form 'function' in query type 'functions'
[c Example Test: hello_world.c] [2025-08-02 23:23:41] [INFO] [QUERY_DEBUG] Main node detection: query_type='functions', capture_name='function', clean_capture_name='function', clean_query_type='functions', is_main_node=1
[c Example Test: hello_world.c] [2025-08-02 23:23:41] [INFO] [QUERY_DEBUG] Capture 1: name='name', node_type='identifier', text='main'
[c Example Test: hello_world.c] [2025-08-02 23:23:41] [INFO] [QUERY_DEBUG] Main node detection: query_type='functions', capture_name='name', clean_capture_name='name', clean_query_type='functions', is_main_node=0
[c Example Test: hello_world.c] [AST_CREATE] Created ASTNode at 0x611000016ac0, type=2
[c Example Test: hello_world.c] [AST_REGISTER_CALL] parser_add_ast_node(ctx, 0x611000016ac0) returned 1
[c Example Test: hello_world.c] [2025-08-02 23:23:41] [INFO] [QUERY_DEBUG] Set content for function node 'main'
[c Example Test: hello_world.c] [2025-08-02 23:23:41] [INFO] [SIGNATURE_DEBUG] Function 'main' signature set to: 'int main(void)'
[c Example Test: hello_world.c] [2025-08-02 23:23:41] [WARNING] Attempt to free untracked memory at 0x603000015250 in /home/matrillo/apps/scopemux-core/core/src/parser/ts_query_processor.c:886 - this may be a library-allocated pointer
[c Example Test: hello_world.c] [2025-08-02 23:23:41] [INFO] [QUERY_DEBUG] Added FUNCTION node 'main' to AST (and registered in context)
[c Example Test: hello_world.c] [2025-08-02 23:23:41] [INFO] [QUERY_DEBUG] Query 'functions' finished processing: 1 matches, 1 nodes added
[c Example Test: hello_world.c] [2025-08-02 23:23:41] [INFO] [QUERY_DEBUG] Query 'functions' SUCCEEDED: Added 1 node(s)
[c Example Test: hello_world.c] [2025-08-02 23:23:41] [INFO] [QUERY_DEBUG] Processing query type: methods (4 of 8)
[c Example Test: hello_world.c] [2025-08-02 23:23:41] [INFO] [QUERY_DEBUG] Processing query type: methods
[c Example Test: hello_world.c] DIRECT DEBUG: Entered query_manager_get_query for language 1, query_name: methods
[c Example Test: hello_world.c] [QUERY_PATH_DEBUG] Trying primary path: ../../../queries/c/methods.scm
[c Example Test: hello_world.c] [QUERY_PATH_DEBUG] SUCCESS: Found query at primary path: ../../../queries/c/methods.scm
[c Example Test: hello_world.c] [2025-08-02 23:23:41] [INFO] [QUERY_DEBUG] Query 'methods' has 0 patterns and 0 possible captures
[c Example Test: hello_world.c] [2025-08-02 23:23:41] [INFO] [QUERY_DEBUG] Mapped 'methods' query to AST node type 4
[c Example Test: hello_world.c] [2025-08-02 23:23:41] [INFO] [QUERY_DEBUG] Query 'methods' finished processing: 0 matches, 0 nodes added
[c Example Test: hello_world.c] [2025-08-02 23:23:41] [INFO] [QUERY_DEBUG] Query 'methods' FAILED: No nodes added
[c Example Test: hello_world.c] [2025-08-02 23:23:41] [INFO] [QUERY_DEBUG] Processing query type: variables (5 of 8)
[c Example Test: hello_world.c] [2025-08-02 23:23:41] [INFO] [QUERY_DEBUG] Processing query type: variables
[c Example Test: hello_world.c] DIRECT DEBUG: Entered query_manager_get_query for language 1, query_name: variables
[c Example Test: hello_world.c] [QUERY_PATH_DEBUG] Trying primary path: ../../../queries/c/variables.scm
[c Example Test: hello_world.c] [QUERY_PATH_DEBUG] SUCCESS: Found query at primary path: ../../../queries/c/variables.scm
[c Example Test: hello_world.c] [2025-08-02 23:23:41] [INFO] [QUERY_DEBUG] Query 'variables' has 2 patterns and 2 possible captures
[c Example Test: hello_world.c] [2025-08-02 23:23:41] [INFO] [QUERY_DEBUG] Mapped 'variables' query to AST node type 5
[c Example Test: hello_world.c] [2025-08-02 23:23:41] [INFO] [QUERY_DEBUG] Query 'variables' finished processing: 0 matches, 0 nodes added
[c Example Test: hello_world.c] [2025-08-02 23:23:41] [INFO] [QUERY_DEBUG] Query 'variables' FAILED: No nodes added
[c Example Test: hello_world.c] [2025-08-02 23:23:41] [INFO] [QUERY_DEBUG] Processing query type: control_flow (6 of 8)
[c Example Test: hello_world.c] [2025-08-02 23:23:41] [INFO] [QUERY_DEBUG] Processing query type: control_flow
[c Example Test: hello_world.c] DIRECT DEBUG: Entered query_manager_get_query for language 1, query_name: control_flow
[c Example Test: hello_world.c] [QUERY_PATH_DEBUG] Trying primary path: ../../../queries/c/control_flow.scm
[c Example Test: hello_world.c] [QUERY_PATH_DEBUG] SUCCESS: Found query at primary path: ../../../queries/c/control_flow.scm
[c Example Test: hello_world.c] [2025-08-02 23:23:41] [INFO] [QUERY_DEBUG] Query 'control_flow' has 5 patterns and 5 possible captures
[c Example Test: hello_world.c] [2025-08-02 23:23:41] [INFO] [QUERY_DEBUG] Mapped control_flow query to NODE_CONTROL_FLOW
[c Example Test: hello_world.c] [2025-08-02 23:23:41] [INFO] [QUERY_DEBUG] Mapped 'control_flow' query to AST node type 27
[c Example Test: hello_world.c] [2025-08-02 23:23:41] [INFO] [QUERY_DEBUG] Query 'control_flow' finished processing: 0 matches, 0 nodes added
[c Example Test: hello_world.c] [2025-08-02 23:23:41] [INFO] [QUERY_DEBUG] Query 'control_flow' FAILED: No nodes added
[c Example Test: hello_world.c] [2025-08-02 23:23:41] [INFO] [QUERY_DEBUG] Processing query type: imports (7 of 8)
[c Example Test: hello_world.c] [2025-08-02 23:23:41] [INFO] [QUERY_DEBUG] Processing query type: imports
[c Example Test: hello_world.c] DIRECT DEBUG: Entered query_manager_get_query for language 1, query_name: imports
[c Example Test: hello_world.c] [QUERY_PATH_DEBUG] Trying primary path: ../../../queries/c/imports.scm
[c Example Test: hello_world.c] [QUERY_PATH_DEBUG] SUCCESS: Found query at primary path: ../../../queries/c/imports.scm
[c Example Test: hello_world.c] [2025-08-02 23:23:41] [INFO] [QUERY_DEBUG] Query 'imports' has 2 patterns and 2 possible captures
[c Example Test: hello_world.c] [2025-08-02 23:23:41] [INFO] [QUERY_DEBUG] Mapped 'imports' query to AST node type 9
[c Example Test: hello_world.c] [2025-08-02 23:23:41] [INFO] [QUERY_DEBUG] Found match 1 with 2 captures
[c Example Test: hello_world.c] [2025-08-02 23:23:41] [INFO] [QUERY_DEBUG] Capture 0: name='include', node_type='preproc_include', text='#include <stdio.h>
[c Example Test: hello_world.c] '
[c Example Test: hello_world.c] [SINGPLUR_DEBUG] Found singular form 'include' in query type 'imports'
[c Example Test: hello_world.c] [2025-08-02 23:23:41] [INFO] [QUERY_DEBUG] Main node detection: query_type='imports', capture_name='include', clean_capture_name='include', clean_query_type='imports', is_main_node=1
[c Example Test: hello_world.c] [2025-08-02 23:23:41] [INFO] [QUERY_DEBUG] Capture 1: name='name', node_type='system_lib_string', text='<stdio.h>'
[c Example Test: hello_world.c] [2025-08-02 23:23:41] [INFO] [QUERY_DEBUG] Main node detection: query_type='imports', capture_name='name', clean_capture_name='name', clean_query_type='imports', is_main_node=0
[c Example Test: hello_world.c] [AST_CREATE] Created ASTNode at 0x61100000dec0, type=9
[c Example Test: hello_world.c] [AST_REGISTER_CALL] parser_add_ast_node(ctx, 0x61100000dec0) returned 1
[c Example Test: hello_world.c] [2025-08-02 23:23:41] [INFO] [QUERY_DEBUG] Added INCLUDE node '<stdio.h>' to AST (and registered in context)
[c Example Test: hello_world.c] [2025-08-02 23:23:41] [INFO] [QUERY_DEBUG] Query 'imports' finished processing: 1 matches, 1 nodes added
[c Example Test: hello_world.c] [2025-08-02 23:23:41] [INFO] [QUERY_DEBUG] Query 'imports' SUCCEEDED: Added 1 node(s)
[c Example Test: hello_world.c] [2025-08-02 23:23:41] [INFO] [QUERY_DEBUG] Processing query type: docstrings (8 of 8)
[c Example Test: hello_world.c] [2025-08-02 23:23:41] [INFO] [QUERY_DEBUG] Processing query type: docstrings
[c Example Test: hello_world.c] DIRECT DEBUG: Entered query_manager_get_query for language 1, query_name: docstrings
[c Example Test: hello_world.c] [QUERY_PATH_DEBUG] Trying primary path: ../../../queries/c/docstrings.scm
[c Example Test: hello_world.c] [QUERY_PATH_DEBUG] SUCCESS: Found query at primary path: ../../../queries/c/docstrings.scm
[c Example Test: hello_world.c] [2025-08-02 23:23:41] [INFO] [QUERY_DEBUG] Query 'docstrings' has 4 patterns and 1 possible captures
[c Example Test: hello_world.c] [2025-08-02 23:23:41] [INFO] [QUERY_DEBUG] Mapped docstrings query to NODE_DOCSTRING
[c Example Test: hello_world.c] [2025-08-02 23:23:41] [INFO] [QUERY_DEBUG] Mapped 'docstrings' query to AST node type 19
[c Example Test: hello_world.c] [2025-08-02 23:23:41] [INFO] [QUERY_DEBUG] Found match 1 with 1 captures
[c Example Test: hello_world.c] [2025-08-02 23:23:41] [INFO] [QUERY_DEBUG] Capture 0: name='docstring', node_type='comment', text='/**
[c Example Test: hello_world.c]  * @file hello_world.c
[c Example Test: hello_world.c]  * @brief A s'
[c Example Test: hello_world.c] [SINGPLUR_DEBUG] Found singular form 'docstring' in query type 'docstrings'
[c Example Test: hello_world.c] [2025-08-02 23:23:41] [INFO] [QUERY_DEBUG] Main node detection: query_type='docstrings', capture_name='docstring', clean_capture_name='docstring', clean_query_type='docstrings', is_main_node=1
[c Example Test: hello_world.c] [AST_CREATE] Created ASTNode at 0x611000022780, type=19
[c Example Test: hello_world.c] [AST_REGISTER_CALL] parser_add_ast_node(ctx, 0x611000022780) returned 1
[c Example Test: hello_world.c] [2025-08-02 23:23:41] [INFO] [QUERY_DEBUG] Set content for docstring node '/**
[c Example Test: hello_world.c]  * @file hello_world.c
[c Example Test: hello_world.c]  * @brief A simple "Hello, World!" program in C
[c Example Test: hello_world.c]  *
[c Example Test: hello_world.c]  * This example demonstrates basic C syntax including:
[c Example Test: hello_world.c]  * - Comments
[c Example Test: hello_world.c]  * - Include directives
[c Example Test: hello_world.c]  * - Function declarations
[c Example Test: hello_world.c]  * - Function definitions
[c Example Test: hello_world.c]  * - Print statements
[c Example Test: hello_world.c]  */'
[c Example Test: hello_world.c] [2025-08-02 23:23:41] [INFO] [QUERY_DEBUG] Added DOCSTRING node '/**
[c Example Test: hello_world.c]  * @file hello_world.c
[c Example Test: hello_world.c]  * @brief A simple "Hello, World!" program in C
[c Example Test: hello_world.c]  *
[c Example Test: hello_world.c]  * This example demonstrates basic C syntax including:
[c Example Test: hello_world.c]  * - Comments
[c Example Test: hello_world.c]  * - Include directives
[c Example Test: hello_world.c]  * - Function declarations
[c Example Test: hello_world.c]  * - Function definitions
[c Example Test: hello_world.c]  * - Print statements
[c Example Test: hello_world.c]  */' to AST (and registered in context)
[c Example Test: hello_world.c] [2025-08-02 23:23:41] [INFO] [QUERY_DEBUG] Found match 2 with 1 captures
[c Example Test: hello_world.c] [2025-08-02 23:23:41] [INFO] [QUERY_DEBUG] Capture 0: name='docstring', node_type='comment', text='/**
[c Example Test: hello_world.c]  * @brief A simple hello world progr'
[c Example Test: hello_world.c] [SINGPLUR_DEBUG] Found singular form 'docstring' in query type 'docstrings'
[c Example Test: hello_world.c] [2025-08-02 23:23:41] [INFO] [QUERY_DEBUG] Main node detection: query_type='docstrings', capture_name='docstring', clean_capture_name='docstring', clean_query_type='docstrings', is_main_node=1
[c Example Test: hello_world.c] [AST_CREATE] Created ASTNode at 0x6110000228c0, type=19
[c Example Test: hello_world.c] [AST_REGISTER_CALL] parser_add_ast_node(ctx, 0x6110000228c0) returned 1
[c Example Test: hello_world.c] [2025-08-02 23:23:41] [INFO] [QUERY_DEBUG] Set content for docstring node '/**
[c Example Test: hello_world.c]  * @brief A simple hello world program
[c Example Test: hello_world.c]  */'
[c Example Test: hello_world.c] [2025-08-02 23:23:41] [INFO] [QUERY_DEBUG] Added DOCSTRING node '/**
[c Example Test: hello_world.c]  * @brief A simple hello world program
[c Example Test: hello_world.c]  */' to AST (and registered in context)
[c Example Test: hello_world.c] [2025-08-02 23:23:41] [INFO] [QUERY_DEBUG] Found match 3 with 1 captures
[c Example Test: hello_world.c] [2025-08-02 23:23:41] [INFO] [QUERY_DEBUG] Capture 0: name='docstring', node_type='comment', text='/**
[c Example Test: hello_world.c]  * @brief A simple hello world progr'
[c Example Test: hello_world.c] [SINGPLUR_DEBUG] Found singular form 'docstring' in query type 'docstrings'
[c Example Test: hello_world.c] [2025-08-02 23:23:41] [INFO] [QUERY_DEBUG] Main node detection: query_type='docstrings', capture_name='docstring', clean_capture_name='docstring', clean_query_type='docstrings', is_main_node=1
[c Example Test: hello_world.c] [AST_CREATE] Created ASTNode at 0x611000022a00, type=19
[c Example Test: hello_world.c] [AST_REGISTER_CALL] parser_add_ast_node(ctx, 0x611000022a00) returned 1
[c Example Test: hello_world.c] [2025-08-02 23:23:41] [INFO] [QUERY_DEBUG] Set content for docstring node '/**
[c Example Test: hello_world.c]  * @brief A simple hello world program
[c Example Test: hello_world.c]  */'
[c Example Test: hello_world.c] [2025-08-02 23:23:41] [INFO] [QUERY_DEBUG] Added DOCSTRING node '/**
[c Example Test: hello_world.c]  * @brief A simple hello world program
[c Example Test: hello_world.c]  */' to AST (and registered in context)
[c Example Test: hello_world.c] [2025-08-02 23:23:41] [INFO] [QUERY_DEBUG] Query 'docstrings' finished processing: 3 matches, 3 nodes added
[c Example Test: hello_world.c] [2025-08-02 23:23:41] [INFO] [QUERY_DEBUG] Query 'docstrings' SUCCEEDED: Added 3 node(s)
[c Example Test: hello_world.c] [2025-08-02 23:23:41] [INFO] AST query processing complete: 3 successful, 5 failed, total AST nodes: 5
[c Example Test: hello_world.c] [2025-08-02 23:23:41] [INFO] [QUERY_DEBUG] AST query processing summary: 3 successful, 5 failed, total AST nodes: 5
[c Example Test: hello_world.c] [2025-08-02 23:23:41] [INFO] [POST_PROCESS] Starting variable scoping post-processing for 6 nodes
[c Example Test: hello_world.c] [2025-08-02 23:23:41] [INFO] [POST_PROCESS] Found 0 variables and 0 control flow structures
[c Example Test: hello_world.c] [2025-08-02 23:23:41] [INFO] [POST_PROCESS] Variable scoping post-processing complete
[c Example Test: hello_world.c] [2025-08-02 23:23:41] [INFO] *** DOCSTRING_REMOVAL: Starting removal of 3 docstring nodes from 5 children ***
[c Example Test: hello_world.c] [2025-08-02 23:23:41] [INFO] *** DOCSTRING_REMOVAL: Looking for docstring node '/**
[c Example Test: hello_world.c]  * @file hello_world.c
[c Example Test: hello_world.c]  * @brief A simple "Hello, World!" program in C
[c Example Test: hello_world.c]  *
[c Example Test: hello_world.c]  * This example demonstrates basic C syntax including:
[c Example Test: hello_world.c]  * - Comments
[c Example Test: hello_world.c]  * - Include directives
[c Example Test: hello_world.c]  * - Function declarations
[c Example Test: hello_world.c]  * - Function definitions
[c Example Test: hello_world.c]  * - Print statements
[c Example Test: hello_world.c]  */' to remove ***
[c Example Test: hello_world.c] [2025-08-02 23:23:41] [INFO] *** DOCSTRING_REMOVAL: Found docstring node at index 2, removing ***
[c Example Test: hello_world.c] [2025-08-02 23:23:41] [INFO] *** DOCSTRING_REMOVAL: Removed docstring node, new child count: 4 ***
[c Example Test: hello_world.c] [2025-08-02 23:23:41] [INFO] *** DOCSTRING_REMOVAL: Looking for docstring node '/**
[c Example Test: hello_world.c]  * @brief A simple hello world program
[c Example Test: hello_world.c]  */' to remove ***
[c Example Test: hello_world.c] [2025-08-02 23:23:41] [INFO] *** DOCSTRING_REMOVAL: Found docstring node at index 2, removing ***
[c Example Test: hello_world.c] [2025-08-02 23:23:41] [INFO] *** DOCSTRING_REMOVAL: Removed docstring node, new child count: 3 ***
[c Example Test: hello_world.c] [2025-08-02 23:23:41] [INFO] *** DOCSTRING_REMOVAL: Looking for docstring node '/**
[c Example Test: hello_world.c]  * @brief A simple hello world program
[c Example Test: hello_world.c]  */' to remove ***
[c Example Test: hello_world.c] [2025-08-02 23:23:41] [INFO] *** DOCSTRING_REMOVAL: Found docstring node at index 2, removing ***
[c Example Test: hello_world.c] [2025-08-02 23:23:41] [INFO] *** DOCSTRING_REMOVAL: Removed docstring node, new child count: 2 ***
[c Example Test: hello_world.c] [2025-08-02 23:23:41] [INFO] *** DOCSTRING_REMOVAL: Finished removal, final child count: 2 ***
[c Example Test: hello_world.c] DEBUG: read_file_contents called with path: core/tests/examples/c/basic_syntax/hello_world.c.expected.json
[c Example Test: hello_world.c] DEBUG: Current working directory: /home/matrillo/apps/scopemux-core/build-c/core/tests
[c Example Test: hello_world.c] DEBUG: Directory listing for core/tests/examples/c/basic_syntax:
[c Example Test: hello_world.c]   docstring_test.c
[c Example Test: hello_world.c]   hello_world.c
[c Example Test: hello_world.c]   .
[c Example Test: hello_world.c]   hello_world.c.expected.json
[c Example Test: hello_world.c]   variables_loops_conditions.c
[c Example Test: hello_world.c]   variables_loops_conditions.c.expected.json
[c Example Test: hello_world.c]   docstring_test.c.expected.json
[c Example Test: hello_world.c]   ..
[c Example Test: hello_world.c] DEBUG: file size for core/tests/examples/c/basic_syntax/hello_world.c.expected.json is 884 bytes
[c Example Test: hello_world.c] [ERR ] <unknown>: Docstring mismatch - expected '/**\n * @brief A simple hello world program\n */', got '/**
[c Example Test: hello_world.c] [ERR ]  * @brief A simple hello world program
[c Example Test: hello_world.c] [ERR ]  */'
[c Example Test: hello_world.c] [ERR ] (null): Docstring mismatch
[c Example Test: hello_world.c] [ERR ] Expected docstring length: 48
[c Example Test: hello_world.c] [ERR ] Actual docstring length: 46
[c Example Test: hello_world.c] [ERR ] Expected docstring bytes:
[c Example Test: hello_world.c] [ERR ] Byte 0: 47 (0x2f) '/'
[c Example Test: hello_world.c] [ERR ] Byte 1: 42 (0x2a) '*'
[c Example Test: hello_world.c] [ERR ] Byte 2: 42 (0x2a) '*'
[c Example Test: hello_world.c] [ERR ] Byte 3: 92 (0x5c) '\'
[c Example Test: hello_world.c] [ERR ] Byte 4: 110 (0x6e) 'n'
[c Example Test: hello_world.c] [ERR ] Byte 5: 32 (0x20) ' '
[c Example Test: hello_world.c] [ERR ] Byte 6: 42 (0x2a) '*'
[c Example Test: hello_world.c] [ERR ] Byte 7: 32 (0x20) ' '
[c Example Test: hello_world.c] [ERR ] Byte 8: 64 (0x40) '@'
[c Example Test: hello_world.c] [ERR ] Byte 9: 98 (0x62) 'b'
[c Example Test: hello_world.c] [ERR ] Byte 10: 114 (0x72) 'r'
[c Example Test: hello_world.c] [ERR ] Byte 11: 105 (0x69) 'i'
[c Example Test: hello_world.c] [ERR ] Byte 12: 101 (0x65) 'e'
[c Example Test: hello_world.c] [ERR ] Byte 13: 102 (0x66) 'f'
[c Example Test: hello_world.c] [ERR ] Byte 14: 32 (0x20) ' '
[c Example Test: hello_world.c] [ERR ] Byte 15: 65 (0x41) 'A'
[c Example Test: hello_world.c] [ERR ] Byte 16: 32 (0x20) ' '
[c Example Test: hello_world.c] [ERR ] Byte 17: 115 (0x73) 's'
[c Example Test: hello_world.c] [ERR ] Byte 18: 105 (0x69) 'i'
[c Example Test: hello_world.c] [ERR ] Byte 19: 109 (0x6d) 'm'
[c Example Test: hello_world.c] [ERR ] Byte 20: 112 (0x70) 'p'
[c Example Test: hello_world.c] [ERR ] Byte 21: 108 (0x6c) 'l'
[c Example Test: hello_world.c] [ERR ] Byte 22: 101 (0x65) 'e'
[c Example Test: hello_world.c] [ERR ] Byte 23: 32 (0x20) ' '
[c Example Test: hello_world.c] [ERR ] Byte 24: 104 (0x68) 'h'
[c Example Test: hello_world.c] [ERR ] Byte 25: 101 (0x65) 'e'
[c Example Test: hello_world.c] [ERR ] Byte 26: 108 (0x6c) 'l'
[c Example Test: hello_world.c] [ERR ] Byte 27: 108 (0x6c) 'l'
[c Example Test: hello_world.c] [ERR ] Byte 28: 111 (0x6f) 'o'
[c Example Test: hello_world.c] [ERR ] Byte 29: 32 (0x20) ' '
[c Example Test: hello_world.c] [ERR ] Byte 30: 119 (0x77) 'w'
[c Example Test: hello_world.c] [ERR ] Byte 31: 111 (0x6f) 'o'
[c Example Test: hello_world.c] [ERR ] Byte 32: 114 (0x72) 'r'
[c Example Test: hello_world.c] [ERR ] Byte 33: 108 (0x6c) 'l'
[c Example Test: hello_world.c] [ERR ] Byte 34: 100 (0x64) 'd'
[c Example Test: hello_world.c] [ERR ] Byte 35: 32 (0x20) ' '
[c Example Test: hello_world.c] [ERR ] Byte 36: 112 (0x70) 'p'
[c Example Test: hello_world.c] [ERR ] Byte 37: 114 (0x72) 'r'
[c Example Test: hello_world.c] [ERR ] Byte 38: 111 (0x6f) 'o'
[c Example Test: hello_world.c] [ERR ] Byte 39: 103 (0x67) 'g'
[c Example Test: hello_world.c] [ERR ] Byte 40: 114 (0x72) 'r'
[c Example Test: hello_world.c] [ERR ] Byte 41: 97 (0x61) 'a'
[c Example Test: hello_world.c] [ERR ] Byte 42: 109 (0x6d) 'm'
[c Example Test: hello_world.c] [ERR ] Byte 43: 92 (0x5c) '\'
[c Example Test: hello_world.c] [ERR ] Byte 44: 110 (0x6e) 'n'
[c Example Test: hello_world.c] [ERR ] Byte 45: 32 (0x20) ' '
[c Example Test: hello_world.c] [ERR ] Byte 46: 42 (0x2a) '*'
[c Example Test: hello_world.c] [ERR ] Byte 47: 47 (0x2f) '/'
[c Example Test: hello_world.c] [ERR ] Actual docstring bytes:
[c Example Test: hello_world.c] [ERR ] Byte 0: 47 (0x2f) '/'
[c Example Test: hello_world.c] [ERR ] Byte 1: 42 (0x2a) '*'
[c Example Test: hello_world.c] [ERR ] Byte 2: 42 (0x2a) '*'
[c Example Test: hello_world.c] [ERR ] Byte 3: 10 (0x0a) '?'
[c Example Test: hello_world.c] [ERR ] Byte 4: 32 (0x20) ' '
[c Example Test: hello_world.c] [ERR ] Byte 5: 42 (0x2a) '*'
[c Example Test: hello_world.c] [ERR ] Byte 6: 32 (0x20) ' '
[c Example Test: hello_world.c] [ERR ] Byte 7: 64 (0x40) '@'
[c Example Test: hello_world.c] [ERR ] Byte 8: 98 (0x62) 'b'
[c Example Test: hello_world.c] [ERR ] Byte 9: 114 (0x72) 'r'
[c Example Test: hello_world.c] [ERR ] Byte 10: 105 (0x69) 'i'
[c Example Test: hello_world.c] [ERR ] Byte 11: 101 (0x65) 'e'
[c Example Test: hello_world.c] [ERR ] Byte 12: 102 (0x66) 'f'
[c Example Test: hello_world.c] [ERR ] Byte 13: 32 (0x20) ' '
[c Example Test: hello_world.c] [ERR ] Byte 14: 65 (0x41) 'A'
[c Example Test: hello_world.c] [ERR ] Byte 15: 32 (0x20) ' '
[c Example Test: hello_world.c] [ERR ] Byte 16: 115 (0x73) 's'
[c Example Test: hello_world.c] [ERR ] Byte 17: 105 (0x69) 'i'
[c Example Test: hello_world.c] [ERR ] Byte 18: 109 (0x6d) 'm'
[c Example Test: hello_world.c] [ERR ] Byte 19: 112 (0x70) 'p'
[c Example Test: hello_world.c] [ERR ] Byte 20: 108 (0x6c) 'l'
[c Example Test: hello_world.c] [ERR ] Byte 21: 101 (0x65) 'e'
[c Example Test: hello_world.c] [ERR ] Byte 22: 32 (0x20) ' '
[c Example Test: hello_world.c] [ERR ] Byte 23: 104 (0x68) 'h'
[c Example Test: hello_world.c] [ERR ] Byte 24: 101 (0x65) 'e'
[c Example Test: hello_world.c] [ERR ] Byte 25: 108 (0x6c) 'l'
[c Example Test: hello_world.c] [ERR ] Byte 26: 108 (0x6c) 'l'
[c Example Test: hello_world.c] [ERR ] Byte 27: 111 (0x6f) 'o'
[c Example Test: hello_world.c] [ERR ] Byte 28: 32 (0x20) ' '
[c Example Test: hello_world.c] [ERR ] Byte 29: 119 (0x77) 'w'
[c Example Test: hello_world.c] [ERR ] Byte 30: 111 (0x6f) 'o'
[c Example Test: hello_world.c] [ERR ] Byte 31: 114 (0x72) 'r'
[c Example Test: hello_world.c] [ERR ] Byte 32: 108 (0x6c) 'l'
[c Example Test: hello_world.c] [ERR ] Byte 33: 100 (0x64) 'd'
[c Example Test: hello_world.c] [ERR ] Byte 34: 32 (0x20) ' '
[c Example Test: hello_world.c] [ERR ] Byte 35: 112 (0x70) 'p'
[c Example Test: hello_world.c] [ERR ] Byte 36: 114 (0x72) 'r'
[c Example Test: hello_world.c] [ERR ] Byte 37: 111 (0x6f) 'o'
[c Example Test: hello_world.c] [ERR ] Byte 38: 103 (0x67) 'g'
[c Example Test: hello_world.c] [ERR ] Byte 39: 114 (0x72) 'r'
[c Example Test: hello_world.c] [ERR ] Byte 40: 97 (0x61) 'a'
[c Example Test: hello_world.c] [ERR ] Byte 41: 109 (0x6d) 'm'
[c Example Test: hello_world.c] [ERR ] Byte 42: 10 (0x0a) '?'
[c Example Test: hello_world.c] [ERR ] Byte 43: 32 (0x20) ' '
[c Example Test: hello_world.c] [ERR ] Byte 44: 42 (0x2a) '*'
[c Example Test: hello_world.c] [ERR ] Byte 45: 47 (0x2f) '/'
[c Example Test: hello_world.c] [ERR ] <unknown>: Docstring mismatch - expected '/**\n * @file hello_world.c\n * @brief A simple \"Hello, World!\" program in C\n *\n * This example demonstrates basic C syntax including:\n * - Comments\n * - Include directives\n * - Function declarations\n * - Function definitions\n * - Print statements\n */', got '/**
[c Example Test: hello_world.c] [ERR ]  * @file hello_world.c
[c Example Test: hello_world.c] [ERR ]  * @brief A simple "Hello, World!" program in C
[c Example Test: hello_world.c] [ERR ]  *
[c Example Test: hello_world.c] [ERR ]  * This example demonstrates basic C syntax including:
[c Example Test: hello_world.c] [ERR ]  * - Comments
[c Example Test: hello_world.c] [ERR ]  * - Include directives
[c Example Test: hello_world.c] [ERR ]  * - Function declarations
[c Example Test: hello_world.c] [ERR ]  * - Function definitions
[c Example Test: hello_world.c] [ERR ]  * - Print statements
[c Example Test: hello_world.c] [ERR ]  */'
[c Example Test: hello_world.c] [ERR ] (null): Docstring mismatch
[c Example Test: hello_world.c] [ERR ] Expected docstring length: 261
[c Example Test: hello_world.c] [ERR ] Actual docstring length: 249
[c Example Test: hello_world.c] [ERR ] Expected docstring bytes:
[c Example Test: hello_world.c] [ERR ] Byte 0: 47 (0x2f) '/'
[c Example Test: hello_world.c] [ERR ] Byte 1: 42 (0x2a) '*'
[c Example Test: hello_world.c] [ERR ] Byte 2: 42 (0x2a) '*'
[c Example Test: hello_world.c] [ERR ] Byte 3: 92 (0x5c) '\'
[c Example Test: hello_world.c] [ERR ] Byte 4: 110 (0x6e) 'n'
[c Example Test: hello_world.c] [ERR ] Byte 5: 32 (0x20) ' '
[c Example Test: hello_world.c] [ERR ] Byte 6: 42 (0x2a) '*'
[c Example Test: hello_world.c] [ERR ] Byte 7: 32 (0x20) ' '
[c Example Test: hello_world.c] [ERR ] Byte 8: 64 (0x40) '@'
[c Example Test: hello_world.c] [ERR ] Byte 9: 102 (0x66) 'f'
[c Example Test: hello_world.c] [ERR ] Byte 10: 105 (0x69) 'i'
[c Example Test: hello_world.c] [ERR ] Byte 11: 108 (0x6c) 'l'
[c Example Test: hello_world.c] [ERR ] Byte 12: 101 (0x65) 'e'
[c Example Test: hello_world.c] [ERR ] Byte 13: 32 (0x20) ' '
[c Example Test: hello_world.c] [ERR ] Byte 14: 104 (0x68) 'h'
[c Example Test: hello_world.c] [ERR ] Byte 15: 101 (0x65) 'e'
[c Example Test: hello_world.c] [ERR ] Byte 16: 108 (0x6c) 'l'
[c Example Test: hello_world.c] [ERR ] Byte 17: 108 (0x6c) 'l'
[c Example Test: hello_world.c] [ERR ] Byte 18: 111 (0x6f) 'o'
[c Example Test: hello_world.c] [ERR ] Byte 19: 95 (0x5f) '_'
[c Example Test: hello_world.c] [ERR ] Byte 20: 119 (0x77) 'w'
[c Example Test: hello_world.c] [ERR ] Byte 21: 111 (0x6f) 'o'
[c Example Test: hello_world.c] [ERR ] Byte 22: 114 (0x72) 'r'
[c Example Test: hello_world.c] [ERR ] Byte 23: 108 (0x6c) 'l'
[c Example Test: hello_world.c] [ERR ] Byte 24: 100 (0x64) 'd'
[c Example Test: hello_world.c] [ERR ] Byte 25: 46 (0x2e) '.'
[c Example Test: hello_world.c] [ERR ] Byte 26: 99 (0x63) 'c'
[c Example Test: hello_world.c] [ERR ] Byte 27: 92 (0x5c) '\'
[c Example Test: hello_world.c] [ERR ] Byte 28: 110 (0x6e) 'n'
[c Example Test: hello_world.c] [ERR ] Byte 29: 32 (0x20) ' '
[c Example Test: hello_world.c] [ERR ] Byte 30: 42 (0x2a) '*'
[c Example Test: hello_world.c] [ERR ] Byte 31: 32 (0x20) ' '
[c Example Test: hello_world.c] [ERR ] Byte 32: 64 (0x40) '@'
[c Example Test: hello_world.c] [ERR ] Byte 33: 98 (0x62) 'b'
[c Example Test: hello_world.c] [ERR ] Byte 34: 114 (0x72) 'r'
[c Example Test: hello_world.c] [ERR ] Byte 35: 105 (0x69) 'i'
[c Example Test: hello_world.c] [ERR ] Byte 36: 101 (0x65) 'e'
[c Example Test: hello_world.c] [ERR ] Byte 37: 102 (0x66) 'f'
[c Example Test: hello_world.c] [ERR ] Byte 38: 32 (0x20) ' '
[c Example Test: hello_world.c] [ERR ] Byte 39: 65 (0x41) 'A'
[c Example Test: hello_world.c] [ERR ] Byte 40: 32 (0x20) ' '
[c Example Test: hello_world.c] [ERR ] Byte 41: 115 (0x73) 's'
[c Example Test: hello_world.c] [ERR ] Byte 42: 105 (0x69) 'i'
[c Example Test: hello_world.c] [ERR ] Byte 43: 109 (0x6d) 'm'
[c Example Test: hello_world.c] [ERR ] Byte 44: 112 (0x70) 'p'
[c Example Test: hello_world.c] [ERR ] Byte 45: 108 (0x6c) 'l'
[c Example Test: hello_world.c] [ERR ] Byte 46: 101 (0x65) 'e'
[c Example Test: hello_world.c] [ERR ] Byte 47: 32 (0x20) ' '
[c Example Test: hello_world.c] [ERR ] Byte 48: 92 (0x5c) '\'
[c Example Test: hello_world.c] [ERR ] Byte 49: 34 (0x22) '"'
[c Example Test: hello_world.c] [ERR ] Actual docstring bytes:
[c Example Test: hello_world.c] [ERR ] Byte 0: 47 (0x2f) '/'
[c Example Test: hello_world.c] [ERR ] Byte 1: 42 (0x2a) '*'
[c Example Test: hello_world.c] [ERR ] Byte 2: 42 (0x2a) '*'
[c Example Test: hello_world.c] [ERR ] Byte 3: 10 (0x0a) '?'
[c Example Test: hello_world.c] [ERR ] Byte 4: 32 (0x20) ' '
[c Example Test: hello_world.c] [ERR ] Byte 5: 42 (0x2a) '*'
[c Example Test: hello_world.c] [ERR ] Byte 6: 32 (0x20) ' '
[c Example Test: hello_world.c] [ERR ] Byte 7: 64 (0x40) '@'
[c Example Test: hello_world.c] [ERR ] Byte 8: 102 (0x66) 'f'
[c Example Test: hello_world.c] [ERR ] Byte 9: 105 (0x69) 'i'
[c Example Test: hello_world.c] [ERR ] Byte 10: 108 (0x6c) 'l'
[c Example Test: hello_world.c] [ERR ] Byte 11: 101 (0x65) 'e'
[c Example Test: hello_world.c] [ERR ] Byte 12: 32 (0x20) ' '
[c Example Test: hello_world.c] [ERR ] Byte 13: 104 (0x68) 'h'
[c Example Test: hello_world.c] [ERR ] Byte 14: 101 (0x65) 'e'
[c Example Test: hello_world.c] [ERR ] Byte 15: 108 (0x6c) 'l'
[c Example Test: hello_world.c] [ERR ] Byte 16: 108 (0x6c) 'l'
[c Example Test: hello_world.c] [ERR ] Byte 17: 111 (0x6f) 'o'
[c Example Test: hello_world.c] [ERR ] Byte 18: 95 (0x5f) '_'
[c Example Test: hello_world.c] [ERR ] Byte 19: 119 (0x77) 'w'
[c Example Test: hello_world.c] [ERR ] Byte 20: 111 (0x6f) 'o'
[c Example Test: hello_world.c] [ERR ] Byte 21: 114 (0x72) 'r'
[c Example Test: hello_world.c] [ERR ] Byte 22: 108 (0x6c) 'l'
[c Example Test: hello_world.c] [ERR ] Byte 23: 100 (0x64) 'd'
[c Example Test: hello_world.c] [ERR ] Byte 24: 46 (0x2e) '.'
[c Example Test: hello_world.c] [ERR ] Byte 25: 99 (0x63) 'c'
[c Example Test: hello_world.c] [ERR ] Byte 26: 10 (0x0a) '?'
[c Example Test: hello_world.c] [ERR ] Byte 27: 32 (0x20) ' '
[c Example Test: hello_world.c] [ERR ] Byte 28: 42 (0x2a) '*'
[c Example Test: hello_world.c] [ERR ] Byte 29: 32 (0x20) ' '
[c Example Test: hello_world.c] [ERR ] Byte 30: 64 (0x40) '@'
[c Example Test: hello_world.c] [ERR ] Byte 31: 98 (0x62) 'b'
[c Example Test: hello_world.c] [ERR ] Byte 32: 114 (0x72) 'r'
[c Example Test: hello_world.c] [ERR ] Byte 33: 105 (0x69) 'i'
[c Example Test: hello_world.c] [ERR ] Byte 34: 101 (0x65) 'e'
[c Example Test: hello_world.c] [ERR ] Byte 35: 102 (0x66) 'f'
[c Example Test: hello_world.c] [ERR ] Byte 36: 32 (0x20) ' '
[c Example Test: hello_world.c] [ERR ] Byte 37: 65 (0x41) 'A'
[c Example Test: hello_world.c] [ERR ] Byte 38: 32 (0x20) ' '
[c Example Test: hello_world.c] [ERR ] Byte 39: 115 (0x73) 's'
[c Example Test: hello_world.c] [ERR ] Byte 40: 105 (0x69) 'i'
[c Example Test: hello_world.c] [ERR ] Byte 41: 109 (0x6d) 'm'
[c Example Test: hello_world.c] [ERR ] Byte 42: 112 (0x70) 'p'
[c Example Test: hello_world.c] [ERR ] Byte 43: 108 (0x6c) 'l'
[c Example Test: hello_world.c] [ERR ] Byte 44: 101 (0x65) 'e'
[c Example Test: hello_world.c] [ERR ] Byte 45: 32 (0x20) ' '
[c Example Test: hello_world.c] [ERR ] Byte 46: 34 (0x22) '"'
[c Example Test: hello_world.c] [ERR ] Byte 47: 72 (0x48) 'H'
[c Example Test: hello_world.c] [ERR ] Byte 48: 101 (0x65) 'e'
[c Example Test: hello_world.c] [ERR ] Byte 49: 108 (0x6c) 'l'
[c Example Test: hello_world.c] [ERR ] (null): Docstring mismatch
[c Example Test: hello_world.c] [ERR ] Expected docstring length: 48
[c Example Test: hello_world.c] [ERR ] Actual docstring length: 46
[c Example Test: hello_world.c] [ERR ] Expected docstring bytes:
[c Example Test: hello_world.c] [ERR ] Byte 0: 47 (0x2f) '/'
[c Example Test: hello_world.c] [ERR ] Byte 1: 42 (0x2a) '*'
[c Example Test: hello_world.c] [ERR ] Byte 2: 42 (0x2a) '*'
[c Example Test: hello_world.c] [ERR ] Byte 3: 92 (0x5c) '\'
[c Example Test: hello_world.c] [ERR ] Byte 4: 110 (0x6e) 'n'
[c Example Test: hello_world.c] [ERR ] Byte 5: 32 (0x20) ' '
[c Example Test: hello_world.c] [ERR ] Byte 6: 42 (0x2a) '*'
[c Example Test: hello_world.c] [ERR ] Byte 7: 32 (0x20) ' '
[c Example Test: hello_world.c] [ERR ] Byte 8: 64 (0x40) '@'
[c Example Test: hello_world.c] [ERR ] Byte 9: 98 (0x62) 'b'
[c Example Test: hello_world.c] [ERR ] Byte 10: 114 (0x72) 'r'
[c Example Test: hello_world.c] [ERR ] Byte 11: 105 (0x69) 'i'
[c Example Test: hello_world.c] [ERR ] Byte 12: 101 (0x65) 'e'
[c Example Test: hello_world.c] [ERR ] Byte 13: 102 (0x66) 'f'
[c Example Test: hello_world.c] [ERR ] Byte 14: 32 (0x20) ' '
[c Example Test: hello_world.c] [ERR ] Byte 15: 65 (0x41) 'A'
[c Example Test: hello_world.c] [ERR ] Byte 16: 32 (0x20) ' '
[c Example Test: hello_world.c] [ERR ] Byte 17: 115 (0x73) 's'
[c Example Test: hello_world.c] [ERR ] Byte 18: 105 (0x69) 'i'
[c Example Test: hello_world.c] [ERR ] Byte 19: 109 (0x6d) 'm'
[c Example Test: hello_world.c] [ERR ] Byte 20: 112 (0x70) 'p'
[c Example Test: hello_world.c] [ERR ] Byte 21: 108 (0x6c) 'l'
[c Example Test: hello_world.c] [ERR ] Byte 22: 101 (0x65) 'e'
[c Example Test: hello_world.c] [ERR ] Byte 23: 32 (0x20) ' '
[c Example Test: hello_world.c] [ERR ] Byte 24: 104 (0x68) 'h'
[c Example Test: hello_world.c] [ERR ] Byte 25: 101 (0x65) 'e'
[c Example Test: hello_world.c] [ERR ] Byte 26: 108 (0x6c) 'l'
[c Example Test: hello_world.c] [ERR ] Byte 27: 108 (0x6c) 'l'
[c Example Test: hello_world.c] [ERR ] Byte 28: 111 (0x6f) 'o'
[c Example Test: hello_world.c] [ERR ] Byte 29: 32 (0x20) ' '
[c Example Test: hello_world.c] [ERR ] Byte 30: 119 (0x77) 'w'
[c Example Test: hello_world.c] [ERR ] Byte 31: 111 (0x6f) 'o'
[c Example Test: hello_world.c] [ERR ] Byte 32: 114 (0x72) 'r'
[c Example Test: hello_world.c] [ERR ] Byte 33: 108 (0x6c) 'l'
[c Example Test: hello_world.c] [ERR ] Byte 34: 100 (0x64) 'd'
[c Example Test: hello_world.c] [ERR ] Byte 35: 32 (0x20) ' '
[c Example Test: hello_world.c] [ERR ] Byte 36: 112 (0x70) 'p'
[c Example Test: hello_world.c] [ERR ] Byte 37: 114 (0x72) 'r'
[c Example Test: hello_world.c] [ERR ] Byte 38: 111 (0x6f) 'o'
[c Example Test: hello_world.c] [ERR ] Byte 39: 103 (0x67) 'g'
[c Example Test: hello_world.c] [ERR ] Byte 40: 114 (0x72) 'r'
[c Example Test: hello_world.c] [ERR ] Byte 41: 97 (0x61) 'a'
[c Example Test: hello_world.c] [ERR ] Byte 42: 109 (0x6d) 'm'
[c Example Test: hello_world.c] [ERR ] Byte 43: 92 (0x5c) '\'
[c Example Test: hello_world.c] [ERR ] Byte 44: 110 (0x6e) 'n'
[c Example Test: hello_world.c] [ERR ] Byte 45: 32 (0x20) ' '
[c Example Test: hello_world.c] [ERR ] Byte 46: 42 (0x2a) '*'
[c Example Test: hello_world.c] [ERR ] Byte 47: 47 (0x2f) '/'
[c Example Test: hello_world.c] [ERR ] Actual docstring bytes:
[c Example Test: hello_world.c] [ERR ] Byte 0: 47 (0x2f) '/'
[c Example Test: hello_world.c] [ERR ] Byte 1: 42 (0x2a) '*'
[c Example Test: hello_world.c] [ERR ] Byte 2: 42 (0x2a) '*'
[c Example Test: hello_world.c] [ERR ] Byte 3: 10 (0x0a) '?'
[c Example Test: hello_world.c] [ERR ] Byte 4: 32 (0x20) ' '
[c Example Test: hello_world.c] [ERR ] Byte 5: 42 (0x2a) '*'
[c Example Test: hello_world.c] [ERR ] Byte 6: 32 (0x20) ' '
[c Example Test: hello_world.c] [ERR ] Byte 7: 64 (0x40) '@'
[c Example Test: hello_world.c] [ERR ] Byte 8: 98 (0x62) 'b'
[c Example Test: hello_world.c] [ERR ] Byte 9: 114 (0x72) 'r'
[c Example Test: hello_world.c] [ERR ] Byte 10: 105 (0x69) 'i'
[c Example Test: hello_world.c] [ERR ] Byte 11: 101 (0x65) 'e'
[c Example Test: hello_world.c] [ERR ] Byte 12: 102 (0x66) 'f'
[c Example Test: hello_world.c] [ERR ] Byte 13: 32 (0x20) ' '
[c Example Test: hello_world.c] [ERR ] Byte 14: 65 (0x41) 'A'
[c Example Test: hello_world.c] [ERR ] Byte 15: 32 (0x20) ' '
[c Example Test: hello_world.c] [ERR ] Byte 16: 115 (0x73) 's'
[c Example Test: hello_world.c] [ERR ] Byte 17: 105 (0x69) 'i'
[c Example Test: hello_world.c] [ERR ] Byte 18: 109 (0x6d) 'm'
[c Example Test: hello_world.c] [ERR ] Byte 19: 112 (0x70) 'p'
[c Example Test: hello_world.c] [ERR ] Byte 20: 108 (0x6c) 'l'
[c Example Test: hello_world.c] [ERR ] Byte 21: 101 (0x65) 'e'
[c Example Test: hello_world.c] [ERR ] Byte 22: 32 (0x20) ' '
[c Example Test: hello_world.c] [ERR ] Byte 23: 104 (0x68) 'h'
[c Example Test: hello_world.c] [ERR ] Byte 24: 101 (0x65) 'e'
[c Example Test: hello_world.c] [ERR ] Byte 25: 108 (0x6c) 'l'
[c Example Test: hello_world.c] [ERR ] Byte 26: 108 (0x6c) 'l'
[c Example Test: hello_world.c] [ERR ] Byte 27: 111 (0x6f) 'o'
[c Example Test: hello_world.c] [ERR ] Byte 28: 32 (0x20) ' '
[c Example Test: hello_world.c] [ERR ] Byte 29: 119 (0x77) 'w'
[c Example Test: hello_world.c] [ERR ] Byte 30: 111 (0x6f) 'o'
[c Example Test: hello_world.c] [ERR ] Byte 31: 114 (0x72) 'r'
[c Example Test: hello_world.c] [ERR ] Byte 32: 108 (0x6c) 'l'
[c Example Test: hello_world.c] [ERR ] Byte 33: 100 (0x64) 'd'
[c Example Test: hello_world.c] [ERR ] Byte 34: 32 (0x20) ' '
[c Example Test: hello_world.c] [ERR ] Byte 35: 112 (0x70) 'p'
[c Example Test: hello_world.c] [ERR ] Byte 36: 114 (0x72) 'r'
[c Example Test: hello_world.c] [ERR ] Byte 37: 111 (0x6f) 'o'
[c Example Test: hello_world.c] [ERR ] Byte 38: 103 (0x67) 'g'
[c Example Test: hello_world.c] [ERR ] Byte 39: 114 (0x72) 'r'
[c Example Test: hello_world.c] [ERR ] Byte 40: 97 (0x61) 'a'
[c Example Test: hello_world.c] [ERR ] Byte 41: 109 (0x6d) 'm'
[c Example Test: hello_world.c] [ERR ] Byte 42: 10 (0x0a) '?'
[c Example Test: hello_world.c] [ERR ] Byte 43: 32 (0x20) ' '
[c Example Test: hello_world.c] [ERR ] Byte 44: 42 (0x2a) '*'
[c Example Test: hello_world.c] [ERR ] Byte 45: 47 (0x2f) '/'
[c Example Test: hello_world.c] 
[c Example Test: hello_world.c] ========== AST/JSON MISMATCH ==========
[c Example Test: hello_world.c] ACTUAL AST (as JSON):
[c Example Test: hello_world.c] {
[c Example Test: hello_world.c]   "type": "ROOT",
[c Example Test: hello_world.c]   "name": "hello_world.c",
[c Example Test: hello_world.c]   "qualified_name": "hello_world.c",
[c Example Test: hello_world.c]   "signature": "",
[c Example Test: hello_world.c]   "docstring": "/**\n * @file hello_world.c\n * @brief A simple \"Hello, World!\" program in C\n *\n * This example demonstrates basic C syntax including:\n * - Comments\n * - Include directives\n * - Function declarations\n * - Function definitions\n * - Print statements\n */",
[c Example Test: hello_world.c]   "children": [
[c Example Test: hello_world.c]     {
[c Example Test: hello_world.c]       "type": "INCLUDE",
[c Example Test: hello_world.c]       "name": "<stdio.h>",
[c Example Test: hello_world.c]       "qualified_name": "hello_world.c.<stdio.h>",
[c Example Test: hello_world.c]       "signature": "",
[c Example Test: hello_world.c]       "docstring": "",
[c Example Test: hello_world.c]       "children": [      ]
[c Example Test: hello_world.c]     },
[c Example Test: hello_world.c]     {
[c Example Test: hello_world.c]       "type": "FUNCTION",
[c Example Test: hello_world.c]       "name": "main",
[c Example Test: hello_world.c]       "qualified_name": "hello_world.c.main",
[c Example Test: hello_world.c]       "signature": "int main(void)",
[c Example Test: hello_world.c]       "docstring": "/**\n * @brief A simple hello world program\n */",
[c Example Test: hello_world.c]       "children": [      ]
[c Example Test: hello_world.c]     }
[c Example Test: hello_world.c]   ]
[c Example Test: hello_world.c] }
[c Example Test: hello_world.c] EXPECTED AST SECTION:
[c Example Test: hello_world.c] 
[c Example Test: hello_world.c] =======================================
[c Example Test: hello_world.c] [DEBUG] parser_clear starting for ctx=0x60d000000110
[c Example Test: hello_world.c] [DEBUG] ctx->num_ast_nodes=7
[c Example Test: hello_world.c] [WARNING] Attempting to clear the same context twice: 0x60d000000110
[c Example Test: hello_world.c] [scopemux] Loading hardcoded node type mappings:
[c Example Test: hello_world.c]   functions -> NODE_FUNCTION
[c Example Test: hello_world.c]   classes -> NODE_CLASS
[c Example Test: hello_world.c]   methods -> NODE_METHOD
[c Example Test: hello_world.c]   variables -> NODE_VARIABLE
[c Example Test: hello_world.c]   modules -> NODE_MODULE
[c Example Test: hello_world.c]   structs -> NODE_STRUCT
[c Example Test: hello_world.c]   unions -> NODE_UNION
[c Example Test: hello_world.c]   enums -> NODE_ENUM
[c Example Test: hello_world.c]   typedefs -> NODE_TYPEDEF
[c Example Test: hello_world.c]   includes -> NODE_INCLUDE
[c Example Test: hello_world.c]   macros -> NODE_MACRO
[c Example Test: hello_world.c]   docstrings -> NODE_DOCSTRING
[c Example Test: hello_world.c]   interfaces -> NODE_INTERFACE
[c Example Test: hello_world.c]   template_specializations -> NODE_TEMPLATE_SPECIALIZATION
[c Example Test: hello_world.c] {
[c Example Test: hello_world.c]   "type":   "ROOT",
[c Example Test: hello_world.c]   "name":   "hello_world.c",
[c Example Test: hello_world.c]   "qualified_name":   "hello_world.c",
[c Example Test: hello_world.c]   "signature":   "",
[c Example Test: hello_world.c]   "docstring":   "/**\n * @file hello_world.c\n * @brief A simple \"Hello, World!\" program in C\n *\n * This example demonstrates basic C syntax including:\n * - Comments\n * - Include directives\n * - Function declarations\n * - Function definitions\n * - Print statements\n */",
[c Example Test: hello_world.c]   "children":   [
[c Example Test: hello_world.c]     {
[c Example Test: hello_world.c]       "type":       "INCLUDE",
[c Example Test: hello_world.c]       "name":       "<stdio.h>",
[c Example Test: hello_world.c]       "qualified_name":       "hello_world.c.<stdio.h>",
[c Example Test: hello_world.c]       "signature":       "",
[c Example Test: hello_world.c]       "docstring":       "",
[c Example Test: hello_world.c]       "children":       [
[c Example Test: hello_world.c]       ]
[c Example Test: hello_world.c]     },
[c Example Test: hello_world.c]     {
[c Example Test: hello_world.c]       "type":       "FUNCTION",
[c Example Test: hello_world.c]       "name":       "main",
[c Example Test: hello_world.c]       "qualified_name":       "hello_world.c.main",
[c Example Test: hello_world.c]       "signature":       "int main(void)",
[c Example Test: hello_world.c]       "docstring":       "/**\n * @brief A simple hello world program\n */",
[c Example Test: hello_world.c]       "children":       [
[c Example Test: hello_world.c]       ]
[c Example Test: hello_world.c]     }
[c Example Test: hello_world.c]   ]
[c Example Test: hello_world.c] }[QUERY_MANAGER_FREE] ENTER: manager=0x606000013be0
[c Example Test: hello_world.c] [QUERY_MANAGER_FREE] Freeing queries_dir at 0x6030000124f0
[c Example Test: hello_world.c] [QUERY_MANAGER_FREE] Freeing cached queries array at 0x604000002110 (language_count=6)
[c Example Test: hello_world.c] [QUERY_MANAGER_FREE] Freeing cached queries for language 0 at 0x611000001080 (query_count=0)
[c Example Test: hello_world.c] [QUERY_MANAGER_FREE] Freeing QueryCacheEntry array at 0x611000001080
[c Example Test: hello_world.c] [QUERY_MANAGER_FREE] Freeing cached queries for language 1 at 0x6110000011c0 (query_count=8)
[c Example Test: hello_world.c] [QUERY_MANAGER_FREE] Freeing QueryCacheEntry array at 0x6110000011c0
[c Example Test: hello_world.c] [QUERY_MANAGER_FREE] Freeing cached queries for language 2 at 0x611000001300 (query_count=0)
[c Example Test: hello_world.c] [QUERY_MANAGER_FREE] Freeing QueryCacheEntry array at 0x611000001300
[c Example Test: hello_world.c] [QUERY_MANAGER_FREE] Freeing cached queries for language 3 at 0x611000001440 (query_count=0)
[c Example Test: hello_world.c] [QUERY_MANAGER_FREE] Freeing QueryCacheEntry array at 0x611000001440
[c Example Test: hello_world.c] [QUERY_MANAGER_FREE] Freeing cached queries for language 4 at 0x611000001580 (query_count=0)
[c Example Test: hello_world.c] [QUERY_MANAGER_FREE] Freeing QueryCacheEntry array at 0x611000001580
[c Example Test: hello_world.c] [QUERY_MANAGER_FREE] Freeing cached queries for language 5 at 0x6110000016c0 (query_count=0)
[c Example Test: hello_world.c] [QUERY_MANAGER_FREE] Freeing QueryCacheEntry array at 0x6110000016c0
[c Example Test: hello_world.c] [QUERY_MANAGER_FREE] Freeing cached_queries array at 0x604000002110
[c Example Test: hello_world.c] [QUERY_MANAGER_FREE] Freeing languages array at 0x6040000020d0
[c Example Test: hello_world.c] [QUERY_MANAGER_FREE] Freeing language_types array at 0x603000012520
[c Example Test: hello_world.c] [QUERY_MANAGER_FREE] Freeing query_counts array at 0x604000002150
[c Example Test: hello_world.c] [QUERY_MANAGER_FREE] Freeing manager struct at 0x606000013be0
[c Example Test: hello_world.c] [QUERY_MANAGER_FREE] EXIT: Query manager cleanup complete
[c Example Test: hello_world.c] [----] ../../../core/tests/src/c/c_example_ast_tests.c:45: Assertion Failed
[c Example Test: hello_world.c] [----]   
[c Example Test: hello_world.c] [----]   AST test failed for basic_syntax/hello_world.c
[c Example Test: hello_world.c] [----]   
[c Example Test: hello_world.c] [FAIL] c_examples::all_examples: (0.39s)
 FAIL: c Example Test: hello_world.c (3/)
[test_runner_lib] Testing: core/tests/examples/c/basic_syntax/variables_loops_conditions.c
[DEBUG] Directory listing before test execution:
total 10620
-rw-rw----  1 matrillo matrillo    2156 Aug  2 21:14 asan.log.2928676
-rw-rw----  1 matrillo matrillo    8307 Aug  2 21:14 asan.log.2928678
-rw-rw----  1 matrillo matrillo    2156 Aug  2 21:14 asan.log.2928700
-rw-rw----  1 matrillo matrillo    8307 Aug  2 21:14 asan.log.2928707
-rw-rw----  1 matrillo matrillo    2156 Aug  2 21:14 asan.log.2928734
-rw-rw----  1 matrillo matrillo    8441 Aug  2 21:14 asan.log.2928736
-rw-rw----  1 matrillo matrillo    2156 Aug  2 22:31 asan.log.2941000
-rw-rw----  1 matrillo matrillo    8307 Aug  2 22:31 asan.log.2941002
-rw-rw----  1 matrillo matrillo    2156 Aug  2 22:31 asan.log.2941017
-rw-rw----  1 matrillo matrillo    8307 Aug  2 22:31 asan.log.2941023
-rw-rw----  1 matrillo matrillo    2156 Aug  2 22:31 asan.log.2941055
-rw-rw----  1 matrillo matrillo    8441 Aug  2 22:31 asan.log.2941057
-rw-rw----  1 matrillo matrillo    2156 Aug  2 22:50 asan.log.2953571
-rw-rw----  1 matrillo matrillo    8307 Aug  2 22:50 asan.log.2953573
-rw-rw----  1 matrillo matrillo    2156 Aug  2 22:50 asan.log.2953588
-rw-rw----  1 matrillo matrillo    8307 Aug  2 22:50 asan.log.2953590
-rw-rw----  1 matrillo matrillo    2156 Aug  2 22:50 asan.log.2953606
-rw-rw----  1 matrillo matrillo    8441 Aug  2 22:50 asan.log.2953608
-rw-rw----  1 matrillo matrillo    2156 Aug  2 22:51 asan.log.2957003
-rw-rw----  1 matrillo matrillo    8307 Aug  2 22:51 asan.log.2957005
-rw-rw----  1 matrillo matrillo    2156 Aug  2 22:51 asan.log.2957020
-rw-rw----  1 matrillo matrillo    8307 Aug  2 22:51 asan.log.2957022
-rw-rw----  1 matrillo matrillo    2156 Aug  2 22:51 asan.log.2957041
-rw-rw----  1 matrillo matrillo    8441 Aug  2 22:51 asan.log.2957043
-rw-rw----  1 matrillo matrillo    2156 Aug  2 22:54 asan.log.2960814
-rw-rw----  1 matrillo matrillo    8307 Aug  2 22:54 asan.log.2960816
-rw-rw----  1 matrillo matrillo    2156 Aug  2 22:54 asan.log.2960839
-rw-rw----  1 matrillo matrillo    8307 Aug  2 22:54 asan.log.2960841
-rw-rw----  1 matrillo matrillo    2156 Aug  2 22:54 asan.log.2960857
-rw-rw----  1 matrillo matrillo    8441 Aug  2 22:54 asan.log.2960859
-rw-rw----  1 matrillo matrillo    2156 Aug  2 22:55 asan.log.2964116
-rw-rw----  1 matrillo matrillo    8307 Aug  2 22:55 asan.log.2964118
-rw-rw----  1 matrillo matrillo    2156 Aug  2 22:55 asan.log.2964135
-rw-rw----  1 matrillo matrillo    8307 Aug  2 22:55 asan.log.2964137
-rw-rw----  1 matrillo matrillo    2156 Aug  2 22:55 asan.log.2964167
-rw-rw----  1 matrillo matrillo    8441 Aug  2 22:55 asan.log.2964182
-rw-rw----  1 matrillo matrillo    2156 Aug  2 22:55 asan.log.2967372
-rw-rw----  1 matrillo matrillo    8307 Aug  2 22:55 asan.log.2967374
-rw-rw----  1 matrillo matrillo    2156 Aug  2 22:55 asan.log.2967393
-rw-rw----  1 matrillo matrillo    8307 Aug  2 22:55 asan.log.2967395
-rw-rw----  1 matrillo matrillo    2156 Aug  2 22:55 asan.log.2967411
-rw-rw----  1 matrillo matrillo    8441 Aug  2 22:55 asan.log.2967413
-rw-rw----  1 matrillo matrillo    2156 Aug  2 22:58 asan.log.2971166
-rw-rw----  1 matrillo matrillo    8307 Aug  2 22:58 asan.log.2971168
-rw-rw----  1 matrillo matrillo    2156 Aug  2 22:58 asan.log.2971185
-rw-rw----  1 matrillo matrillo    8307 Aug  2 22:58 asan.log.2971187
-rw-rw----  1 matrillo matrillo    2156 Aug  2 22:58 asan.log.2971204
-rw-rw----  1 matrillo matrillo    8441 Aug  2 22:58 asan.log.2971206
-rw-rw----  1 matrillo matrillo    2156 Aug  2 23:03 asan.log.2975969
-rw-rw----  1 matrillo matrillo    8307 Aug  2 23:03 asan.log.2975971
-rw-rw----  1 matrillo matrillo    2156 Aug  2 23:03 asan.log.2975987
-rw-rw----  1 matrillo matrillo    8307 Aug  2 23:03 asan.log.2975990
-rw-rw----  1 matrillo matrillo    2156 Aug  2 23:03 asan.log.2976006
-rw-rw----  1 matrillo matrillo    8441 Aug  2 23:03 asan.log.2976008
-rw-rw----  1 matrillo matrillo    2156 Aug  2 23:06 asan.log.2980003
-rw-rw----  1 matrillo matrillo    8307 Aug  2 23:06 asan.log.2980005
-rw-rw----  1 matrillo matrillo    2156 Aug  2 23:06 asan.log.2980029
-rw-rw----  1 matrillo matrillo    8307 Aug  2 23:06 asan.log.2980031
-rw-rw----  1 matrillo matrillo    2156 Aug  2 23:06 asan.log.2980047
-rw-rw----  1 matrillo matrillo    8441 Aug  2 23:06 asan.log.2980049
-rw-rw----  1 matrillo matrillo    2156 Aug  2 23:06 asan.log.2983230
-rw-rw----  1 matrillo matrillo    8307 Aug  2 23:06 asan.log.2983232
-rw-rw----  1 matrillo matrillo    2156 Aug  2 23:06 asan.log.2983257
-rw-rw----  1 matrillo matrillo    8307 Aug  2 23:06 asan.log.2983259
-rw-rw----  1 matrillo matrillo    2156 Aug  2 23:06 asan.log.2983277
-rw-rw----  1 matrillo matrillo    8441 Aug  2 23:06 asan.log.2983279
-rw-rw----  1 matrillo matrillo    2156 Aug  2 23:08 asan.log.2989596
-rw-rw----  1 matrillo matrillo    8307 Aug  2 23:08 asan.log.2989598
-rw-rw----  1 matrillo matrillo    2156 Aug  2 23:08 asan.log.2989614
-rw-rw----  1 matrillo matrillo    8307 Aug  2 23:08 asan.log.2989617
-rw-rw----  1 matrillo matrillo    2156 Aug  2 23:08 asan.log.2989634
-rw-rw----  1 matrillo matrillo    8441 Aug  2 23:08 asan.log.2989636
-rw-rw----  1 matrillo matrillo    2156 Aug  2 23:14 asan.log.2993957
-rw-rw----  1 matrillo matrillo    8307 Aug  2 23:14 asan.log.2993961
-rw-rw----  1 matrillo matrillo    2156 Aug  2 23:14 asan.log.2993979
-rw-rw----  1 matrillo matrillo    8307 Aug  2 23:14 asan.log.2993984
-rw-rw----  1 matrillo matrillo    2156 Aug  2 23:14 asan.log.2994010
-rw-rw----  1 matrillo matrillo    8441 Aug  2 23:14 asan.log.2994017
-rw-rw----  1 matrillo matrillo    2156 Aug  2 23:15 asan.log.2997572
-rw-rw----  1 matrillo matrillo    8307 Aug  2 23:15 asan.log.2997574
-rw-rw----  1 matrillo matrillo    2156 Aug  2 23:15 asan.log.2997589
-rw-rw----  1 matrillo matrillo    8307 Aug  2 23:15 asan.log.2997591
-rw-rw----  1 matrillo matrillo    2156 Aug  2 23:15 asan.log.2997609
-rw-rw----  1 matrillo matrillo    8441 Aug  2 23:15 asan.log.2997611
-rw-rw----  1 matrillo matrillo    2156 Aug  2 23:16 asan.log.3000908
-rw-rw----  1 matrillo matrillo    8307 Aug  2 23:16 asan.log.3000910
-rw-rw----  1 matrillo matrillo    2156 Aug  2 23:16 asan.log.3000925
-rw-rw----  1 matrillo matrillo    8307 Aug  2 23:16 asan.log.3000927
-rw-rw----  1 matrillo matrillo    2156 Aug  2 23:16 asan.log.3000948
-rw-rw----  1 matrillo matrillo    8441 Aug  2 23:16 asan.log.3000962
-rw-rw----  1 matrillo matrillo    2156 Aug  2 23:17 asan.log.3004264
-rw-rw----  1 matrillo matrillo    8307 Aug  2 23:17 asan.log.3004266
-rw-rw----  1 matrillo matrillo    2156 Aug  2 23:17 asan.log.3004287
-rw-rw----  1 matrillo matrillo    8307 Aug  2 23:17 asan.log.3004289
-rw-rw----  1 matrillo matrillo    2156 Aug  2 23:17 asan.log.3004305
-rw-rw----  1 matrillo matrillo    8441 Aug  2 23:17 asan.log.3004307
-rw-rw----  1 matrillo matrillo    2156 Aug  2 23:22 asan.log.3008975
-rw-rw----  1 matrillo matrillo    8441 Aug  2 23:22 asan.log.3008977
-rw-rw----  1 matrillo matrillo    2156 Aug  2 23:22 asan.log.3008992
-rw-rw----  1 matrillo matrillo   45753 Aug  2 23:22 asan.log.3008994
-rw-rw----  1 matrillo matrillo    2156 Aug  2 23:22 asan.log.3009011
-rw-rw----  1 matrillo matrillo    8441 Aug  2 23:22 asan.log.3009013
-rw-rw----  1 matrillo matrillo    2156 Aug  2 23:23 asan.log.3012493
-rw-rw----  1 matrillo matrillo   47214 Aug  2 23:23 asan.log.3012495
-rw-rw----  1 matrillo matrillo    2156 Aug  2 23:23 asan.log.3012515
-rw-rw----  1 matrillo matrillo   45753 Aug  2 23:23 asan.log.3012517
-rwxrwxr-x  1 matrillo matrillo 9147416 Aug  2 23:23 c_example_ast_tests
drwxrwxr-x 20 matrillo matrillo    4096 Aug  2 23:23 CMakeFiles
-rw-rw-r--  1 matrillo matrillo    2386 Aug  2 21:13 cmake_install.cmake
drwxrwxr-x  3 matrillo matrillo    4096 Aug  2 21:13 core
-rw-rw-r--  1 matrillo matrillo  678762 Aug  2 23:08 libtest_utilities.a
-rw-rw-r--  1 matrillo matrillo   51663 Aug  2 21:13 Makefile
[c Example Test: variables_loops_conditions.c] DEBUG: read_file_contents called with path: core/tests/examples/c/basic_syntax/variables_loops_conditions.c
[c Example Test: variables_loops_conditions.c] DEBUG: Current working directory: /home/matrillo/apps/scopemux-core/build-c/core/tests
[c Example Test: variables_loops_conditions.c] DEBUG: Directory listing for core/tests/examples/c/basic_syntax:
[c Example Test: variables_loops_conditions.c]   docstring_test.c
[c Example Test: variables_loops_conditions.c]   hello_world.c
[c Example Test: variables_loops_conditions.c]   .
[c Example Test: variables_loops_conditions.c]   hello_world.c.expected.json
[c Example Test: variables_loops_conditions.c]   variables_loops_conditions.c
[c Example Test: variables_loops_conditions.c]   variables_loops_conditions.c.expected.json
[c Example Test: variables_loops_conditions.c]   docstring_test.c.expected.json
[c Example Test: variables_loops_conditions.c]   ..
[c Example Test: variables_loops_conditions.c] DEBUG: file size for core/tests/examples/c/basic_syntax/variables_loops_conditions.c is 1032 bytes
[c Example Test: variables_loops_conditions.c] DEBUG: About to allocate ParserContext of size 136
[c Example Test: variables_loops_conditions.c] DEBUG: safe_malloc returned raw_ptr=0x60d000000110
[c Example Test: variables_loops_conditions.c] DEBUG: after cast ctx=0x60d000000110
[c Example Test: variables_loops_conditions.c] DEBUG: About to memset ctx=0x60d000000110 with size 136
[c Example Test: variables_loops_conditions.c] DEBUG: memset completed successfully
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] Registered C language compliance callbacks
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] Registered language-specific compliance callbacks
[c Example Test: variables_loops_conditions.c] [scopemux] INFO: Loading hardcoded node type mappings
[c Example Test: variables_loops_conditions.c] [scopemux] Loaded 14 hardcoded node type mappings
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] Initialized node type mappings
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] Successfully initialized parser context at 0x60d000000110
[c Example Test: variables_loops_conditions.c] [DIAGNOSTIC-ENTRY] Entered parser_parse_string: ctx=0x60d000000110, content=0x619000012780, content_length=1032, filename=variables_loops_conditions.c, language=1
[c Example Test: variables_loops_conditions.c] [DEBUG] parser_clear starting for ctx=0x60d000000110
[c Example Test: variables_loops_conditions.c] [DEBUG] ctx->num_ast_nodes=0
[c Example Test: variables_loops_conditions.c] [scopemux] Loading hardcoded node type mappings:
[c Example Test: variables_loops_conditions.c]   functions -> NODE_FUNCTION
[c Example Test: variables_loops_conditions.c]   classes -> NODE_CLASS
[c Example Test: variables_loops_conditions.c]   methods -> NODE_METHOD
[c Example Test: variables_loops_conditions.c]   variables -> NODE_VARIABLE
[c Example Test: variables_loops_conditions.c]   modules -> NODE_MODULE
[c Example Test: variables_loops_conditions.c]   structs -> NODE_STRUCT
[c Example Test: variables_loops_conditions.c]   unions -> NODE_UNION
[c Example Test: variables_loops_conditions.c]   enums -> NODE_ENUM
[c Example Test: variables_loops_conditions.c]   typedefs -> NODE_TYPEDEF
[c Example Test: variables_loops_conditions.c]   includes -> NODE_INCLUDE
[c Example Test: variables_loops_conditions.c]   macros -> NODE_MACRO
[c Example Test: variables_loops_conditions.c]   docstrings -> NODE_DOCSTRING
[c Example Test: variables_loops_conditions.c]   interfaces -> NODE_INTERFACE
[c Example Test: variables_loops_conditions.c]   template_specializations -> NODE_TEMPLATE_SPECIALIZATION
[c Example Test: variables_loops_conditions.c] [QUERY_MANAGER_FREE] ENTER: manager=0x606000013a60
[c Example Test: variables_loops_conditions.c] [QUERY_MANAGER_FREE] Freeing queries_dir at 0x6020000013d0
[c Example Test: variables_loops_conditions.c] [QUERY_MANAGER_FREE] Freeing cached queries array at 0x604000001f10 (language_count=6)
[c Example Test: variables_loops_conditions.c] [QUERY_MANAGER_FREE] Freeing cached queries for language 0 at 0x6110000007c0 (query_count=0)
[c Example Test: variables_loops_conditions.c] [QUERY_MANAGER_FREE] Freeing QueryCacheEntry array at 0x6110000007c0
[c Example Test: variables_loops_conditions.c] [QUERY_MANAGER_FREE] Freeing cached queries for language 1 at 0x611000000900 (query_count=0)
[c Example Test: variables_loops_conditions.c] [QUERY_MANAGER_FREE] Freeing QueryCacheEntry array at 0x611000000900
[c Example Test: variables_loops_conditions.c] [QUERY_MANAGER_FREE] Freeing cached queries for language 2 at 0x611000000a40 (query_count=0)
[c Example Test: variables_loops_conditions.c] [QUERY_MANAGER_FREE] Freeing QueryCacheEntry array at 0x611000000a40
[c Example Test: variables_loops_conditions.c] [QUERY_MANAGER_FREE] Freeing cached queries for language 3 at 0x611000000b80 (query_count=0)
[c Example Test: variables_loops_conditions.c] [QUERY_MANAGER_FREE] Freeing QueryCacheEntry array at 0x611000000b80
[c Example Test: variables_loops_conditions.c] [QUERY_MANAGER_FREE] Freeing cached queries for language 4 at 0x611000000cc0 (query_count=0)
[c Example Test: variables_loops_conditions.c] [QUERY_MANAGER_FREE] Freeing QueryCacheEntry array at 0x611000000cc0
[c Example Test: variables_loops_conditions.c] [QUERY_MANAGER_FREE] Freeing cached queries for language 5 at 0x611000000e00 (query_count=0)
[c Example Test: variables_loops_conditions.c] [QUERY_MANAGER_FREE] Freeing QueryCacheEntry array at 0x611000000e00
[c Example Test: variables_loops_conditions.c] [QUERY_MANAGER_FREE] Freeing cached_queries array at 0x604000001f10
[c Example Test: variables_loops_conditions.c] [QUERY_MANAGER_FREE] Freeing languages array at 0x604000001ed0
[c Example Test: variables_loops_conditions.c] [QUERY_MANAGER_FREE] Freeing language_types array at 0x603000012220
[c Example Test: variables_loops_conditions.c] [QUERY_MANAGER_FREE] Freeing query_counts array at 0x604000001f50
[c Example Test: variables_loops_conditions.c] [QUERY_MANAGER_FREE] Freeing manager struct at 0x606000013a60
[c Example Test: variables_loops_conditions.c] [QUERY_MANAGER_FREE] EXIT: Query manager cleanup complete
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] AST node cleanup summary: freed 0 root nodes, skipped 0 child nodes (freed recursively), total tracked: 0
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [LIFECYCLE] Exiting parser_clear for ctx=0x60d000000110
[c Example Test: variables_loops_conditions.c] [DIAGNOSTIC-FACADE] Entered ts_init_parser: ctx=0x60d000000110, language=1
[c Example Test: variables_loops_conditions.c] [DIAGNOSTIC-ENTRY] Entered ts_init_parser_impl: ctx=0x60d000000110, language=1
[c Example Test: variables_loops_conditions.c] 
[c Example Test: variables_loops_conditions.c] ***** PARSER INITIALIZATION DIAGNOSTIC *****
[c Example Test: variables_loops_conditions.c] Test executable pid: 3012542
[c Example Test: variables_loops_conditions.c] Using statically linked Tree-sitter libraries
[c Example Test: variables_loops_conditions.c] SYMBOL RESOLUTION CHECK:
[c Example Test: variables_loops_conditions.c]   dlsym(tree_sitter_c): 0x558e591d46b7
[c Example Test: variables_loops_conditions.c]   dlsym(tree_sitter_cpp): 0x558e591ea9a4
[c Example Test: variables_loops_conditions.c]   dlsym(tree_sitter_python): 0x558e591f0764
[c Example Test: variables_loops_conditions.c]   dlsym(tree_sitter_javascript): 0x558e591f8487
[c Example Test: variables_loops_conditions.c]   dlsym(tree_sitter_typescript): 0x558e591ff84c
[c Example Test: variables_loops_conditions.c] [DIAGNOSTIC] ts_init_parser_impl: language enum: 1
[c Example Test: variables_loops_conditions.c] [DIAGNOSTIC] Language name: C
[c Example Test: variables_loops_conditions.c] [DIAGNOSTIC] Adapter lookup result: 0x558e598d2060
[c Example Test: variables_loops_conditions.c] [DIAGNOSTIC] Adapter language_name: C
[c Example Test: variables_loops_conditions.c] [DIAGNOSTIC] Adapter get_ts_language pointer: 0x558e591d46b7
[c Example Test: variables_loops_conditions.c] [DIAGNOSTIC] Result of get_ts_language(): 0x558e5981c0c0
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] Successfully retrieved language object for language type 1, address: 0x558e5981c0c0
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] Calling ts_parser_set_language with parser=0x61b00001d580, language=0x558e5981c0c0
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] ts_parser_set_language succeeded
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] Verification: ts_parser_language() returned: 0x558e5981c0c0
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] Language verification successful - pointer match confirmed
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] TS_INIT_PARSER_IMPL: PARSER INITIALIZATION COMPLETE
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] ===================================================================
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] Successfully set language for Tree-sitter parser
[c Example Test: variables_loops_conditions.c] DEBUG: Tried queries directory: queries/c (not found)
[c Example Test: variables_loops_conditions.c] DEBUG: Tried queries directory: ../queries/c (not found)
[c Example Test: variables_loops_conditions.c] DEBUG: Tried queries directory: ../../queries/c (not found)
[c Example Test: variables_loops_conditions.c] DEBUG: Using queries directory: ../../../queries/c
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] Found docstrings.scm at: ../../../queries/c/docstrings.scm
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] Loading hardcoded node type mappings (source of truth)...
[c Example Test: variables_loops_conditions.c] [scopemux] INFO: Loading hardcoded node type mappings
[c Example Test: variables_loops_conditions.c] [scopemux] Loaded 14 hardcoded node type mappings
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] Initialized query manager with queries directory: ../../../queries/c
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] ts_init_parser returned: TRUE
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] After initialization: Tree-sitter parser=0x61b00001d580, language=0x558e5981c0c0
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] ===== PARSER_PARSE_STRING: PARSER INITIALIZATION COMPLETED =====
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [create_ast_root_node] ctx->filename: 'variables_loops_conditions.c' (basename: 'variables_loops_conditions.c')
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [create_ast_root_node] Created root node with name: 'variables_loops_conditions.c'
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [create_ast_root_node] Set qualified_name: 'variables_loops_conditions.c'
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Source code preview (first 100 bytes): '/**
[c Example Test: variables_loops_conditions.c]  * @file variables_loops_conditions.c
[c Example Test: variables_loops_conditions.c]  * @brief Demonstration of variables, loops, and condition...'
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Tree-sitter root node: type='translation_unit', named=1, child_count=4
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Child 0: type='comment', named=1
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Child 1: type='preproc_include', named=1
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Child 2: type='comment', named=1
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Child 3: type='function_definition', named=1
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Processing query type: classes (1 of 8)
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Processing query type: classes
[c Example Test: variables_loops_conditions.c] DIRECT DEBUG: Entered query_manager_get_query for language 1, query_name: classes
[c Example Test: variables_loops_conditions.c] [QUERY_PATH_DEBUG] Trying primary path: ../../../queries/c/classes.scm
[c Example Test: variables_loops_conditions.c] [QUERY_PATH_DEBUG] SUCCESS: Found query at primary path: ../../../queries/c/classes.scm
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Query 'classes' has 0 patterns and 0 possible captures
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Mapped 'classes' query to AST node type 3
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Query 'classes' finished processing: 0 matches, 0 nodes added
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Query 'classes' FAILED: No nodes added
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Processing query type: structs (2 of 8)
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Processing query type: structs
[c Example Test: variables_loops_conditions.c] DIRECT DEBUG: Entered query_manager_get_query for language 1, query_name: structs
[c Example Test: variables_loops_conditions.c] [QUERY_PATH_DEBUG] Trying primary path: ../../../queries/c/structs.scm
[c Example Test: variables_loops_conditions.c] [QUERY_PATH_DEBUG] SUCCESS: Found query at primary path: ../../../queries/c/structs.scm
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Query 'structs' has 2 patterns and 2 possible captures
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Mapped structs query to NODE_STRUCT
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Mapped 'structs' query to AST node type 21
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Query 'structs' finished processing: 0 matches, 0 nodes added
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Query 'structs' FAILED: No nodes added
[c Example Test: variables_loops_conditions.c] [FUNCTIONS_DEBUG] About to process FUNCTIONS query at index 2
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Processing query type: functions (3 of 8)
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Processing query type: functions
[c Example Test: variables_loops_conditions.c] DIRECT DEBUG: Entered query_manager_get_query for language 1, query_name: functions
[c Example Test: variables_loops_conditions.c] [FUNCTIONS_DEBUG] *** DETECTED functions query request ***
[c Example Test: variables_loops_conditions.c] [QUERY_PATH_DEBUG] Trying primary path: ../../../queries/c/functions.scm
[c Example Test: variables_loops_conditions.c] [QUERY_PATH_DEBUG] SUCCESS: Found query at primary path: ../../../queries/c/functions.scm
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Query 'functions' has 2 patterns and 2 possible captures
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Mapped functions query to NODE_FUNCTION
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Mapped 'functions' query to AST node type 2
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Found match 1 with 2 captures
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Capture 0: name='function', node_type='function_definition', text='int main(void) {
[c Example Test: variables_loops_conditions.c]   // Variables
[c Example Test: variables_loops_conditions.c]   int co'
[c Example Test: variables_loops_conditions.c] [SINGPLUR_DEBUG] Found singular form 'function' in query type 'functions'
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Main node detection: query_type='functions', capture_name='function', clean_capture_name='function', clean_query_type='functions', is_main_node=1
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Capture 1: name='name', node_type='identifier', text='main'
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Main node detection: query_type='functions', capture_name='name', clean_capture_name='name', clean_query_type='functions', is_main_node=0
[c Example Test: variables_loops_conditions.c] [AST_CREATE] Created ASTNode at 0x6110000179c0, type=2
[c Example Test: variables_loops_conditions.c] [AST_REGISTER_CALL] parser_add_ast_node(ctx, 0x6110000179c0) returned 1
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Set content for function node 'main'
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [SIGNATURE_DEBUG] Function 'main' signature set to: 'int main(void)'
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [WARNING] Attempt to free untracked memory at 0x6030000161b0 in /home/matrillo/apps/scopemux-core/core/src/parser/ts_query_processor.c:886 - this may be a library-allocated pointer
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Added FUNCTION node 'main' to AST (and registered in context)
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Query 'functions' finished processing: 1 matches, 1 nodes added
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Query 'functions' SUCCEEDED: Added 1 node(s)
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Processing query type: methods (4 of 8)
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Processing query type: methods
[c Example Test: variables_loops_conditions.c] DIRECT DEBUG: Entered query_manager_get_query for language 1, query_name: methods
[c Example Test: variables_loops_conditions.c] [QUERY_PATH_DEBUG] Trying primary path: ../../../queries/c/methods.scm
[c Example Test: variables_loops_conditions.c] [QUERY_PATH_DEBUG] SUCCESS: Found query at primary path: ../../../queries/c/methods.scm
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Query 'methods' has 0 patterns and 0 possible captures
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Mapped 'methods' query to AST node type 4
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Query 'methods' finished processing: 0 matches, 0 nodes added
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Query 'methods' FAILED: No nodes added
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Processing query type: variables (5 of 8)
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Processing query type: variables
[c Example Test: variables_loops_conditions.c] DIRECT DEBUG: Entered query_manager_get_query for language 1, query_name: variables
[c Example Test: variables_loops_conditions.c] [QUERY_PATH_DEBUG] Trying primary path: ../../../queries/c/variables.scm
[c Example Test: variables_loops_conditions.c] [QUERY_PATH_DEBUG] SUCCESS: Found query at primary path: ../../../queries/c/variables.scm
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Query 'variables' has 2 patterns and 2 possible captures
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Mapped 'variables' query to AST node type 5
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Found match 1 with 2 captures
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Capture 0: name='variable', node_type='declaration', text='int count = 0;'
[c Example Test: variables_loops_conditions.c] [SINGPLUR_DEBUG] Found singular form 'variable' in query type 'variables'
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Main node detection: query_type='variables', capture_name='variable', clean_capture_name='variable', clean_query_type='variables', is_main_node=1
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Capture 1: name='name', node_type='identifier', text='count'
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Main node detection: query_type='variables', capture_name='name', clean_capture_name='name', clean_query_type='variables', is_main_node=0
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [HIERARCHY_DEBUG] Searching for parent function for VARIABLE 'count' at line 18, found 1 functions
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [HIERARCHY_DEBUG] Checking function 'main' range [16-56] vs node range [18-18]
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [HIERARCHY_DEBUG] Found containing function 'main' for VARIABLE 'count'
[c Example Test: variables_loops_conditions.c] [AST_CREATE] Created ASTNode at 0x61100001f940, type=5
[c Example Test: variables_loops_conditions.c] [AST_REGISTER_CALL] parser_add_ast_node(ctx, 0x61100001f940) returned 1
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Set content for variable node 'count'
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [WARNING] Attempt to free untracked memory at 0x603000016e10 in /home/matrillo/apps/scopemux-core/core/src/parser/ts_query_processor.c:950 - this may be a library-allocated pointer
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Added VARIABLE node 'count' to AST (and registered in context)
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Found match 2 with 2 captures
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Capture 0: name='variable', node_type='declaration', text='float pi = 3.14159f;'
[c Example Test: variables_loops_conditions.c] [SINGPLUR_DEBUG] Found singular form 'variable' in query type 'variables'
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Main node detection: query_type='variables', capture_name='variable', clean_capture_name='variable', clean_query_type='variables', is_main_node=1
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Capture 1: name='name', node_type='identifier', text='pi'
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Main node detection: query_type='variables', capture_name='name', clean_capture_name='name', clean_query_type='variables', is_main_node=0
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [HIERARCHY_DEBUG] Searching for parent function for VARIABLE 'pi' at line 19, found 1 functions
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [HIERARCHY_DEBUG] Checking function 'main' range [16-56] vs node range [19-19]
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [HIERARCHY_DEBUG] Found containing function 'main' for VARIABLE 'pi'
[c Example Test: variables_loops_conditions.c] [AST_CREATE] Created ASTNode at 0x61100001fa80, type=5
[c Example Test: variables_loops_conditions.c] [AST_REGISTER_CALL] parser_add_ast_node(ctx, 0x61100001fa80) returned 1
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Set content for variable node 'pi'
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [WARNING] Attempt to free untracked memory at 0x603000016ed0 in /home/matrillo/apps/scopemux-core/core/src/parser/ts_query_processor.c:950 - this may be a library-allocated pointer
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Added VARIABLE node 'pi' to AST (and registered in context)
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Found match 3 with 2 captures
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Capture 0: name='variable', node_type='declaration', text='char message[] = "Hello";'
[c Example Test: variables_loops_conditions.c] [SINGPLUR_DEBUG] Found singular form 'variable' in query type 'variables'
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Main node detection: query_type='variables', capture_name='variable', clean_capture_name='variable', clean_query_type='variables', is_main_node=1
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Capture 1: name='name', node_type='identifier', text='message'
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Main node detection: query_type='variables', capture_name='name', clean_capture_name='name', clean_query_type='variables', is_main_node=0
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [HIERARCHY_DEBUG] Searching for parent function for VARIABLE 'message' at line 20, found 1 functions
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [HIERARCHY_DEBUG] Checking function 'main' range [16-56] vs node range [20-20]
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [HIERARCHY_DEBUG] Found containing function 'main' for VARIABLE 'message'
[c Example Test: variables_loops_conditions.c] [AST_CREATE] Created ASTNode at 0x61100001fbc0, type=5
[c Example Test: variables_loops_conditions.c] [AST_REGISTER_CALL] parser_add_ast_node(ctx, 0x61100001fbc0) returned 1
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Set content for variable node 'message'
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [WARNING] Attempt to free untracked memory at 0x604000007a90 in /home/matrillo/apps/scopemux-core/core/src/parser/ts_query_processor.c:950 - this may be a library-allocated pointer
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Added VARIABLE node 'message' to AST (and registered in context)
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Found match 4 with 2 captures
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Capture 0: name='variable', node_type='declaration', text='int i = 0;'
[c Example Test: variables_loops_conditions.c] [SINGPLUR_DEBUG] Found singular form 'variable' in query type 'variables'
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Main node detection: query_type='variables', capture_name='variable', clean_capture_name='variable', clean_query_type='variables', is_main_node=1
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Capture 1: name='name', node_type='identifier', text='i'
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Main node detection: query_type='variables', capture_name='name', clean_capture_name='name', clean_query_type='variables', is_main_node=0
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [HIERARCHY_DEBUG] Searching for parent function for VARIABLE 'i' at line 23, found 1 functions
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [HIERARCHY_DEBUG] Checking function 'main' range [16-56] vs node range [23-23]
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [HIERARCHY_DEBUG] Found containing function 'main' for VARIABLE 'i'
[c Example Test: variables_loops_conditions.c] [AST_CREATE] Created ASTNode at 0x61100001fd00, type=5
[c Example Test: variables_loops_conditions.c] [AST_REGISTER_CALL] parser_add_ast_node(ctx, 0x61100001fd00) returned 1
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Set content for variable node 'i'
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [WARNING] Attempt to free untracked memory at 0x603000016f90 in /home/matrillo/apps/scopemux-core/core/src/parser/ts_query_processor.c:950 - this may be a library-allocated pointer
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Added VARIABLE node 'i' to AST (and registered in context)
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Found match 5 with 2 captures
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Capture 0: name='variable', node_type='declaration', text='int j = 0;'
[c Example Test: variables_loops_conditions.c] [SINGPLUR_DEBUG] Found singular form 'variable' in query type 'variables'
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Main node detection: query_type='variables', capture_name='variable', clean_capture_name='variable', clean_query_type='variables', is_main_node=1
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Capture 1: name='name', node_type='identifier', text='j'
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Main node detection: query_type='variables', capture_name='name', clean_capture_name='name', clean_query_type='variables', is_main_node=0
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [HIERARCHY_DEBUG] Searching for parent function for VARIABLE 'j' at line 27, found 1 functions
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [HIERARCHY_DEBUG] Checking function 'main' range [16-56] vs node range [27-27]
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [HIERARCHY_DEBUG] Found containing function 'main' for VARIABLE 'j'
[c Example Test: variables_loops_conditions.c] [AST_CREATE] Created ASTNode at 0x61100001fe40, type=5
[c Example Test: variables_loops_conditions.c] [AST_REGISTER_CALL] parser_add_ast_node(ctx, 0x61100001fe40) returned 1
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Set content for variable node 'j'
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [WARNING] Attempt to free untracked memory at 0x603000017050 in /home/matrillo/apps/scopemux-core/core/src/parser/ts_query_processor.c:950 - this may be a library-allocated pointer
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Added VARIABLE node 'j' to AST (and registered in context)
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Query 'variables' finished processing: 5 matches, 5 nodes added
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Query 'variables' FAILED: No nodes added
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Processing query type: control_flow (6 of 8)
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Processing query type: control_flow
[c Example Test: variables_loops_conditions.c] DIRECT DEBUG: Entered query_manager_get_query for language 1, query_name: control_flow
[c Example Test: variables_loops_conditions.c] [QUERY_PATH_DEBUG] Trying primary path: ../../../queries/c/control_flow.scm
[c Example Test: variables_loops_conditions.c] [QUERY_PATH_DEBUG] SUCCESS: Found query at primary path: ../../../queries/c/control_flow.scm
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Query 'control_flow' has 5 patterns and 5 possible captures
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Mapped control_flow query to NODE_CONTROL_FLOW
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Mapped 'control_flow' query to AST node type 27
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Found match 1 with 1 captures
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Capture 0: name='for_loop', node_type='for_statement', text='for (int i = 0; i < 5; i++) {
[c Example Test: variables_loops_conditions.c]     count '
[c Example Test: variables_loops_conditions.c] [SINGPLUR_DEBUG] Found singular form 'for_loop' in query type 'control_flow'
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Main node detection: query_type='control_flow', capture_name='for_loop', clean_capture_name='for_loop', clean_query_type='control_flow', is_main_node=1
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [CONTROL_FLOW_DEBUG] Set node name from capture: 'for_loop'
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [CONTROL_FLOW_DEBUG] Overriding node type for capture 'for_loop'
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [CONTROL_FLOW_DEBUG] Set node type to NODE_FOR_STATEMENT (12)
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [HIERARCHY_DEBUG] Searching for parent function for FOR_STATEMENT 'for_loop' at line 23, found 1 functions
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [HIERARCHY_DEBUG] Checking function 'main' range [16-56] vs node range [23-25]
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [HIERARCHY_DEBUG] Found containing function 'main' for FOR_STATEMENT 'for_loop'
[c Example Test: variables_loops_conditions.c] [AST_CREATE] Created ASTNode at 0x61100000c840, type=12
[c Example Test: variables_loops_conditions.c] [AST_REGISTER_CALL] parser_add_ast_node(ctx, 0x61100000c840) returned 1
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Added CONTROL_FLOW node 'for_loop' to AST (and registered in context)
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Found match 2 with 1 captures
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Capture 0: name='while_loop', node_type='while_statement', text='while (j < 3) {
[c Example Test: variables_loops_conditions.c]     printf("%s %d\n", me'
[c Example Test: variables_loops_conditions.c] [SINGPLUR_DEBUG] Found singular form 'while_loop' in query type 'control_flow'
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Main node detection: query_type='control_flow', capture_name='while_loop', clean_capture_name='while_loop', clean_query_type='control_flow', is_main_node=1
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [CONTROL_FLOW_DEBUG] Set node name from capture: 'while_loop'
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [CONTROL_FLOW_DEBUG] Overriding node type for capture 'while_loop'
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [CONTROL_FLOW_DEBUG] Set node type to NODE_WHILE_STATEMENT (13)
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [HIERARCHY_DEBUG] Searching for parent function for WHILE_STATEMENT 'while_loop' at line 28, found 1 functions
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [HIERARCHY_DEBUG] Checking function 'main' range [16-56] vs node range [28-31]
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [HIERARCHY_DEBUG] Found containing function 'main' for WHILE_STATEMENT 'while_loop'
[c Example Test: variables_loops_conditions.c] [AST_CREATE] Created ASTNode at 0x61100000c980, type=13
[c Example Test: variables_loops_conditions.c] [AST_REGISTER_CALL] parser_add_ast_node(ctx, 0x61100000c980) returned 1
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Added CONTROL_FLOW node 'while_loop' to AST (and registered in context)
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Found match 3 with 1 captures
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Capture 0: name='if_condition', node_type='if_statement', text='if (count > 10) {
[c Example Test: variables_loops_conditions.c]     printf("Count is g'
[c Example Test: variables_loops_conditions.c] [SINGPLUR_DEBUG] Found singular form 'if_condition' in query type 'control_flow'
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Main node detection: query_type='control_flow', capture_name='if_condition', clean_capture_name='if_condition', clean_query_type='control_flow', is_main_node=1
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [CONTROL_FLOW_DEBUG] Set node name from capture: 'if_condition'
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [CONTROL_FLOW_DEBUG] Overriding node type for capture 'if_condition'
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [CONTROL_FLOW_DEBUG] Set node type to NODE_IF_STATEMENT (15)
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [HIERARCHY_DEBUG] Searching for parent function for IF_STATEMENT 'if_condition' at line 34, found 1 functions
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [HIERARCHY_DEBUG] Checking function 'main' range [16-56] vs node range [34-40]
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [HIERARCHY_DEBUG] Found containing function 'main' for IF_STATEMENT 'if_condition'
[c Example Test: variables_loops_conditions.c] [AST_CREATE] Created ASTNode at 0x61100000cac0, type=15
[c Example Test: variables_loops_conditions.c] [AST_REGISTER_CALL] parser_add_ast_node(ctx, 0x61100000cac0) returned 1
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Added CONTROL_FLOW node 'if_condition' to AST (and registered in context)
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Found match 4 with 1 captures
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Capture 0: name='if_condition', node_type='if_statement', text='if (count > 5) {
[c Example Test: variables_loops_conditions.c]     printf("Count is gr'
[c Example Test: variables_loops_conditions.c] [SINGPLUR_DEBUG] Found singular form 'if_condition' in query type 'control_flow'
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Main node detection: query_type='control_flow', capture_name='if_condition', clean_capture_name='if_condition', clean_query_type='control_flow', is_main_node=1
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [CONTROL_FLOW_DEBUG] Set node name from capture: 'if_condition'
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [CONTROL_FLOW_DEBUG] Overriding node type for capture 'if_condition'
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [CONTROL_FLOW_DEBUG] Skipping if_condition inside else_clause - part of if-else-if chain
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [CONTROL_FLOW_DEBUG] Skipping node creation for this match
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Found match 5 with 1 captures
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Capture 0: name='switch_condition', node_type='switch_statement', text='switch (j) {
[c Example Test: variables_loops_conditions.c]   case 0:
[c Example Test: variables_loops_conditions.c]     printf("j is '
[c Example Test: variables_loops_conditions.c] [SINGPLUR_DEBUG] Found singular form 'switch_condition' in query type 'control_flow'
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Main node detection: query_type='control_flow', capture_name='switch_condition', clean_capture_name='switch_condition', clean_query_type='control_flow', is_main_node=1
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [CONTROL_FLOW_DEBUG] Set node name from capture: 'switch_condition'
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [CONTROL_FLOW_DEBUG] Overriding node type for capture 'switch_condition'
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [CONTROL_FLOW_DEBUG] Set node type to NODE_SWITCH_STATEMENT (17)
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [HIERARCHY_DEBUG] Searching for parent function for SWITCH_STATEMENT 'switch_condition' at line 43, found 1 functions
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [HIERARCHY_DEBUG] Checking function 'main' range [16-56] vs node range [43-53]
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [HIERARCHY_DEBUG] Found containing function 'main' for SWITCH_STATEMENT 'switch_condition'
[c Example Test: variables_loops_conditions.c] [AST_CREATE] Created ASTNode at 0x61100000cc00, type=17
[c Example Test: variables_loops_conditions.c] [AST_REGISTER_CALL] parser_add_ast_node(ctx, 0x61100000cc00) returned 1
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Added CONTROL_FLOW node 'switch_condition' to AST (and registered in context)
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Query 'control_flow' finished processing: 5 matches, 4 nodes added
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Query 'control_flow' FAILED: No nodes added
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Processing query type: imports (7 of 8)
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Processing query type: imports
[c Example Test: variables_loops_conditions.c] DIRECT DEBUG: Entered query_manager_get_query for language 1, query_name: imports
[c Example Test: variables_loops_conditions.c] [QUERY_PATH_DEBUG] Trying primary path: ../../../queries/c/imports.scm
[c Example Test: variables_loops_conditions.c] [QUERY_PATH_DEBUG] SUCCESS: Found query at primary path: ../../../queries/c/imports.scm
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Query 'imports' has 2 patterns and 2 possible captures
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Mapped 'imports' query to AST node type 9
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Found match 1 with 2 captures
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Capture 0: name='include', node_type='preproc_include', text='#include <stdio.h>
[c Example Test: variables_loops_conditions.c] '
[c Example Test: variables_loops_conditions.c] [SINGPLUR_DEBUG] Found singular form 'include' in query type 'imports'
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Main node detection: query_type='imports', capture_name='include', clean_capture_name='include', clean_query_type='imports', is_main_node=1
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Capture 1: name='name', node_type='system_lib_string', text='<stdio.h>'
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Main node detection: query_type='imports', capture_name='name', clean_capture_name='name', clean_query_type='imports', is_main_node=0
[c Example Test: variables_loops_conditions.c] [AST_CREATE] Created ASTNode at 0x611000021880, type=9
[c Example Test: variables_loops_conditions.c] [AST_REGISTER_CALL] parser_add_ast_node(ctx, 0x611000021880) returned 1
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Added INCLUDE node '<stdio.h>' to AST (and registered in context)
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Query 'imports' finished processing: 1 matches, 1 nodes added
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Query 'imports' SUCCEEDED: Added 1 node(s)
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Processing query type: docstrings (8 of 8)
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Processing query type: docstrings
[c Example Test: variables_loops_conditions.c] DIRECT DEBUG: Entered query_manager_get_query for language 1, query_name: docstrings
[c Example Test: variables_loops_conditions.c] [QUERY_PATH_DEBUG] Trying primary path: ../../../queries/c/docstrings.scm
[c Example Test: variables_loops_conditions.c] [QUERY_PATH_DEBUG] SUCCESS: Found query at primary path: ../../../queries/c/docstrings.scm
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Query 'docstrings' has 4 patterns and 1 possible captures
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Mapped docstrings query to NODE_DOCSTRING
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Mapped 'docstrings' query to AST node type 19
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Found match 1 with 1 captures
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Capture 0: name='docstring', node_type='comment', text='/**
[c Example Test: variables_loops_conditions.c]  * @file variables_loops_conditions.'
[c Example Test: variables_loops_conditions.c] [SINGPLUR_DEBUG] Found singular form 'docstring' in query type 'docstrings'
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Main node detection: query_type='docstrings', capture_name='docstring', clean_capture_name='docstring', clean_query_type='docstrings', is_main_node=1
[c Example Test: variables_loops_conditions.c] [AST_CREATE] Created ASTNode at 0x6110000241c0, type=19
[c Example Test: variables_loops_conditions.c] [AST_REGISTER_CALL] parser_add_ast_node(ctx, 0x6110000241c0) returned 1
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Set content for docstring node '/**
[c Example Test: variables_loops_conditions.c]  * @file variables_loops_conditions.c
[c Example Test: variables_loops_conditions.c]  * @brief Demonstration of variables, loops, and conditional statements in C
[c Example Test: variables_loops_conditions.c]  *
[c Example Test: variables_loops_conditions.c]  * This example shows:
[c Example Test: variables_loops_conditions.c]  * - Various variable declarations and types
[c Example Test: variables_loops_conditions.c]  * - for, while, and do-while loops
[c Example Test: variables_loops_conditions.c]  * - if, else if, else conditions
[c Example Test: variables_loops_conditions.c]  * - switch statements
[c Example Test: variables_loops_conditions.c]  */'
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Added DOCSTRING node '/**
[c Example Test: variables_loops_conditions.c]  * @file variables_loops_conditions.c
[c Example Test: variables_loops_conditions.c]  * @brief Demonstration of variables, loops, and conditional statements in C
[c Example Test: variables_loops_conditions.c]  *
[c Example Test: variables_loops_conditions.c]  * This example shows:
[c Example Test: variables_loops_conditions.c]  * - Various variable declarations and types
[c Example Test: variables_loops_conditions.c]  * - for, while, and do-while loops
[c Example Test: variables_loops_conditions.c]  * - if, else if, else conditions
[c Example Test: variables_loops_conditions.c]  * - switch statements
[c Example Test: variables_loops_conditions.c]  */' to AST (and registered in context)
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Found match 2 with 1 captures
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Capture 0: name='docstring', node_type='comment', text='/**
[c Example Test: variables_loops_conditions.c]  * @brief Example of variables, loop'
[c Example Test: variables_loops_conditions.c] [SINGPLUR_DEBUG] Found singular form 'docstring' in query type 'docstrings'
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Main node detection: query_type='docstrings', capture_name='docstring', clean_capture_name='docstring', clean_query_type='docstrings', is_main_node=1
[c Example Test: variables_loops_conditions.c] [AST_CREATE] Created ASTNode at 0x611000024300, type=19
[c Example Test: variables_loops_conditions.c] [AST_REGISTER_CALL] parser_add_ast_node(ctx, 0x611000024300) returned 1
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Set content for docstring node '/**
[c Example Test: variables_loops_conditions.c]  * @brief Example of variables, loops, and conditions
[c Example Test: variables_loops_conditions.c]  */'
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Added DOCSTRING node '/**
[c Example Test: variables_loops_conditions.c]  * @brief Example of variables, loops, and conditions
[c Example Test: variables_loops_conditions.c]  */' to AST (and registered in context)
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Found match 3 with 1 captures
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Capture 0: name='docstring', node_type='comment', text='/**
[c Example Test: variables_loops_conditions.c]  * @brief Example of variables, loop'
[c Example Test: variables_loops_conditions.c] [SINGPLUR_DEBUG] Found singular form 'docstring' in query type 'docstrings'
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Main node detection: query_type='docstrings', capture_name='docstring', clean_capture_name='docstring', clean_query_type='docstrings', is_main_node=1
[c Example Test: variables_loops_conditions.c] [AST_CREATE] Created ASTNode at 0x611000024440, type=19
[c Example Test: variables_loops_conditions.c] [AST_REGISTER_CALL] parser_add_ast_node(ctx, 0x611000024440) returned 1
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Set content for docstring node '/**
[c Example Test: variables_loops_conditions.c]  * @brief Example of variables, loops, and conditions
[c Example Test: variables_loops_conditions.c]  */'
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Added DOCSTRING node '/**
[c Example Test: variables_loops_conditions.c]  * @brief Example of variables, loops, and conditions
[c Example Test: variables_loops_conditions.c]  */' to AST (and registered in context)
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Query 'docstrings' finished processing: 3 matches, 3 nodes added
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] Query 'docstrings' SUCCEEDED: Added 3 node(s)
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] AST query processing complete: 3 successful, 5 failed, total AST nodes: 5
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [QUERY_DEBUG] AST query processing summary: 3 successful, 5 failed, total AST nodes: 5
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [POST_PROCESS] Starting variable scoping post-processing for 15 nodes
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [POST_PROCESS] Found 5 variables and 4 control flow structures
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [POST_PROCESS] Reassigning variable 'i' from parent to for_loop
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [POST_PROCESS] Removed variable 'i' from parent's children array
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] [POST_PROCESS] Variable scoping post-processing complete
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] *** DOCSTRING_REMOVAL: Starting removal of 3 docstring nodes from 5 children ***
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] *** DOCSTRING_REMOVAL: Looking for docstring node '/**
[c Example Test: variables_loops_conditions.c]  * @file variables_loops_conditions.c
[c Example Test: variables_loops_conditions.c]  * @brief Demonstration of variables, loops, and conditional statements in C
[c Example Test: variables_loops_conditions.c]  *
[c Example Test: variables_loops_conditions.c]  * This example shows:
[c Example Test: variables_loops_conditions.c]  * - Various variable declarations and types
[c Example Test: variables_loops_conditions.c]  * - for, while, and do-while loops
[c Example Test: variables_loops_conditions.c]  * - if, else if, else conditions
[c Example Test: variables_loops_conditions.c]  * - switch statements
[c Example Test: variables_loops_conditions.c]  */' to remove ***
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] *** DOCSTRING_REMOVAL: Found docstring node at index 2, removing ***
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] *** DOCSTRING_REMOVAL: Removed docstring node, new child count: 4 ***
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] *** DOCSTRING_REMOVAL: Looking for docstring node '/**
[c Example Test: variables_loops_conditions.c]  * @brief Example of variables, loops, and conditions
[c Example Test: variables_loops_conditions.c]  */' to remove ***
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] *** DOCSTRING_REMOVAL: Found docstring node at index 2, removing ***
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] *** DOCSTRING_REMOVAL: Removed docstring node, new child count: 3 ***
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] *** DOCSTRING_REMOVAL: Looking for docstring node '/**
[c Example Test: variables_loops_conditions.c]  * @brief Example of variables, loops, and conditions
[c Example Test: variables_loops_conditions.c]  */' to remove ***
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] *** DOCSTRING_REMOVAL: Found docstring node at index 2, removing ***
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] *** DOCSTRING_REMOVAL: Removed docstring node, new child count: 2 ***
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [INFO] *** DOCSTRING_REMOVAL: Finished removal, final child count: 2 ***
[c Example Test: variables_loops_conditions.c] DEBUG: read_file_contents called with path: core/tests/examples/c/basic_syntax/variables_loops_conditions.c.expected.json
[c Example Test: variables_loops_conditions.c] DEBUG: Current working directory: /home/matrillo/apps/scopemux-core/build-c/core/tests
[c Example Test: variables_loops_conditions.c] DEBUG: Directory listing for core/tests/examples/c/basic_syntax:
[c Example Test: variables_loops_conditions.c]   docstring_test.c
[c Example Test: variables_loops_conditions.c]   hello_world.c
[c Example Test: variables_loops_conditions.c]   .
[c Example Test: variables_loops_conditions.c]   hello_world.c.expected.json
[c Example Test: variables_loops_conditions.c]   variables_loops_conditions.c
[c Example Test: variables_loops_conditions.c]   variables_loops_conditions.c.expected.json
[c Example Test: variables_loops_conditions.c]   docstring_test.c.expected.json
[c Example Test: variables_loops_conditions.c]   ..
[c Example Test: variables_loops_conditions.c] DEBUG: file size for core/tests/examples/c/basic_syntax/variables_loops_conditions.c.expected.json is 3260 bytes
[c Example Test: variables_loops_conditions.c] [ERR ] <unknown>: Docstring mismatch - expected '', got '/**
[c Example Test: variables_loops_conditions.c] [ERR ]  * @brief Example of variables, loops, and conditions
[c Example Test: variables_loops_conditions.c] [ERR ]  */'
[c Example Test: variables_loops_conditions.c] [ERR ] (null): Docstring mismatch
[c Example Test: variables_loops_conditions.c] [ERR ] Expected docstring length: 0
[c Example Test: variables_loops_conditions.c] [ERR ] Actual docstring length: 61
[c Example Test: variables_loops_conditions.c] [ERR ] Expected docstring bytes:
[c Example Test: variables_loops_conditions.c] [ERR ] Actual docstring bytes:
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 0: 47 (0x2f) '/'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 1: 42 (0x2a) '*'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 2: 42 (0x2a) '*'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 3: 10 (0x0a) '?'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 4: 32 (0x20) ' '
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 5: 42 (0x2a) '*'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 6: 32 (0x20) ' '
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 7: 64 (0x40) '@'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 8: 98 (0x62) 'b'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 9: 114 (0x72) 'r'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 10: 105 (0x69) 'i'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 11: 101 (0x65) 'e'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 12: 102 (0x66) 'f'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 13: 32 (0x20) ' '
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 14: 69 (0x45) 'E'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 15: 120 (0x78) 'x'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 16: 97 (0x61) 'a'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 17: 109 (0x6d) 'm'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 18: 112 (0x70) 'p'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 19: 108 (0x6c) 'l'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 20: 101 (0x65) 'e'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 21: 32 (0x20) ' '
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 22: 111 (0x6f) 'o'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 23: 102 (0x66) 'f'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 24: 32 (0x20) ' '
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 25: 118 (0x76) 'v'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 26: 97 (0x61) 'a'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 27: 114 (0x72) 'r'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 28: 105 (0x69) 'i'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 29: 97 (0x61) 'a'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 30: 98 (0x62) 'b'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 31: 108 (0x6c) 'l'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 32: 101 (0x65) 'e'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 33: 115 (0x73) 's'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 34: 44 (0x2c) ','
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 35: 32 (0x20) ' '
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 36: 108 (0x6c) 'l'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 37: 111 (0x6f) 'o'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 38: 111 (0x6f) 'o'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 39: 112 (0x70) 'p'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 40: 115 (0x73) 's'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 41: 44 (0x2c) ','
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 42: 32 (0x20) ' '
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 43: 97 (0x61) 'a'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 44: 110 (0x6e) 'n'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 45: 100 (0x64) 'd'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 46: 32 (0x20) ' '
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 47: 99 (0x63) 'c'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 48: 111 (0x6f) 'o'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 49: 110 (0x6e) 'n'
[c Example Test: variables_loops_conditions.c] [ERR ] <unknown>: Signature mismatch - expected 'char message[] = \"Hello\"', got 'char message[] = "Hello"'
[c Example Test: variables_loops_conditions.c] [ERR ] (null): Signature mismatch - expected 'char message[] = \"Hello\"', got 'char message[] = "Hello"'
[c Example Test: variables_loops_conditions.c] [ERR ] <unknown>: Type mismatch - expected 'LOOP_FOR', got 'VARIABLE'
[c Example Test: variables_loops_conditions.c] [ERR ] <unknown>: Child count mismatch - expected 1, got 0
[c Example Test: variables_loops_conditions.c] [ERR ] <unknown>: Name mismatch - expected 'for_loop', got 'j'
[c Example Test: variables_loops_conditions.c] [ERR ] <unknown>: Qualified name mismatch - expected 'variables_loops_conditions.c.main.for_loop', got 'variables_loops_conditions.c.main.j'
[c Example Test: variables_loops_conditions.c] [ERR ] <unknown>: Signature mismatch - expected 'for (int i = 0; i < 5; i++)', got 'int j = 0'
[c Example Test: variables_loops_conditions.c] [ERR ] <unknown>: Type mismatch - expected 'LOOP_FOR', got 'VARIABLE'
[c Example Test: variables_loops_conditions.c] [ERR ] (null): Name mismatch - expected 'for_loop', got 'j'
[c Example Test: variables_loops_conditions.c] [ERR ] (null): Qualified name mismatch - expected 'variables_loops_conditions.c.main.for_loop', got 'variables_loops_conditions.c.main.j'
[c Example Test: variables_loops_conditions.c] [ERR ] (null): Signature mismatch - expected 'for (int i = 0; i < 5; i++)', got 'int j = 0'
[c Example Test: variables_loops_conditions.c] [ERR ] (null): Expected 1 children, but node has no children array
[c Example Test: variables_loops_conditions.c] [ERR ] <unknown>: Type mismatch - expected 'VARIABLE', got 'LOOP_FOR'
[c Example Test: variables_loops_conditions.c] [ERR ] <unknown>: Child count mismatch - expected 0, got 1
[c Example Test: variables_loops_conditions.c] [ERR ] <unknown>: Name mismatch - expected 'j', got 'for_loop'
[c Example Test: variables_loops_conditions.c] [ERR ] <unknown>: Qualified name mismatch - expected 'variables_loops_conditions.c.main.j', got 'variables_loops_conditions.c.main.for_loop'
[c Example Test: variables_loops_conditions.c] [ERR ] <unknown>: Signature mismatch - expected 'int j = 0', got ''
[c Example Test: variables_loops_conditions.c] [ERR ] <unknown>: Type mismatch - expected 'VARIABLE', got 'LOOP_FOR'
[c Example Test: variables_loops_conditions.c] [ERR ] (null): Name mismatch - expected 'j', got 'for_loop'
[c Example Test: variables_loops_conditions.c] [ERR ] (null): Qualified name mismatch - expected 'variables_loops_conditions.c.main.j', got 'variables_loops_conditions.c.main.for_loop'
[c Example Test: variables_loops_conditions.c] [ERR ] (null): Signature mismatch - expected 'int j = 0', got ''
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [WARNING] (null): Children count mismatch - expected 0, got 1
[c Example Test: variables_loops_conditions.c] [ERR ] <unknown>: Signature mismatch - expected 'while (j < 3)', got ''
[c Example Test: variables_loops_conditions.c] [ERR ] (null): Signature mismatch - expected 'while (j < 3)', got ''
[c Example Test: variables_loops_conditions.c] [ERR ] <unknown>: Signature mismatch - expected 'if (count > 10)', got ''
[c Example Test: variables_loops_conditions.c] [ERR ] (null): Signature mismatch - expected 'if (count > 10)', got ''
[c Example Test: variables_loops_conditions.c] [ERR ] <unknown>: Signature mismatch - expected 'switch (j)', got ''
[c Example Test: variables_loops_conditions.c] [ERR ] (null): Signature mismatch - expected 'switch (j)', got ''
[c Example Test: variables_loops_conditions.c] [ERR ] <unknown>: Docstring mismatch - expected '/**\n * @brief Example of variables, loops, and conditions\n */', got '/**
[c Example Test: variables_loops_conditions.c] [ERR ]  * @brief Example of variables, loops, and conditions
[c Example Test: variables_loops_conditions.c] [ERR ]  */'
[c Example Test: variables_loops_conditions.c] [ERR ] (null): Docstring mismatch
[c Example Test: variables_loops_conditions.c] [ERR ] Expected docstring length: 63
[c Example Test: variables_loops_conditions.c] [ERR ] Actual docstring length: 61
[c Example Test: variables_loops_conditions.c] [ERR ] Expected docstring bytes:
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 0: 47 (0x2f) '/'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 1: 42 (0x2a) '*'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 2: 42 (0x2a) '*'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 3: 92 (0x5c) '\'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 4: 110 (0x6e) 'n'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 5: 32 (0x20) ' '
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 6: 42 (0x2a) '*'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 7: 32 (0x20) ' '
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 8: 64 (0x40) '@'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 9: 98 (0x62) 'b'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 10: 114 (0x72) 'r'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 11: 105 (0x69) 'i'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 12: 101 (0x65) 'e'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 13: 102 (0x66) 'f'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 14: 32 (0x20) ' '
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 15: 69 (0x45) 'E'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 16: 120 (0x78) 'x'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 17: 97 (0x61) 'a'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 18: 109 (0x6d) 'm'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 19: 112 (0x70) 'p'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 20: 108 (0x6c) 'l'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 21: 101 (0x65) 'e'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 22: 32 (0x20) ' '
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 23: 111 (0x6f) 'o'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 24: 102 (0x66) 'f'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 25: 32 (0x20) ' '
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 26: 118 (0x76) 'v'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 27: 97 (0x61) 'a'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 28: 114 (0x72) 'r'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 29: 105 (0x69) 'i'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 30: 97 (0x61) 'a'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 31: 98 (0x62) 'b'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 32: 108 (0x6c) 'l'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 33: 101 (0x65) 'e'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 34: 115 (0x73) 's'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 35: 44 (0x2c) ','
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 36: 32 (0x20) ' '
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 37: 108 (0x6c) 'l'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 38: 111 (0x6f) 'o'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 39: 111 (0x6f) 'o'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 40: 112 (0x70) 'p'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 41: 115 (0x73) 's'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 42: 44 (0x2c) ','
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 43: 32 (0x20) ' '
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 44: 97 (0x61) 'a'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 45: 110 (0x6e) 'n'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 46: 100 (0x64) 'd'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 47: 32 (0x20) ' '
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 48: 99 (0x63) 'c'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 49: 111 (0x6f) 'o'
[c Example Test: variables_loops_conditions.c] [ERR ] Actual docstring bytes:
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 0: 47 (0x2f) '/'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 1: 42 (0x2a) '*'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 2: 42 (0x2a) '*'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 3: 10 (0x0a) '?'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 4: 32 (0x20) ' '
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 5: 42 (0x2a) '*'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 6: 32 (0x20) ' '
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 7: 64 (0x40) '@'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 8: 98 (0x62) 'b'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 9: 114 (0x72) 'r'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 10: 105 (0x69) 'i'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 11: 101 (0x65) 'e'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 12: 102 (0x66) 'f'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 13: 32 (0x20) ' '
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 14: 69 (0x45) 'E'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 15: 120 (0x78) 'x'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 16: 97 (0x61) 'a'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 17: 109 (0x6d) 'm'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 18: 112 (0x70) 'p'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 19: 108 (0x6c) 'l'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 20: 101 (0x65) 'e'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 21: 32 (0x20) ' '
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 22: 111 (0x6f) 'o'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 23: 102 (0x66) 'f'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 24: 32 (0x20) ' '
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 25: 118 (0x76) 'v'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 26: 97 (0x61) 'a'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 27: 114 (0x72) 'r'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 28: 105 (0x69) 'i'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 29: 97 (0x61) 'a'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 30: 98 (0x62) 'b'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 31: 108 (0x6c) 'l'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 32: 101 (0x65) 'e'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 33: 115 (0x73) 's'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 34: 44 (0x2c) ','
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 35: 32 (0x20) ' '
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 36: 108 (0x6c) 'l'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 37: 111 (0x6f) 'o'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 38: 111 (0x6f) 'o'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 39: 112 (0x70) 'p'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 40: 115 (0x73) 's'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 41: 44 (0x2c) ','
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 42: 32 (0x20) ' '
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 43: 97 (0x61) 'a'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 44: 110 (0x6e) 'n'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 45: 100 (0x64) 'd'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 46: 32 (0x20) ' '
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 47: 99 (0x63) 'c'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 48: 111 (0x6f) 'o'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 49: 110 (0x6e) 'n'
[c Example Test: variables_loops_conditions.c] [ERR ] (null): Docstring mismatch
[c Example Test: variables_loops_conditions.c] [ERR ] Expected docstring length: 0
[c Example Test: variables_loops_conditions.c] [ERR ] Actual docstring length: 61
[c Example Test: variables_loops_conditions.c] [ERR ] Expected docstring bytes:
[c Example Test: variables_loops_conditions.c] [ERR ] Actual docstring bytes:
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 0: 47 (0x2f) '/'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 1: 42 (0x2a) '*'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 2: 42 (0x2a) '*'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 3: 10 (0x0a) '?'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 4: 32 (0x20) ' '
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 5: 42 (0x2a) '*'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 6: 32 (0x20) ' '
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 7: 64 (0x40) '@'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 8: 98 (0x62) 'b'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 9: 114 (0x72) 'r'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 10: 105 (0x69) 'i'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 11: 101 (0x65) 'e'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 12: 102 (0x66) 'f'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 13: 32 (0x20) ' '
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 14: 69 (0x45) 'E'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 15: 120 (0x78) 'x'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 16: 97 (0x61) 'a'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 17: 109 (0x6d) 'm'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 18: 112 (0x70) 'p'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 19: 108 (0x6c) 'l'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 20: 101 (0x65) 'e'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 21: 32 (0x20) ' '
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 22: 111 (0x6f) 'o'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 23: 102 (0x66) 'f'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 24: 32 (0x20) ' '
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 25: 118 (0x76) 'v'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 26: 97 (0x61) 'a'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 27: 114 (0x72) 'r'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 28: 105 (0x69) 'i'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 29: 97 (0x61) 'a'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 30: 98 (0x62) 'b'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 31: 108 (0x6c) 'l'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 32: 101 (0x65) 'e'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 33: 115 (0x73) 's'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 34: 44 (0x2c) ','
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 35: 32 (0x20) ' '
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 36: 108 (0x6c) 'l'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 37: 111 (0x6f) 'o'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 38: 111 (0x6f) 'o'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 39: 112 (0x70) 'p'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 40: 115 (0x73) 's'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 41: 44 (0x2c) ','
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 42: 32 (0x20) ' '
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 43: 97 (0x61) 'a'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 44: 110 (0x6e) 'n'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 45: 100 (0x64) 'd'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 46: 32 (0x20) ' '
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 47: 99 (0x63) 'c'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 48: 111 (0x6f) 'o'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 49: 110 (0x6e) 'n'
[c Example Test: variables_loops_conditions.c] [ERR ] (null): Signature mismatch - expected 'char message[] = \"Hello\"', got 'char message[] = "Hello"'
[c Example Test: variables_loops_conditions.c] [ERR ] <unknown>: Type mismatch - expected 'LOOP_FOR', got 'VARIABLE'
[c Example Test: variables_loops_conditions.c] [ERR ] (null): Name mismatch - expected 'for_loop', got 'j'
[c Example Test: variables_loops_conditions.c] [ERR ] (null): Qualified name mismatch - expected 'variables_loops_conditions.c.main.for_loop', got 'variables_loops_conditions.c.main.j'
[c Example Test: variables_loops_conditions.c] [ERR ] (null): Signature mismatch - expected 'for (int i = 0; i < 5; i++)', got 'int j = 0'
[c Example Test: variables_loops_conditions.c] [ERR ] (null): Expected 1 children, but node has no children array
[c Example Test: variables_loops_conditions.c] [ERR ] <unknown>: Type mismatch - expected 'VARIABLE', got 'LOOP_FOR'
[c Example Test: variables_loops_conditions.c] [ERR ] (null): Name mismatch - expected 'j', got 'for_loop'
[c Example Test: variables_loops_conditions.c] [ERR ] (null): Qualified name mismatch - expected 'variables_loops_conditions.c.main.j', got 'variables_loops_conditions.c.main.for_loop'
[c Example Test: variables_loops_conditions.c] [ERR ] (null): Signature mismatch - expected 'int j = 0', got ''
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [WARNING] (null): Children count mismatch - expected 0, got 1
[c Example Test: variables_loops_conditions.c] [ERR ] (null): Signature mismatch - expected 'while (j < 3)', got ''
[c Example Test: variables_loops_conditions.c] [ERR ] (null): Signature mismatch - expected 'if (count > 10)', got ''
[c Example Test: variables_loops_conditions.c] [ERR ] (null): Signature mismatch - expected 'switch (j)', got ''
[c Example Test: variables_loops_conditions.c] [ERR ] <unknown>: Docstring mismatch - expected '/**\n * @file variables_loops_conditions.c\n * @brief Demonstration of variables, loops, and conditional statements in C\n */', got '/**
[c Example Test: variables_loops_conditions.c] [ERR ]  * @file variables_loops_conditions.c
[c Example Test: variables_loops_conditions.c] [ERR ]  * @brief Demonstration of variables, loops, and conditional statements in C
[c Example Test: variables_loops_conditions.c] [ERR ]  *
[c Example Test: variables_loops_conditions.c] [ERR ]  * This example shows:
[c Example Test: variables_loops_conditions.c] [ERR ]  * - Various variable declarations and types
[c Example Test: variables_loops_conditions.c] [ERR ]  * - for, while, and do-while loops
[c Example Test: variables_loops_conditions.c] [ERR ]  * - if, else if, else conditions
[c Example Test: variables_loops_conditions.c] [ERR ]  * - switch statements
[c Example Test: variables_loops_conditions.c] [ERR ]  */'
[c Example Test: variables_loops_conditions.c] [ERR ] (null): Docstring mismatch
[c Example Test: variables_loops_conditions.c] [ERR ] Expected docstring length: 125
[c Example Test: variables_loops_conditions.c] [ERR ] Actual docstring length: 286
[c Example Test: variables_loops_conditions.c] [ERR ] Expected docstring bytes:
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 0: 47 (0x2f) '/'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 1: 42 (0x2a) '*'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 2: 42 (0x2a) '*'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 3: 92 (0x5c) '\'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 4: 110 (0x6e) 'n'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 5: 32 (0x20) ' '
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 6: 42 (0x2a) '*'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 7: 32 (0x20) ' '
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 8: 64 (0x40) '@'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 9: 102 (0x66) 'f'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 10: 105 (0x69) 'i'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 11: 108 (0x6c) 'l'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 12: 101 (0x65) 'e'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 13: 32 (0x20) ' '
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 14: 118 (0x76) 'v'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 15: 97 (0x61) 'a'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 16: 114 (0x72) 'r'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 17: 105 (0x69) 'i'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 18: 97 (0x61) 'a'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 19: 98 (0x62) 'b'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 20: 108 (0x6c) 'l'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 21: 101 (0x65) 'e'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 22: 115 (0x73) 's'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 23: 95 (0x5f) '_'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 24: 108 (0x6c) 'l'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 25: 111 (0x6f) 'o'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 26: 111 (0x6f) 'o'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 27: 112 (0x70) 'p'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 28: 115 (0x73) 's'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 29: 95 (0x5f) '_'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 30: 99 (0x63) 'c'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 31: 111 (0x6f) 'o'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 32: 110 (0x6e) 'n'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 33: 100 (0x64) 'd'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 34: 105 (0x69) 'i'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 35: 116 (0x74) 't'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 36: 105 (0x69) 'i'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 37: 111 (0x6f) 'o'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 38: 110 (0x6e) 'n'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 39: 115 (0x73) 's'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 40: 46 (0x2e) '.'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 41: 99 (0x63) 'c'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 42: 92 (0x5c) '\'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 43: 110 (0x6e) 'n'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 44: 32 (0x20) ' '
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 45: 42 (0x2a) '*'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 46: 32 (0x20) ' '
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 47: 64 (0x40) '@'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 48: 98 (0x62) 'b'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 49: 114 (0x72) 'r'
[c Example Test: variables_loops_conditions.c] [ERR ] Actual docstring bytes:
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 0: 47 (0x2f) '/'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 1: 42 (0x2a) '*'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 2: 42 (0x2a) '*'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 3: 10 (0x0a) '?'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 4: 32 (0x20) ' '
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 5: 42 (0x2a) '*'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 6: 32 (0x20) ' '
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 7: 64 (0x40) '@'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 8: 102 (0x66) 'f'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 9: 105 (0x69) 'i'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 10: 108 (0x6c) 'l'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 11: 101 (0x65) 'e'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 12: 32 (0x20) ' '
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 13: 118 (0x76) 'v'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 14: 97 (0x61) 'a'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 15: 114 (0x72) 'r'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 16: 105 (0x69) 'i'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 17: 97 (0x61) 'a'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 18: 98 (0x62) 'b'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 19: 108 (0x6c) 'l'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 20: 101 (0x65) 'e'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 21: 115 (0x73) 's'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 22: 95 (0x5f) '_'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 23: 108 (0x6c) 'l'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 24: 111 (0x6f) 'o'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 25: 111 (0x6f) 'o'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 26: 112 (0x70) 'p'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 27: 115 (0x73) 's'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 28: 95 (0x5f) '_'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 29: 99 (0x63) 'c'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 30: 111 (0x6f) 'o'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 31: 110 (0x6e) 'n'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 32: 100 (0x64) 'd'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 33: 105 (0x69) 'i'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 34: 116 (0x74) 't'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 35: 105 (0x69) 'i'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 36: 111 (0x6f) 'o'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 37: 110 (0x6e) 'n'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 38: 115 (0x73) 's'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 39: 46 (0x2e) '.'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 40: 99 (0x63) 'c'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 41: 10 (0x0a) '?'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 42: 32 (0x20) ' '
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 43: 42 (0x2a) '*'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 44: 32 (0x20) ' '
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 45: 64 (0x40) '@'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 46: 98 (0x62) 'b'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 47: 114 (0x72) 'r'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 48: 105 (0x69) 'i'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 49: 101 (0x65) 'e'
[c Example Test: variables_loops_conditions.c] [ERR ] (null): Docstring mismatch
[c Example Test: variables_loops_conditions.c] [ERR ] Expected docstring length: 63
[c Example Test: variables_loops_conditions.c] [ERR ] Actual docstring length: 61
[c Example Test: variables_loops_conditions.c] [ERR ] Expected docstring bytes:
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 0: 47 (0x2f) '/'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 1: 42 (0x2a) '*'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 2: 42 (0x2a) '*'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 3: 92 (0x5c) '\'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 4: 110 (0x6e) 'n'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 5: 32 (0x20) ' '
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 6: 42 (0x2a) '*'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 7: 32 (0x20) ' '
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 8: 64 (0x40) '@'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 9: 98 (0x62) 'b'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 10: 114 (0x72) 'r'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 11: 105 (0x69) 'i'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 12: 101 (0x65) 'e'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 13: 102 (0x66) 'f'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 14: 32 (0x20) ' '
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 15: 69 (0x45) 'E'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 16: 120 (0x78) 'x'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 17: 97 (0x61) 'a'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 18: 109 (0x6d) 'm'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 19: 112 (0x70) 'p'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 20: 108 (0x6c) 'l'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 21: 101 (0x65) 'e'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 22: 32 (0x20) ' '
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 23: 111 (0x6f) 'o'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 24: 102 (0x66) 'f'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 25: 32 (0x20) ' '
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 26: 118 (0x76) 'v'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 27: 97 (0x61) 'a'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 28: 114 (0x72) 'r'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 29: 105 (0x69) 'i'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 30: 97 (0x61) 'a'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 31: 98 (0x62) 'b'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 32: 108 (0x6c) 'l'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 33: 101 (0x65) 'e'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 34: 115 (0x73) 's'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 35: 44 (0x2c) ','
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 36: 32 (0x20) ' '
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 37: 108 (0x6c) 'l'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 38: 111 (0x6f) 'o'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 39: 111 (0x6f) 'o'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 40: 112 (0x70) 'p'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 41: 115 (0x73) 's'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 42: 44 (0x2c) ','
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 43: 32 (0x20) ' '
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 44: 97 (0x61) 'a'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 45: 110 (0x6e) 'n'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 46: 100 (0x64) 'd'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 47: 32 (0x20) ' '
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 48: 99 (0x63) 'c'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 49: 111 (0x6f) 'o'
[c Example Test: variables_loops_conditions.c] [ERR ] Actual docstring bytes:
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 0: 47 (0x2f) '/'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 1: 42 (0x2a) '*'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 2: 42 (0x2a) '*'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 3: 10 (0x0a) '?'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 4: 32 (0x20) ' '
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 5: 42 (0x2a) '*'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 6: 32 (0x20) ' '
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 7: 64 (0x40) '@'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 8: 98 (0x62) 'b'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 9: 114 (0x72) 'r'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 10: 105 (0x69) 'i'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 11: 101 (0x65) 'e'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 12: 102 (0x66) 'f'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 13: 32 (0x20) ' '
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 14: 69 (0x45) 'E'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 15: 120 (0x78) 'x'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 16: 97 (0x61) 'a'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 17: 109 (0x6d) 'm'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 18: 112 (0x70) 'p'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 19: 108 (0x6c) 'l'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 20: 101 (0x65) 'e'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 21: 32 (0x20) ' '
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 22: 111 (0x6f) 'o'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 23: 102 (0x66) 'f'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 24: 32 (0x20) ' '
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 25: 118 (0x76) 'v'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 26: 97 (0x61) 'a'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 27: 114 (0x72) 'r'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 28: 105 (0x69) 'i'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 29: 97 (0x61) 'a'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 30: 98 (0x62) 'b'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 31: 108 (0x6c) 'l'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 32: 101 (0x65) 'e'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 33: 115 (0x73) 's'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 34: 44 (0x2c) ','
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 35: 32 (0x20) ' '
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 36: 108 (0x6c) 'l'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 37: 111 (0x6f) 'o'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 38: 111 (0x6f) 'o'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 39: 112 (0x70) 'p'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 40: 115 (0x73) 's'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 41: 44 (0x2c) ','
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 42: 32 (0x20) ' '
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 43: 97 (0x61) 'a'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 44: 110 (0x6e) 'n'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 45: 100 (0x64) 'd'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 46: 32 (0x20) ' '
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 47: 99 (0x63) 'c'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 48: 111 (0x6f) 'o'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 49: 110 (0x6e) 'n'
[c Example Test: variables_loops_conditions.c] [ERR ] (null): Docstring mismatch
[c Example Test: variables_loops_conditions.c] [ERR ] Expected docstring length: 0
[c Example Test: variables_loops_conditions.c] [ERR ] Actual docstring length: 61
[c Example Test: variables_loops_conditions.c] [ERR ] Expected docstring bytes:
[c Example Test: variables_loops_conditions.c] [ERR ] Actual docstring bytes:
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 0: 47 (0x2f) '/'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 1: 42 (0x2a) '*'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 2: 42 (0x2a) '*'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 3: 10 (0x0a) '?'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 4: 32 (0x20) ' '
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 5: 42 (0x2a) '*'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 6: 32 (0x20) ' '
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 7: 64 (0x40) '@'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 8: 98 (0x62) 'b'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 9: 114 (0x72) 'r'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 10: 105 (0x69) 'i'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 11: 101 (0x65) 'e'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 12: 102 (0x66) 'f'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 13: 32 (0x20) ' '
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 14: 69 (0x45) 'E'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 15: 120 (0x78) 'x'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 16: 97 (0x61) 'a'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 17: 109 (0x6d) 'm'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 18: 112 (0x70) 'p'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 19: 108 (0x6c) 'l'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 20: 101 (0x65) 'e'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 21: 32 (0x20) ' '
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 22: 111 (0x6f) 'o'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 23: 102 (0x66) 'f'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 24: 32 (0x20) ' '
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 25: 118 (0x76) 'v'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 26: 97 (0x61) 'a'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 27: 114 (0x72) 'r'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 28: 105 (0x69) 'i'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 29: 97 (0x61) 'a'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 30: 98 (0x62) 'b'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 31: 108 (0x6c) 'l'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 32: 101 (0x65) 'e'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 33: 115 (0x73) 's'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 34: 44 (0x2c) ','
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 35: 32 (0x20) ' '
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 36: 108 (0x6c) 'l'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 37: 111 (0x6f) 'o'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 38: 111 (0x6f) 'o'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 39: 112 (0x70) 'p'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 40: 115 (0x73) 's'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 41: 44 (0x2c) ','
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 42: 32 (0x20) ' '
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 43: 97 (0x61) 'a'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 44: 110 (0x6e) 'n'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 45: 100 (0x64) 'd'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 46: 32 (0x20) ' '
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 47: 99 (0x63) 'c'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 48: 111 (0x6f) 'o'
[c Example Test: variables_loops_conditions.c] [ERR ] Byte 49: 110 (0x6e) 'n'
[c Example Test: variables_loops_conditions.c] [ERR ] (null): Signature mismatch - expected 'char message[] = \"Hello\"', got 'char message[] = "Hello"'
[c Example Test: variables_loops_conditions.c] [ERR ] <unknown>: Type mismatch - expected 'LOOP_FOR', got 'VARIABLE'
[c Example Test: variables_loops_conditions.c] [ERR ] (null): Name mismatch - expected 'for_loop', got 'j'
[c Example Test: variables_loops_conditions.c] [ERR ] (null): Qualified name mismatch - expected 'variables_loops_conditions.c.main.for_loop', got 'variables_loops_conditions.c.main.j'
[c Example Test: variables_loops_conditions.c] [ERR ] (null): Signature mismatch - expected 'for (int i = 0; i < 5; i++)', got 'int j = 0'
[c Example Test: variables_loops_conditions.c] [ERR ] (null): Expected 1 children, but node has no children array
[c Example Test: variables_loops_conditions.c] [ERR ] <unknown>: Type mismatch - expected 'VARIABLE', got 'LOOP_FOR'
[c Example Test: variables_loops_conditions.c] [ERR ] (null): Name mismatch - expected 'j', got 'for_loop'
[c Example Test: variables_loops_conditions.c] [ERR ] (null): Qualified name mismatch - expected 'variables_loops_conditions.c.main.j', got 'variables_loops_conditions.c.main.for_loop'
[c Example Test: variables_loops_conditions.c] [ERR ] (null): Signature mismatch - expected 'int j = 0', got ''
[c Example Test: variables_loops_conditions.c] [2025-08-02 23:23:42] [WARNING] (null): Children count mismatch - expected 0, got 1
[c Example Test: variables_loops_conditions.c] [ERR ] (null): Signature mismatch - expected 'while (j < 3)', got ''
[c Example Test: variables_loops_conditions.c] [ERR ] (null): Signature mismatch - expected 'if (count > 10)', got ''
[c Example Test: variables_loops_conditions.c] [ERR ] (null): Signature mismatch - expected 'switch (j)', got ''
[c Example Test: variables_loops_conditions.c] 
[c Example Test: variables_loops_conditions.c] ========== AST/JSON MISMATCH ==========
[c Example Test: variables_loops_conditions.c] ACTUAL AST (as JSON):
[c Example Test: variables_loops_conditions.c] {
[c Example Test: variables_loops_conditions.c]   "type": "ROOT",
[c Example Test: variables_loops_conditions.c]   "name": "variables_loops_conditions.c",
[c Example Test: variables_loops_conditions.c]   "qualified_name": "variables_loops_conditions.c",
[c Example Test: variables_loops_conditions.c]   "signature": "",
[c Example Test: variables_loops_conditions.c]   "docstring": "/**\n * @file variables_loops_conditions.c\n * @brief Demonstration of variables, loops, and conditional statements in C\n *\n * This example shows:\n * - Various variable declarations and types\n * - for, while, and do-while loops\n * - if, else if, else conditions\n * - switch statements\n */",
[c Example Test: variables_loops_conditions.c]   "children": [
[c Example Test: variables_loops_conditions.c]     {
[c Example Test: variables_loops_conditions.c]       "type": "INCLUDE",
[c Example Test: variables_loops_conditions.c]       "name": "<stdio.h>",
[c Example Test: variables_loops_conditions.c]       "qualified_name": "variables_loops_conditions.c.<stdio.h>",
[c Example Test: variables_loops_conditions.c]       "signature": "",
[c Example Test: variables_loops_conditions.c]       "docstring": "",
[c Example Test: variables_loops_conditions.c]       "children": [      ]
[c Example Test: variables_loops_conditions.c]     },
[c Example Test: variables_loops_conditions.c]     {
[c Example Test: variables_loops_conditions.c]       "type": "FUNCTION",
[c Example Test: variables_loops_conditions.c]       "name": "main",
[c Example Test: variables_loops_conditions.c]       "qualified_name": "variables_loops_conditions.c.main",
[c Example Test: variables_loops_conditions.c]       "signature": "int main(void)",
[c Example Test: variables_loops_conditions.c]       "docstring": "/**\n * @brief Example of variables, loops, and conditions\n */",
[c Example Test: variables_loops_conditions.c]       "children": [
[c Example Test: variables_loops_conditions.c]         {
[c Example Test: variables_loops_conditions.c]           "type": "VARIABLE",
[c Example Test: variables_loops_conditions.c]           "name": "count",
[c Example Test: variables_loops_conditions.c]           "qualified_name": "variables_loops_conditions.c.main.count",
[c Example Test: variables_loops_conditions.c]           "signature": "int count = 0",
[c Example Test: variables_loops_conditions.c]           "docstring": "/**\n * @brief Example of variables, loops, and conditions\n */",
[c Example Test: variables_loops_conditions.c]           "children": [          ]
[c Example Test: variables_loops_conditions.c]         },
[c Example Test: variables_loops_conditions.c]         {
[c Example Test: variables_loops_conditions.c]           "type": "VARIABLE",
[c Example Test: variables_loops_conditions.c]           "name": "pi",
[c Example Test: variables_loops_conditions.c]           "qualified_name": "variables_loops_conditions.c.main.pi",
[c Example Test: variables_loops_conditions.c]           "signature": "float pi = 3.14159f",
[c Example Test: variables_loops_conditions.c]           "docstring": "",
[c Example Test: variables_loops_conditions.c]           "children": [          ]
[c Example Test: variables_loops_conditions.c]         },
[c Example Test: variables_loops_conditions.c]         {
[c Example Test: variables_loops_conditions.c]           "type": "VARIABLE",
[c Example Test: variables_loops_conditions.c]           "name": "message",
[c Example Test: variables_loops_conditions.c]           "qualified_name": "variables_loops_conditions.c.main.message",
[c Example Test: variables_loops_conditions.c]           "signature": "char message[] = "Hello"",
[c Example Test: variables_loops_conditions.c]           "docstring": "",
[c Example Test: variables_loops_conditions.c]           "children": [          ]
[c Example Test: variables_loops_conditions.c]         },
[c Example Test: variables_loops_conditions.c]         {
[c Example Test: variables_loops_conditions.c]           "type": "VARIABLE",
[c Example Test: variables_loops_conditions.c]           "name": "j",
[c Example Test: variables_loops_conditions.c]           "qualified_name": "variables_loops_conditions.c.main.j",
[c Example Test: variables_loops_conditions.c]           "signature": "int j = 0",
[c Example Test: variables_loops_conditions.c]           "docstring": "",
[c Example Test: variables_loops_conditions.c]           "children": [          ]
[c Example Test: variables_loops_conditions.c]         },
[c Example Test: variables_loops_conditions.c]         {
[c Example Test: variables_loops_conditions.c]           "type": "FOR_STATEMENT",
[c Example Test: variables_loops_conditions.c]           "name": "for_loop",
[c Example Test: variables_loops_conditions.c]           "qualified_name": "variables_loops_conditions.c.main.for_loop",
[c Example Test: variables_loops_conditions.c]           "signature": "",
[c Example Test: variables_loops_conditions.c]           "docstring": "",
[c Example Test: variables_loops_conditions.c]           "children": [
[c Example Test: variables_loops_conditions.c]             {
[c Example Test: variables_loops_conditions.c]               "type": "VARIABLE",
[c Example Test: variables_loops_conditions.c]               "name": "i",
[c Example Test: variables_loops_conditions.c]               "qualified_name": "variables_loops_conditions.c.main.i",
[c Example Test: variables_loops_conditions.c]               "signature": "int i = 0",
[c Example Test: variables_loops_conditions.c]               "docstring": "",
[c Example Test: variables_loops_conditions.c]               "children": [              ]
[c Example Test: variables_loops_conditions.c]             }
[c Example Test: variables_loops_conditions.c]           ]
[c Example Test: variables_loops_conditions.c]         },
[c Example Test: variables_loops_conditions.c]         {
[c Example Test: variables_loops_conditions.c]           "type": "WHILE_STATEMENT",
[c Example Test: variables_loops_conditions.c]           "name": "while_loop",
[c Example Test: variables_loops_conditions.c]           "qualified_name": "variables_loops_conditions.c.main.while_loop",
[c Example Test: variables_loops_conditions.c]           "signature": "",
[c Example Test: variables_loops_conditions.c]           "docstring": "",
[c Example Test: variables_loops_conditions.c]           "children": [          ]
[c Example Test: variables_loops_conditions.c]         },
[c Example Test: variables_loops_conditions.c]         {
[c Example Test: variables_loops_conditions.c]           "type": "IF_STATEMENT",
[c Example Test: variables_loops_conditions.c]           "name": "if_condition",
[c Example Test: variables_loops_conditions.c]           "qualified_name": "variables_loops_conditions.c.main.if_condition",
[c Example Test: variables_loops_conditions.c]           "signature": "",
[c Example Test: variables_loops_conditions.c]           "docstring": "",
[c Example Test: variables_loops_conditions.c]           "children": [          ]
[c Example Test: variables_loops_conditions.c]         },
[c Example Test: variables_loops_conditions.c]         {
[c Example Test: variables_loops_conditions.c]           "type": "SWITCH_STATEMENT",
[c Example Test: variables_loops_conditions.c]           "name": "switch_condition",
[c Example Test: variables_loops_conditions.c]           "qualified_name": "variables_loops_conditions.c.main.switch_condition",
[c Example Test: variables_loops_conditions.c]           "signature": "",
[c Example Test: variables_loops_conditions.c]           "docstring": "",
[c Example Test: variables_loops_conditions.c]           "children": [          ]
[c Example Test: variables_loops_conditions.c]         }
[c Example Test: variables_loops_conditions.c]       ]
[c Example Test: variables_loops_conditions.c]     }
[c Example Test: variables_loops_conditions.c]   ]
[c Example Test: variables_loops_conditions.c] }
[c Example Test: variables_loops_conditions.c] EXPECTED AST SECTION:
[c Example Test: variables_loops_conditions.c] [scopemux] Loading hardcoded node type mappings:
[c Example Test: variables_loops_conditions.c]   functions -> NODE_FUNCTION
[c Example Test: variables_loops_conditions.c]   classes -> NODE_CLASS
[c Example Test: variables_loops_conditions.c]   methods -> NODE_METHOD
[c Example Test: variables_loops_conditions.c]   variables -> NODE_VARIABLE
[c Example Test: variables_loops_conditions.c]   modules -> NODE_MODULE
[c Example Test: variables_loops_conditions.c]   structs -> NODE_STRUCT
[c Example Test: variables_loops_conditions.c]   unions -> NODE_UNION
[c Example Test: variables_loops_conditions.c]   enums -> NODE_ENUM
[c Example Test: variables_loops_conditions.c]   typedefs -> NODE_TYPEDEF
[c Example Test: variables_loops_conditions.c]   includes -> NODE_INCLUDE
[c Example Test: variables_loops_conditions.c]   macros -> NODE_MACRO
[c Example Test: variables_loops_conditions.c]   docstrings -> NODE_DOCSTRING
[c Example Test: variables_loops_conditions.c]   interfaces -> NODE_INTERFACE
[c Example Test: variables_loops_conditions.c]   template_specializations -> NODE_TEMPLATE_SPECIALIZATION
[c Example Test: variables_loops_conditions.c] {
[c Example Test: variables_loops_conditions.c]   "type":   "ROOT",
[c Example Test: variables_loops_conditions.c]   "name":   "variables_loops_conditions.c",
[c Example Test: variables_loops_conditions.c]   "qualified_name":   "variables_loops_conditions.c",
[c Example Test: variables_loops_conditions.c]   "signature":   "",
[c Example Test: variables_loops_conditions.c]   "docstring":   "/**\n * @file variables_loops_conditions.c\n * @brief Demonstration of variables, loops, and conditional statements in C\n */",
[c Example Test: variables_loops_conditions.c]   "children":   [
[c Example Test: variables_loops_conditions.c]     {
[c Example Test: variables_loops_conditions.c]       "type":       "INCLUDE",
[c Example Test: variables_loops_conditions.c]       "name":       "<stdio.h>",
[c Example Test: variables_loops_conditions.c]       "qualified_name":       "variables_loops_conditions.c.<stdio.h>",
[c Example Test: variables_loops_conditions.c]       "signature":       "",
[c Example Test: variables_loops_conditions.c]       "docstring":       "",
[c Example Test: variables_loops_conditions.c]       "children":       [
[c Example Test: variables_loops_conditions.c]       ]
[c Example Test: variables_loops_conditions.c]     },
[c Example Test: variables_loops_conditions.c]     {
[c Example Test: variables_loops_conditions.c]       "type":       "FUNCTION",
[c Example Test: variables_loops_conditions.c]       "name":       "main",
[c Example Test: variables_loops_conditions.c]       "qualified_name":       "variables_loops_conditions.c.main",
[c Example Test: variables_loops_conditions.c]       "signature":       "int main(void)",
[c Example Test: variables_loops_conditions.c]       "docstring":       "/**\n * @brief Example of variables, loops, and conditions\n */",
[c Example Test: variables_loops_conditions.c]       "children":       [
[c Example Test: variables_loops_conditions.c]         {
[c Example Test: variables_loops_conditions.c]           "type":           "VARIABLE",
[c Example Test: variables_loops_conditions.c]           "name":           "count",
[c Example Test: variables_loops_conditions.c]           "qualified_name":           "variables_loops_conditions.c.main.count",
[c Example Test: variables_loops_conditions.c]           "signature":           "int count = 0",
[c Example Test: variables_loops_conditions.c]           "docstring":           "",
[c Example Test: variables_loops_conditions.c]           "children":           [
[c Example Test: variables_loops_conditions.c]           ]
[c Example Test: variables_loops_conditions.c]         },
[c Example Test: variables_loops_conditions.c]         {
[c Example Test: variables_loops_conditions.c]           "type":           "VARIABLE",
[c Example Test: variables_loops_conditions.c]           "name":           "pi",
[c Example Test: variables_loops_conditions.c]           "qualified_name":           "variables_loops_conditions.c.main.pi",
[c Example Test: variables_loops_conditions.c]           "signature":           "float pi = 3.14159f",
[c Example Test: variables_loops_conditions.c]           "docstring":           "",
[c Example Test: variables_loops_conditions.c]           "children":           [
[c Example Test: variables_loops_conditions.c]           ]
[c Example Test: variables_loops_conditions.c]         },
[c Example Test: variables_loops_conditions.c]         {
[c Example Test: variables_loops_conditions.c]           "type":           "VARIABLE",
[c Example Test: variables_loops_conditions.c]           "name":           "message",
[c Example Test: variables_loops_conditions.c]           "qualified_name":           "variables_loops_conditions.c.main.message",
[c Example Test: variables_loops_conditions.c]           "signature":           "char message[] = \"Hello\"",
[c Example Test: variables_loops_conditions.c]           "docstring":           "",
[c Example Test: variables_loops_conditions.c]           "children":           [
[c Example Test: variables_loops_conditions.c]           ]
[c Example Test: variables_loops_conditions.c]         },
[c Example Test: variables_loops_conditions.c]         {
[c Example Test: variables_loops_conditions.c]           "type":           "LOOP_FOR",
[c Example Test: variables_loops_conditions.c]           "name":           "for_loop",
[c Example Test: variables_loops_conditions.c]           "qualified_name":           "variables_loops_conditions.c.main.for_loop",
[c Example Test: variables_loops_conditions.c]           "signature":           "for (int i = 0; i < 5; i++)",
[c Example Test: variables_loops_conditions.c]           "docstring":           "",
[c Example Test: variables_loops_conditions.c]           "children":           [
[c Example Test: variables_loops_conditions.c]             {
[c Example Test: variables_loops_conditions.c]               "type":               "VARIABLE",
[c Example Test: variables_loops_conditions.c]               "name":               "i",
[c Example Test: variables_loops_conditions.c]               "qualified_name":               "variables_loops_conditions.c.main.i",
[c Example Test: variables_loops_conditions.c]               "signature":               "int i = 0",
[c Example Test: variables_loops_conditions.c]               "docstring":               "",
[c Example Test: variables_loops_conditions.c]               "children":               [
[c Example Test: variables_loops_conditions.c]               ]
[c Example Test: variables_loops_conditions.c]             }
[c Example Test: variables_loops_conditions.c]           ]
[c Example Test: variables_loops_conditions.c]         },
[c Example Test: variables_loops_conditions.c]         {
[c Example Test: variables_loops_conditions.c]           "type":           "VARIABLE",
[c Example Test: variables_loops_conditions.c]           "name":           "j",
[c Example Test: variables_loops_conditions.c]           "qualified_name":           "variables_loops_conditions.c.main.j",
[c Example Test: variables_loops_conditions.c]           "signature":           "int j = 0",
[c Example Test: variables_loops_conditions.c]           "docstring":           "",
[c Example Test: variables_loops_conditions.c]           "children":           [
[c Example Test: variables_loops_conditions.c]           ]
[c Example Test: variables_loops_conditions.c]         },
[c Example Test: variables_loops_conditions.c]         {
[c Example Test: variables_loops_conditions.c]           "type":           "LOOP_WHILE",
[c Example Test: variables_loops_conditions.c]           "name":           "while_loop",
[c Example Test: variables_loops_conditions.c]           "qualified_name":           "variables_loops_conditions.c.main.while_loop",
[c Example Test: variables_loops_conditions.c]           "signature":           "while (j < 3)",
[c Example Test: variables_loops_conditions.c]           "docstring":           "",
[c Example Test: variables_loops_conditions.c]           "children":           [
[c Example Test: variables_loops_conditions.c]           ]
[c Example Test: variables_loops_conditions.c]         },
[c Example Test: variables_loops_conditions.c]         {
[c Example Test: variables_loops_conditions.c]           "type":           "CONDITION_IF",
[c Example Test: variables_loops_conditions.c]           "name":           "if_condition",
[c Example Test: variables_loops_conditions.c]           "qualified_name":           "variables_loops_conditions.c.main.if_condition",
[c Example Test: variables_loops_conditions.c]           "signature":           "if (count > 10)",
[c Example Test: variables_loops_conditions.c]           "docstring":           "",
[c Example Test: variables_loops_conditions.c]           "children":           [
[c Example Test: variables_loops_conditions.c]           ]
[c Example Test: variables_loops_conditions.c]         },
[c Example Test: variables_loops_conditions.c]         {
[c Example Test: variables_loops_conditions.c]           "type":           "CONDITION_SWITCH",
[c Example Test: variables_loops_conditions.c]           "name":           "switch_condition",
[c Example Test: variables_loops_conditions.c]           "qualified_name":           "variables_loops_conditions.c.main.switch_condition",
[c Example Test: variables_loops_conditions.c]           
[c Example Test: variables_loops_conditions.c] =======================================
[c Example Test: variables_loops_conditions.c] [DEBUG] parser_clear starting for ctx=0x60d000000110
[c Example Test: variables_loops_conditions.c] [DEBUG] ctx->num_ast_nodes=16
[c Example Test: variables_loops_conditions.c] [WARNING] Attempting to clear the same context twice: 0x60d000000110
[c Example Test: variables_loops_conditions.c] "signature":           "switch (j)",
[c Example Test: variables_loops_conditions.c]           "docstring":           "",
[c Example Test: variables_loops_conditions.c]           "children":           [
[c Example Test: variables_loops_conditions.c]           ]
[c Example Test: variables_loops_conditions.c]         }
[c Example Test: variables_loops_conditions.c]       ]
[c Example Test: variables_loops_conditions.c]     }
[c Example Test: variables_loops_conditions.c]   ]
[c Example Test: variables_loops_conditions.c] }[QUERY_MANAGER_FREE] ENTER: manager=0x606000013b80
[c Example Test: variables_loops_conditions.c] [QUERY_MANAGER_FREE] Freeing queries_dir at 0x603000012580
[c Example Test: variables_loops_conditions.c] [QUERY_MANAGER_FREE] Freeing cached queries array at 0x604000002110 (language_count=6)
[c Example Test: variables_loops_conditions.c] [QUERY_MANAGER_FREE] Freeing cached queries for language 0 at 0x6110000011c0 (query_count=0)
[c Example Test: variables_loops_conditions.c] [QUERY_MANAGER_FREE] Freeing QueryCacheEntry array at 0x6110000011c0
[c Example Test: variables_loops_conditions.c] [QUERY_MANAGER_FREE] Freeing cached queries for language 1 at 0x611000001300 (query_count=8)
[c Example Test: variables_loops_conditions.c] [QUERY_MANAGER_FREE] Freeing QueryCacheEntry array at 0x611000001300
[c Example Test: variables_loops_conditions.c] [QUERY_MANAGER_FREE] Freeing cached queries for language 2 at 0x611000001440 (query_count=0)
[c Example Test: variables_loops_conditions.c] [QUERY_MANAGER_FREE] Freeing QueryCacheEntry array at 0x611000001440
[c Example Test: variables_loops_conditions.c] [QUERY_MANAGER_FREE] Freeing cached queries for language 3 at 0x611000001580 (query_count=0)
[c Example Test: variables_loops_conditions.c] [QUERY_MANAGER_FREE] Freeing QueryCacheEntry array at 0x611000001580
[c Example Test: variables_loops_conditions.c] [QUERY_MANAGER_FREE] Freeing cached queries for language 4 at 0x6110000016c0 (query_count=0)
[c Example Test: variables_loops_conditions.c] [QUERY_MANAGER_FREE] Freeing QueryCacheEntry array at 0x6110000016c0
[c Example Test: variables_loops_conditions.c] [QUERY_MANAGER_FREE] Freeing cached queries for language 5 at 0x611000001800 (query_count=0)
[c Example Test: variables_loops_conditions.c] [QUERY_MANAGER_FREE] Freeing QueryCacheEntry array at 0x611000001800
[c Example Test: variables_loops_conditions.c] [QUERY_MANAGER_FREE] Freeing cached_queries array at 0x604000002110
[c Example Test: variables_loops_conditions.c] [QUERY_MANAGER_FREE] Freeing languages array at 0x6040000020d0
[c Example Test: variables_loops_conditions.c] [QUERY_MANAGER_FREE] Freeing language_types array at 0x6030000125b0
[c Example Test: variables_loops_conditions.c] [QUERY_MANAGER_FREE] Freeing query_counts array at 0x604000002150
[c Example Test: variables_loops_conditions.c] [QUERY_MANAGER_FREE] Freeing manager struct at 0x606000013b80
[c Example Test: variables_loops_conditions.c] [QUERY_MANAGER_FREE] EXIT: Query manager cleanup complete
[c Example Test: variables_loops_conditions.c] [----] ../../../core/tests/src/c/c_example_ast_tests.c:45: Assertion Failed
[c Example Test: variables_loops_conditions.c] [----]   
[c Example Test: variables_loops_conditions.c] [----]   AST test failed for basic_syntax/variables_loops_conditions.c
[c Example Test: variables_loops_conditions.c] [----]   
[c Example Test: variables_loops_conditions.c] [FAIL] c_examples::all_examples: (0.47s)
 FAIL: c Example Test: variables_loops_conditions.c (3/)
[test_runner_lib] 3 tests failed in directory: core/tests/examples/c/basic_syntax
[1;31m FAIL: c/basic_syntax (0/3 tests passed, 3 problems in directory)[0m

=======================================================================
                      TEST EXECUTION SUMMARY                          
=======================================================================
Total execution time: 18 seconds

Test Suite                               | Result  
------------------------------------------|----------
[1;31mc/basic_syntax                           |  FAIL   [0m

 TESTS FAILED: 1
[test_runner_lib] Cleaning up temporary files...
[test_runner_lib] Done.
